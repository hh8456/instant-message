// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: db_struct.proto

// import "common.proto";

package db_struct

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// weibo 表的 photos_bin 字段; 2019.11.15, 黄海
type WeiboPhotos struct {
	Photos               []string `protobuf:"bytes,1,rep,name=photos,proto3" json:"photos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeiboPhotos) Reset()         { *m = WeiboPhotos{} }
func (m *WeiboPhotos) String() string { return proto.CompactTextString(m) }
func (*WeiboPhotos) ProtoMessage()    {}
func (*WeiboPhotos) Descriptor() ([]byte, []int) {
	return fileDescriptor_b265d57f6cd12c6c, []int{0}
}
func (m *WeiboPhotos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WeiboPhotos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WeiboPhotos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WeiboPhotos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeiboPhotos.Merge(m, src)
}
func (m *WeiboPhotos) XXX_Size() int {
	return m.Size()
}
func (m *WeiboPhotos) XXX_DiscardUnknown() {
	xxx_messageInfo_WeiboPhotos.DiscardUnknown(m)
}

var xxx_messageInfo_WeiboPhotos proto.InternalMessageInfo

func (m *WeiboPhotos) GetPhotos() []string {
	if m != nil {
		return m.Photos
	}
	return nil
}

func init() {
	proto.RegisterType((*WeiboPhotos)(nil), "db_struct.weiboPhotos")
}

func init() { proto.RegisterFile("db_struct.proto", fileDescriptor_b265d57f6cd12c6c) }

var fileDescriptor_b265d57f6cd12c6c = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x49, 0x8a, 0x2f,
	0x2e, 0x29, 0x2a, 0x4d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0xa9, 0x72, 0x71, 0x97, 0xa7, 0x66, 0x26, 0xe5, 0x07, 0x64, 0xe4, 0x97, 0xe4, 0x17, 0x0b, 0x89,
	0x71, 0xb1, 0x15, 0x80, 0x59, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0x9c, 0x41, 0x50, 0x9e, 0x93, 0xc3,
	0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe3, 0xb1, 0x1c,
	0x43, 0x94, 0x5e, 0x66, 0x5e, 0x71, 0x49, 0x62, 0x5e, 0x89, 0x6e, 0x6e, 0x6a, 0x71, 0x71, 0x62,
	0x7a, 0xaa, 0x7e, 0x72, 0x7e, 0x6e, 0x6e, 0x7e, 0x9e, 0x6e, 0x4e, 0x66, 0x52, 0x51, 0x62, 0x51,
	0xa5, 0x3e, 0xd8, 0x26, 0x7d, 0xb8, 0x45, 0x49, 0x6c, 0x60, 0x01, 0x63, 0x40, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xa8, 0x9c, 0xc0, 0x11, 0x8d, 0x00, 0x00, 0x00,
}

func (m *WeiboPhotos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WeiboPhotos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WeiboPhotos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Photos) > 0 {
		for iNdEx := len(m.Photos) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Photos[iNdEx])
			copy(dAtA[i:], m.Photos[iNdEx])
			i = encodeVarintDbStruct(dAtA, i, uint64(len(m.Photos[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintDbStruct(dAtA []byte, offset int, v uint64) int {
	offset -= sovDbStruct(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *WeiboPhotos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Photos) > 0 {
		for _, s := range m.Photos {
			l = len(s)
			n += 1 + l + sovDbStruct(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDbStruct(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDbStruct(x uint64) (n int) {
	return sovDbStruct(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *WeiboPhotos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDbStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: weiboPhotos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: weiboPhotos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photos", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDbStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDbStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDbStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Photos = append(m.Photos, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDbStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDbStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDbStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDbStruct(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDbStruct
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDbStruct
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDbStruct
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDbStruct
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthDbStruct
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowDbStruct
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipDbStruct(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthDbStruct
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthDbStruct = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDbStruct   = fmt.Errorf("proto: integer overflow")
)
