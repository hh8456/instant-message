// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: msg_struct.proto

package msg_struct

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 获取验证码用途
type VerificationCodeAction int32

const (
	// 注册
	VerificationCodeAction_register VerificationCodeAction = 0
	// 忘记密码
	VerificationCodeAction_forget_password VerificationCodeAction = 1
)

var VerificationCodeAction_name = map[int32]string{
	0: "register",
	1: "forget_password",
}

var VerificationCodeAction_value = map[string]int32{
	"register":        0,
	"forget_password": 1,
}

func (x VerificationCodeAction) String() string {
	return proto.EnumName(VerificationCodeAction_name, int32(x))
}

func (VerificationCodeAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{0}
}

type FriendLookWeiboStrategy int32

const (
	// 全部可看(默认)
	FriendLookWeiboStrategy_undefined FriendLookWeiboStrategy = 0
	// 半年
	FriendLookWeiboStrategy_halfYear FriendLookWeiboStrategy = 1
	// 一个月
	FriendLookWeiboStrategy_oneMonth FriendLookWeiboStrategy = 2
	// 三天
	FriendLookWeiboStrategy_threeDays FriendLookWeiboStrategy = 3
)

var FriendLookWeiboStrategy_name = map[int32]string{
	0: "undefined",
	1: "halfYear",
	2: "oneMonth",
	3: "threeDays",
}

var FriendLookWeiboStrategy_value = map[string]int32{
	"undefined": 0,
	"halfYear":  1,
	"oneMonth":  2,
	"threeDays": 3,
}

func (x FriendLookWeiboStrategy) String() string {
	return proto.EnumName(FriendLookWeiboStrategy_name, int32(x))
}

func (FriendLookWeiboStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{1}
}

type WebSocketMessage struct {
	MsgId                int32    `protobuf:"varint,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	MsgIdStr             string   `protobuf:"bytes,2,opt,name=msgIdStr,proto3" json:"msgIdStr,omitempty"`
	BinMsg               []byte   `protobuf:"bytes,3,opt,name=binMsg,proto3" json:"binMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebSocketMessage) Reset()         { *m = WebSocketMessage{} }
func (m *WebSocketMessage) String() string { return proto.CompactTextString(m) }
func (*WebSocketMessage) ProtoMessage()    {}
func (*WebSocketMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{0}
}
func (m *WebSocketMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebSocketMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebSocketMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WebSocketMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebSocketMessage.Merge(m, src)
}
func (m *WebSocketMessage) XXX_Size() int {
	return m.Size()
}
func (m *WebSocketMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_WebSocketMessage.DiscardUnknown(m)
}

var xxx_messageInfo_WebSocketMessage proto.InternalMessageInfo

func (m *WebSocketMessage) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *WebSocketMessage) GetMsgIdStr() string {
	if m != nil {
		return m.MsgIdStr
	}
	return ""
}

func (m *WebSocketMessage) GetBinMsg() []byte {
	if m != nil {
		return m.BinMsg
	}
	return nil
}

type S2CErrorCode struct {
	ErrCode              int64    `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	MsgTimeStamp         int64    `protobuf:"varint,2,opt,name=msgTimeStamp,proto3" json:"msgTimeStamp,omitempty"`
	ErrNotice            string   `protobuf:"bytes,3,opt,name=errNotice,proto3" json:"errNotice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CErrorCode) Reset()         { *m = S2CErrorCode{} }
func (m *S2CErrorCode) String() string { return proto.CompactTextString(m) }
func (*S2CErrorCode) ProtoMessage()    {}
func (*S2CErrorCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{1}
}
func (m *S2CErrorCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CErrorCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CErrorCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CErrorCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CErrorCode.Merge(m, src)
}
func (m *S2CErrorCode) XXX_Size() int {
	return m.Size()
}
func (m *S2CErrorCode) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CErrorCode.DiscardUnknown(m)
}

var xxx_messageInfo_S2CErrorCode proto.InternalMessageInfo

func (m *S2CErrorCode) GetErrCode() int64 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *S2CErrorCode) GetMsgTimeStamp() int64 {
	if m != nil {
		return m.MsgTimeStamp
	}
	return 0
}

func (m *S2CErrorCode) GetErrNotice() string {
	if m != nil {
		return m.ErrNotice
	}
	return ""
}

// client - login
type C2LGateAddr struct {
	AccountId            int64    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2LGateAddr) Reset()         { *m = C2LGateAddr{} }
func (m *C2LGateAddr) String() string { return proto.CompactTextString(m) }
func (*C2LGateAddr) ProtoMessage()    {}
func (*C2LGateAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{2}
}
func (m *C2LGateAddr) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2LGateAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2LGateAddr.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2LGateAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2LGateAddr.Merge(m, src)
}
func (m *C2LGateAddr) XXX_Size() int {
	return m.Size()
}
func (m *C2LGateAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_C2LGateAddr.DiscardUnknown(m)
}

var xxx_messageInfo_C2LGateAddr proto.InternalMessageInfo

func (m *C2LGateAddr) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

// login - client
type L2CGateAddr struct {
	// gate 的IP有可能为空，客户端自行判断
	Ip                   string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2CGateAddr) Reset()         { *m = L2CGateAddr{} }
func (m *L2CGateAddr) String() string { return proto.CompactTextString(m) }
func (*L2CGateAddr) ProtoMessage()    {}
func (*L2CGateAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{3}
}
func (m *L2CGateAddr) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *L2CGateAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_L2CGateAddr.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *L2CGateAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2CGateAddr.Merge(m, src)
}
func (m *L2CGateAddr) XXX_Size() int {
	return m.Size()
}
func (m *L2CGateAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_L2CGateAddr.DiscardUnknown(m)
}

var xxx_messageInfo_L2CGateAddr proto.InternalMessageInfo

func (m *L2CGateAddr) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

// 注册
type C2SRegisterAccount struct {
	AccountId int64  `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Pwd       string `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// 客户端时间戳, ( 系统当前时间的纳秒值 / 1000 ), 客户端填, 必须保证唯一, 用于跟客户端确认消息用
	CliTimeStamp int64 `protobuf:"varint,3,opt,name=cliTimeStamp,proto3" json:"cliTimeStamp,omitempty"`
	// 终端类型, 1 手机, 2 web
	TerminalType int32 `protobuf:"varint,4,opt,name=terminalType,proto3" json:"terminalType,omitempty"`
	// 验证码
	VerificationCode string `protobuf:"bytes,5,opt,name=verificationCode,proto3" json:"verificationCode,omitempty"`
	// 区号
	RegionCode           string   `protobuf:"bytes,6,opt,name=regionCode,proto3" json:"regionCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SRegisterAccount) Reset()         { *m = C2SRegisterAccount{} }
func (m *C2SRegisterAccount) String() string { return proto.CompactTextString(m) }
func (*C2SRegisterAccount) ProtoMessage()    {}
func (*C2SRegisterAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{4}
}
func (m *C2SRegisterAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SRegisterAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SRegisterAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SRegisterAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SRegisterAccount.Merge(m, src)
}
func (m *C2SRegisterAccount) XXX_Size() int {
	return m.Size()
}
func (m *C2SRegisterAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SRegisterAccount.DiscardUnknown(m)
}

var xxx_messageInfo_C2SRegisterAccount proto.InternalMessageInfo

func (m *C2SRegisterAccount) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *C2SRegisterAccount) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *C2SRegisterAccount) GetCliTimeStamp() int64 {
	if m != nil {
		return m.CliTimeStamp
	}
	return 0
}

func (m *C2SRegisterAccount) GetTerminalType() int32 {
	if m != nil {
		return m.TerminalType
	}
	return 0
}

func (m *C2SRegisterAccount) GetVerificationCode() string {
	if m != nil {
		return m.VerificationCode
	}
	return ""
}

func (m *C2SRegisterAccount) GetRegionCode() string {
	if m != nil {
		return m.RegionCode
	}
	return ""
}

type S2CRegisterAccount struct {
	AccountId int64 `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// 角色名
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 收到的最后一条消息的时间戳
	LastMsgTimestamp int64 `protobuf:"varint,3,opt,name=lastMsgTimestamp,proto3" json:"lastMsgTimestamp,omitempty"`
	// "我"的环信帐号
	HuanXinAccount       *HuanXinAccount `protobuf:"bytes,4,opt,name=huanXinAccount,proto3" json:"huanXinAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *S2CRegisterAccount) Reset()         { *m = S2CRegisterAccount{} }
func (m *S2CRegisterAccount) String() string { return proto.CompactTextString(m) }
func (*S2CRegisterAccount) ProtoMessage()    {}
func (*S2CRegisterAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{5}
}
func (m *S2CRegisterAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRegisterAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRegisterAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRegisterAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRegisterAccount.Merge(m, src)
}
func (m *S2CRegisterAccount) XXX_Size() int {
	return m.Size()
}
func (m *S2CRegisterAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRegisterAccount.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRegisterAccount proto.InternalMessageInfo

func (m *S2CRegisterAccount) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *S2CRegisterAccount) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *S2CRegisterAccount) GetLastMsgTimestamp() int64 {
	if m != nil {
		return m.LastMsgTimestamp
	}
	return 0
}

func (m *S2CRegisterAccount) GetHuanXinAccount() *HuanXinAccount {
	if m != nil {
		return m.HuanXinAccount
	}
	return nil
}

// 登录
type C2SLogin struct {
	AccountId int64 `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// 客户端时间戳, ( 系统当前时间的纳秒值 / 1000 ), 客户端填, 必须保证唯一, 用于跟客户端确认消息用
	CliTimeStamp int64  `protobuf:"varint,2,opt,name=cliTimeStamp,proto3" json:"cliTimeStamp,omitempty"`
	Pwd          string `protobuf:"bytes,3,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// 终端类型, 1 手机, 2 web
	TerminalType         int32    `protobuf:"varint,4,opt,name=terminalType,proto3" json:"terminalType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SLogin) Reset()         { *m = C2SLogin{} }
func (m *C2SLogin) String() string { return proto.CompactTextString(m) }
func (*C2SLogin) ProtoMessage()    {}
func (*C2SLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{6}
}
func (m *C2SLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SLogin.Merge(m, src)
}
func (m *C2SLogin) XXX_Size() int {
	return m.Size()
}
func (m *C2SLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SLogin.DiscardUnknown(m)
}

var xxx_messageInfo_C2SLogin proto.InternalMessageInfo

func (m *C2SLogin) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *C2SLogin) GetCliTimeStamp() int64 {
	if m != nil {
		return m.CliTimeStamp
	}
	return 0
}

func (m *C2SLogin) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *C2SLogin) GetTerminalType() int32 {
	if m != nil {
		return m.TerminalType
	}
	return 0
}

type C2SUsernameLogin struct {
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Pwd      string `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// 客户端时间戳, ( 系统当前时间的纳秒值 / 1000 ), 客户端填, 必须保证唯一, 用于跟客户端确认消息用
	CliTimeStamp int64 `protobuf:"varint,3,opt,name=cliTimeStamp,proto3" json:"cliTimeStamp,omitempty"`
	// 终端类型, 1 手机, 2 web
	TerminalType         int32    `protobuf:"varint,4,opt,name=terminalType,proto3" json:"terminalType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SUsernameLogin) Reset()         { *m = C2SUsernameLogin{} }
func (m *C2SUsernameLogin) String() string { return proto.CompactTextString(m) }
func (*C2SUsernameLogin) ProtoMessage()    {}
func (*C2SUsernameLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{7}
}
func (m *C2SUsernameLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SUsernameLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SUsernameLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SUsernameLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SUsernameLogin.Merge(m, src)
}
func (m *C2SUsernameLogin) XXX_Size() int {
	return m.Size()
}
func (m *C2SUsernameLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SUsernameLogin.DiscardUnknown(m)
}

var xxx_messageInfo_C2SUsernameLogin proto.InternalMessageInfo

func (m *C2SUsernameLogin) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *C2SUsernameLogin) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *C2SUsernameLogin) GetCliTimeStamp() int64 {
	if m != nil {
		return m.CliTimeStamp
	}
	return 0
}

func (m *C2SUsernameLogin) GetTerminalType() int32 {
	if m != nil {
		return m.TerminalType
	}
	return 0
}

// 用户简略信息,用于展示给其他用户看
type UserBriefInfo struct {
	AccountId            int64    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	UserName             string   `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	HeadPortrait         string   `protobuf:"bytes,4,opt,name=headPortrait,proto3" json:"headPortrait,omitempty"`
	Signature            string   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserBriefInfo) Reset()         { *m = UserBriefInfo{} }
func (m *UserBriefInfo) String() string { return proto.CompactTextString(m) }
func (*UserBriefInfo) ProtoMessage()    {}
func (*UserBriefInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{8}
}
func (m *UserBriefInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserBriefInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserBriefInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserBriefInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserBriefInfo.Merge(m, src)
}
func (m *UserBriefInfo) XXX_Size() int {
	return m.Size()
}
func (m *UserBriefInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserBriefInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserBriefInfo proto.InternalMessageInfo

func (m *UserBriefInfo) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *UserBriefInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *UserBriefInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserBriefInfo) GetHeadPortrait() string {
	if m != nil {
		return m.HeadPortrait
	}
	return ""
}

func (m *UserBriefInfo) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type FriendRequest struct {
	// senderId 是发出好友请求的人
	SenderId             int64    `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ReqDateTime          int64    `protobuf:"varint,2,opt,name=reqDateTime,proto3" json:"reqDateTime,omitempty"`
	SenderNickName       string   `protobuf:"bytes,3,opt,name=senderNickName,proto3" json:"senderNickName,omitempty"`
	SenderHeadPortrait   string   `protobuf:"bytes,4,opt,name=senderHeadPortrait,proto3" json:"senderHeadPortrait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendRequest) Reset()         { *m = FriendRequest{} }
func (m *FriendRequest) String() string { return proto.CompactTextString(m) }
func (*FriendRequest) ProtoMessage()    {}
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{9}
}
func (m *FriendRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FriendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FriendRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FriendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendRequest.Merge(m, src)
}
func (m *FriendRequest) XXX_Size() int {
	return m.Size()
}
func (m *FriendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FriendRequest proto.InternalMessageInfo

func (m *FriendRequest) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *FriendRequest) GetReqDateTime() int64 {
	if m != nil {
		return m.ReqDateTime
	}
	return 0
}

func (m *FriendRequest) GetSenderNickName() string {
	if m != nil {
		return m.SenderNickName
	}
	return ""
}

func (m *FriendRequest) GetSenderHeadPortrait() string {
	if m != nil {
		return m.SenderHeadPortrait
	}
	return ""
}

type FriendVerification struct {
	// friendId 同意了好友请求
	FriendId int64 `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	// 同意成为好友的时间
	BecomeFriendDateTime int64    `protobuf:"varint,2,opt,name=becomeFriendDateTime,proto3" json:"becomeFriendDateTime,omitempty"`
	FriendNickName       string   `protobuf:"bytes,3,opt,name=friendNickName,proto3" json:"friendNickName,omitempty"`
	FriendHeadPortrait   string   `protobuf:"bytes,4,opt,name=friendHeadPortrait,proto3" json:"friendHeadPortrait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendVerification) Reset()         { *m = FriendVerification{} }
func (m *FriendVerification) String() string { return proto.CompactTextString(m) }
func (*FriendVerification) ProtoMessage()    {}
func (*FriendVerification) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{10}
}
func (m *FriendVerification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FriendVerification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FriendVerification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FriendVerification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendVerification.Merge(m, src)
}
func (m *FriendVerification) XXX_Size() int {
	return m.Size()
}
func (m *FriendVerification) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendVerification.DiscardUnknown(m)
}

var xxx_messageInfo_FriendVerification proto.InternalMessageInfo

func (m *FriendVerification) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *FriendVerification) GetBecomeFriendDateTime() int64 {
	if m != nil {
		return m.BecomeFriendDateTime
	}
	return 0
}

func (m *FriendVerification) GetFriendNickName() string {
	if m != nil {
		return m.FriendNickName
	}
	return ""
}

func (m *FriendVerification) GetFriendHeadPortrait() string {
	if m != nil {
		return m.FriendHeadPortrait
	}
	return ""
}

// 对应数据库表 chat_group_member 中的一条记录
type ChatGroupMember struct {
	AccountId            int64    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	ChatGroupId          int64    `protobuf:"varint,2,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatGroupMember) Reset()         { *m = ChatGroupMember{} }
func (m *ChatGroupMember) String() string { return proto.CompactTextString(m) }
func (*ChatGroupMember) ProtoMessage()    {}
func (*ChatGroupMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{11}
}
func (m *ChatGroupMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChatGroupMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChatGroupMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChatGroupMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatGroupMember.Merge(m, src)
}
func (m *ChatGroupMember) XXX_Size() int {
	return m.Size()
}
func (m *ChatGroupMember) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatGroupMember.DiscardUnknown(m)
}

var xxx_messageInfo_ChatGroupMember proto.InternalMessageInfo

func (m *ChatGroupMember) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ChatGroupMember) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

type FriendInfo struct {
	AccountId            int64    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	RemarkName           string   `protobuf:"bytes,3,opt,name=remarkName,proto3" json:"remarkName,omitempty"`
	PortraitUrl          string   `protobuf:"bytes,4,opt,name=portraitUrl,proto3" json:"portraitUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendInfo) Reset()         { *m = FriendInfo{} }
func (m *FriendInfo) String() string { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()    {}
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{12}
}
func (m *FriendInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FriendInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FriendInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FriendInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendInfo.Merge(m, src)
}
func (m *FriendInfo) XXX_Size() int {
	return m.Size()
}
func (m *FriendInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FriendInfo proto.InternalMessageInfo

func (m *FriendInfo) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *FriendInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *FriendInfo) GetRemarkName() string {
	if m != nil {
		return m.RemarkName
	}
	return ""
}

func (m *FriendInfo) GetPortraitUrl() string {
	if m != nil {
		return m.PortraitUrl
	}
	return ""
}

// 聊天群
type ChatGroup struct {
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=ChatGroupId,proto3" json:"ChatGroupId,omitempty"`
	Creator              int64    `protobuf:"varint,2,opt,name=Creator,proto3" json:"Creator,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Pic                  string   `protobuf:"bytes,4,opt,name=Pic,proto3" json:"Pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatGroup) Reset()         { *m = ChatGroup{} }
func (m *ChatGroup) String() string { return proto.CompactTextString(m) }
func (*ChatGroup) ProtoMessage()    {}
func (*ChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{13}
}
func (m *ChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatGroup.Merge(m, src)
}
func (m *ChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *ChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ChatGroup proto.InternalMessageInfo

func (m *ChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *ChatGroup) GetCreator() int64 {
	if m != nil {
		return m.Creator
	}
	return 0
}

func (m *ChatGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChatGroup) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

type PersonChatGroup struct {
	// 群消息
	ChatGroup *ChatGroup `protobuf:"bytes,1,opt,name=chatGroup,proto3" json:"chatGroup,omitempty"`
	// 收到的最后一条群聊时间戳
	LastMsgTimestamp     int64    `protobuf:"varint,2,opt,name=lastMsgTimestamp,proto3" json:"lastMsgTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonChatGroup) Reset()         { *m = PersonChatGroup{} }
func (m *PersonChatGroup) String() string { return proto.CompactTextString(m) }
func (*PersonChatGroup) ProtoMessage()    {}
func (*PersonChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{14}
}
func (m *PersonChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PersonChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PersonChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PersonChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonChatGroup.Merge(m, src)
}
func (m *PersonChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *PersonChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_PersonChatGroup proto.InternalMessageInfo

func (m *PersonChatGroup) GetChatGroup() *ChatGroup {
	if m != nil {
		return m.ChatGroup
	}
	return nil
}

func (m *PersonChatGroup) GetLastMsgTimestamp() int64 {
	if m != nil {
		return m.LastMsgTimestamp
	}
	return 0
}

type HuanXinAccount struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HuanXinAccount) Reset()         { *m = HuanXinAccount{} }
func (m *HuanXinAccount) String() string { return proto.CompactTextString(m) }
func (*HuanXinAccount) ProtoMessage()    {}
func (*HuanXinAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{15}
}
func (m *HuanXinAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HuanXinAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HuanXinAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HuanXinAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HuanXinAccount.Merge(m, src)
}
func (m *HuanXinAccount) XXX_Size() int {
	return m.Size()
}
func (m *HuanXinAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_HuanXinAccount.DiscardUnknown(m)
}

var xxx_messageInfo_HuanXinAccount proto.InternalMessageInfo

func (m *HuanXinAccount) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type S2CLogin struct {
	AccountId int64 `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// 角色名
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 头像 url 地址
	PortraitUrl string `protobuf:"bytes,3,opt,name=portraitUrl,proto3" json:"portraitUrl,omitempty"`
	// 收到的最后一条私聊消息的时间戳
	LastMsgTimestamp int64 `protobuf:"varint,4,opt,name=lastMsgTimestamp,proto3" json:"lastMsgTimestamp,omitempty"`
	// 数据库表 friend_req 中 获取的未读好友请求
	FriendReqs []*FriendRequest `protobuf:"bytes,5,rep,name=friendReqs,proto3" json:"friendReqs,omitempty"`
	// 从数据库表 friend_verification 中 获取的好友验证通知
	// 逻辑:
	// A 向 B 请求加好友, 然后 A 离线; B 同意后会往 friend_verification 中插入记录
	// A 再登录时,从 friend_verification 中查询到 B 的好友验证通知,
	// 就把 B 添加到自己的联系人列表中
	FriendVers []*FriendVerification `protobuf:"bytes,6,rep,name=friendVers,proto3" json:"friendVers,omitempty"`
	// 和 "我" 有共同群的群友, 各个群友可能分布在不同的群
	// 1 从 chat_group_member 中查出 "我" 拥有的群号
	// 2 从 chat_group_member 中按群号查出所有记录
	ChatGroupMembers []*ChatGroupMember `protobuf:"bytes,7,rep,name=chatGroupMembers,proto3" json:"chatGroupMembers,omitempty"`
	// 用户申请加入我是群主的群消息
	ReqJoinChatGroup []*ReqJoinChatGroup `protobuf:"bytes,8,rep,name=reqJoinChatGroup,proto3" json:"reqJoinChatGroup,omitempty"`
	// 好友列表
	FriendInfo []*FriendInfo `protobuf:"bytes,9,rep,name=friendInfo,proto3" json:"friendInfo,omitempty"`
	// "我"加入的聊天群信息
	ChatGroups []*PersonChatGroup `protobuf:"bytes,10,rep,name=chatGroups,proto3" json:"chatGroups,omitempty"`
	// "我"被删除好友信息
	DeleteFriendId []int64 `protobuf:"varint,11,rep,packed,name=deleteFriendId,proto3" json:"deleteFriendId,omitempty"`
	// "我"的环信帐号
	HuanXinAccount *HuanXinAccount `protobuf:"bytes,12,opt,name=huanXinAccount,proto3" json:"huanXinAccount,omitempty"`
	// ”我“的代理、会员帐号
	AgentInfo            []*AgentInfo `protobuf:"bytes,13,rep,name=agentInfo,proto3" json:"agentInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *S2CLogin) Reset()         { *m = S2CLogin{} }
func (m *S2CLogin) String() string { return proto.CompactTextString(m) }
func (*S2CLogin) ProtoMessage()    {}
func (*S2CLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{16}
}
func (m *S2CLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CLogin.Merge(m, src)
}
func (m *S2CLogin) XXX_Size() int {
	return m.Size()
}
func (m *S2CLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CLogin.DiscardUnknown(m)
}

var xxx_messageInfo_S2CLogin proto.InternalMessageInfo

func (m *S2CLogin) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *S2CLogin) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *S2CLogin) GetPortraitUrl() string {
	if m != nil {
		return m.PortraitUrl
	}
	return ""
}

func (m *S2CLogin) GetLastMsgTimestamp() int64 {
	if m != nil {
		return m.LastMsgTimestamp
	}
	return 0
}

func (m *S2CLogin) GetFriendReqs() []*FriendRequest {
	if m != nil {
		return m.FriendReqs
	}
	return nil
}

func (m *S2CLogin) GetFriendVers() []*FriendVerification {
	if m != nil {
		return m.FriendVers
	}
	return nil
}

func (m *S2CLogin) GetChatGroupMembers() []*ChatGroupMember {
	if m != nil {
		return m.ChatGroupMembers
	}
	return nil
}

func (m *S2CLogin) GetReqJoinChatGroup() []*ReqJoinChatGroup {
	if m != nil {
		return m.ReqJoinChatGroup
	}
	return nil
}

func (m *S2CLogin) GetFriendInfo() []*FriendInfo {
	if m != nil {
		return m.FriendInfo
	}
	return nil
}

func (m *S2CLogin) GetChatGroups() []*PersonChatGroup {
	if m != nil {
		return m.ChatGroups
	}
	return nil
}

func (m *S2CLogin) GetDeleteFriendId() []int64 {
	if m != nil {
		return m.DeleteFriendId
	}
	return nil
}

func (m *S2CLogin) GetHuanXinAccount() *HuanXinAccount {
	if m != nil {
		return m.HuanXinAccount
	}
	return nil
}

func (m *S2CLogin) GetAgentInfo() []*AgentInfo {
	if m != nil {
		return m.AgentInfo
	}
	return nil
}

type S2CUsernameLogin struct {
	AccountId int64 `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// 角色名
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 头像 url 地址
	PortraitUrl string `protobuf:"bytes,3,opt,name=portraitUrl,proto3" json:"portraitUrl,omitempty"`
	// 收到的最后一条私聊消息的时间戳
	LastMsgTimestamp int64 `protobuf:"varint,4,opt,name=lastMsgTimestamp,proto3" json:"lastMsgTimestamp,omitempty"`
	// 数据库表 friend_req 中 获取的未读好友请求
	FriendReqs []*FriendRequest `protobuf:"bytes,5,rep,name=friendReqs,proto3" json:"friendReqs,omitempty"`
	// 从数据库表 friend_verification 中 获取的好友验证通知
	// 逻辑:
	// A 向 B 请求加好友, 然后 A 离线; B 同意后会往 friend_verification 中插入记录
	// A 再登录时,从 friend_verification 中查询到 B 的好友验证通知,
	// 就把 B 添加到自己的联系人列表中
	FriendVers []*FriendVerification `protobuf:"bytes,6,rep,name=friendVers,proto3" json:"friendVers,omitempty"`
	// 和 "我" 有共同群的群友, 各个群友可能分布在不同的群
	// 1 从 chat_group_member 中查出 "我" 拥有的群号
	// 2 从 chat_group_member 中按群号查出所有记录
	ChatGroupMembers []*ChatGroupMember `protobuf:"bytes,7,rep,name=chatGroupMembers,proto3" json:"chatGroupMembers,omitempty"`
	// 用户申请加入我是群主的群消息
	ReqJoinChatGroup []*ReqJoinChatGroup `protobuf:"bytes,8,rep,name=reqJoinChatGroup,proto3" json:"reqJoinChatGroup,omitempty"`
	// 好友列表
	FriendInfo []*FriendInfo `protobuf:"bytes,9,rep,name=friendInfo,proto3" json:"friendInfo,omitempty"`
	// "我"加入的聊天群信息
	ChatGroups []*PersonChatGroup `protobuf:"bytes,10,rep,name=chatGroups,proto3" json:"chatGroups,omitempty"`
	// "我"被删除好友信息
	DeleteFriendId []int64 `protobuf:"varint,11,rep,packed,name=deleteFriendId,proto3" json:"deleteFriendId,omitempty"`
	// "我"的环信帐号
	HuanXinAccount *HuanXinAccount `protobuf:"bytes,12,opt,name=huanXinAccount,proto3" json:"huanXinAccount,omitempty"`
	// ”我“的代理、会员帐号
	AgentInfo            []*AgentInfo `protobuf:"bytes,13,rep,name=agentInfo,proto3" json:"agentInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *S2CUsernameLogin) Reset()         { *m = S2CUsernameLogin{} }
func (m *S2CUsernameLogin) String() string { return proto.CompactTextString(m) }
func (*S2CUsernameLogin) ProtoMessage()    {}
func (*S2CUsernameLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{17}
}
func (m *S2CUsernameLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CUsernameLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CUsernameLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CUsernameLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUsernameLogin.Merge(m, src)
}
func (m *S2CUsernameLogin) XXX_Size() int {
	return m.Size()
}
func (m *S2CUsernameLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUsernameLogin.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUsernameLogin proto.InternalMessageInfo

func (m *S2CUsernameLogin) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *S2CUsernameLogin) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *S2CUsernameLogin) GetPortraitUrl() string {
	if m != nil {
		return m.PortraitUrl
	}
	return ""
}

func (m *S2CUsernameLogin) GetLastMsgTimestamp() int64 {
	if m != nil {
		return m.LastMsgTimestamp
	}
	return 0
}

func (m *S2CUsernameLogin) GetFriendReqs() []*FriendRequest {
	if m != nil {
		return m.FriendReqs
	}
	return nil
}

func (m *S2CUsernameLogin) GetFriendVers() []*FriendVerification {
	if m != nil {
		return m.FriendVers
	}
	return nil
}

func (m *S2CUsernameLogin) GetChatGroupMembers() []*ChatGroupMember {
	if m != nil {
		return m.ChatGroupMembers
	}
	return nil
}

func (m *S2CUsernameLogin) GetReqJoinChatGroup() []*ReqJoinChatGroup {
	if m != nil {
		return m.ReqJoinChatGroup
	}
	return nil
}

func (m *S2CUsernameLogin) GetFriendInfo() []*FriendInfo {
	if m != nil {
		return m.FriendInfo
	}
	return nil
}

func (m *S2CUsernameLogin) GetChatGroups() []*PersonChatGroup {
	if m != nil {
		return m.ChatGroups
	}
	return nil
}

func (m *S2CUsernameLogin) GetDeleteFriendId() []int64 {
	if m != nil {
		return m.DeleteFriendId
	}
	return nil
}

func (m *S2CUsernameLogin) GetHuanXinAccount() *HuanXinAccount {
	if m != nil {
		return m.HuanXinAccount
	}
	return nil
}

func (m *S2CUsernameLogin) GetAgentInfo() []*AgentInfo {
	if m != nil {
		return m.AgentInfo
	}
	return nil
}

type AgentInfo struct {
	AgentId              int64    `protobuf:"varint,1,opt,name=agentId,proto3" json:"agentId,omitempty"`
	AgentUsername        string   `protobuf:"bytes,2,opt,name=agentUsername,proto3" json:"agentUsername,omitempty"`
	AgentportraitUrl     string   `protobuf:"bytes,3,opt,name=agentportraitUrl,proto3" json:"agentportraitUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentInfo) Reset()         { *m = AgentInfo{} }
func (m *AgentInfo) String() string { return proto.CompactTextString(m) }
func (*AgentInfo) ProtoMessage()    {}
func (*AgentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{18}
}
func (m *AgentInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AgentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AgentInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AgentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentInfo.Merge(m, src)
}
func (m *AgentInfo) XXX_Size() int {
	return m.Size()
}
func (m *AgentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AgentInfo proto.InternalMessageInfo

func (m *AgentInfo) GetAgentId() int64 {
	if m != nil {
		return m.AgentId
	}
	return 0
}

func (m *AgentInfo) GetAgentUsername() string {
	if m != nil {
		return m.AgentUsername
	}
	return ""
}

func (m *AgentInfo) GetAgentportraitUrl() string {
	if m != nil {
		return m.AgentportraitUrl
	}
	return ""
}

// 注销账号, 即正常退出游戏。网络中断或者手机重启属于退出游戏异常
type C2SLogout struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SLogout) Reset()         { *m = C2SLogout{} }
func (m *C2SLogout) String() string { return proto.CompactTextString(m) }
func (*C2SLogout) ProtoMessage()    {}
func (*C2SLogout) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{19}
}
func (m *C2SLogout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SLogout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SLogout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SLogout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SLogout.Merge(m, src)
}
func (m *C2SLogout) XXX_Size() int {
	return m.Size()
}
func (m *C2SLogout) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SLogout.DiscardUnknown(m)
}

var xxx_messageInfo_C2SLogout proto.InternalMessageInfo

type S2CLogout struct {
	// 发送空包，IOS会不识别
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CLogout) Reset()         { *m = S2CLogout{} }
func (m *S2CLogout) String() string { return proto.CompactTextString(m) }
func (*S2CLogout) ProtoMessage()    {}
func (*S2CLogout) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{20}
}
func (m *S2CLogout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CLogout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CLogout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CLogout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CLogout.Merge(m, src)
}
func (m *S2CLogout) XXX_Size() int {
	return m.Size()
}
func (m *S2CLogout) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CLogout.DiscardUnknown(m)
}

var xxx_messageInfo_S2CLogout proto.InternalMessageInfo

func (m *S2CLogout) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

// 心跳包
type C2SHeartbeat struct {
	// 客户端本地时间戳, 单位是毫秒
	TimeStamp            int64    `protobuf:"varint,1,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SHeartbeat) Reset()         { *m = C2SHeartbeat{} }
func (m *C2SHeartbeat) String() string { return proto.CompactTextString(m) }
func (*C2SHeartbeat) ProtoMessage()    {}
func (*C2SHeartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{21}
}
func (m *C2SHeartbeat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SHeartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SHeartbeat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SHeartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SHeartbeat.Merge(m, src)
}
func (m *C2SHeartbeat) XXX_Size() int {
	return m.Size()
}
func (m *C2SHeartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SHeartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_C2SHeartbeat proto.InternalMessageInfo

func (m *C2SHeartbeat) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

type S2CHeartbeat struct {
	// 客户端本地时间戳, 单位是毫秒
	TimeStamp            int64    `protobuf:"varint,1,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CHeartbeat) Reset()         { *m = S2CHeartbeat{} }
func (m *S2CHeartbeat) String() string { return proto.CompactTextString(m) }
func (*S2CHeartbeat) ProtoMessage()    {}
func (*S2CHeartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{22}
}
func (m *S2CHeartbeat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CHeartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CHeartbeat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CHeartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CHeartbeat.Merge(m, src)
}
func (m *S2CHeartbeat) XXX_Size() int {
	return m.Size()
}
func (m *S2CHeartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CHeartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_S2CHeartbeat proto.InternalMessageInfo

func (m *S2CHeartbeat) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

// 把客户端踢下线
type S2CKick struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CKick) Reset()         { *m = S2CKick{} }
func (m *S2CKick) String() string { return proto.CompactTextString(m) }
func (*S2CKick) ProtoMessage()    {}
func (*S2CKick) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{23}
}
func (m *S2CKick) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CKick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CKick.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CKick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CKick.Merge(m, src)
}
func (m *S2CKick) XXX_Size() int {
	return m.Size()
}
func (m *S2CKick) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CKick.DiscardUnknown(m)
}

var xxx_messageInfo_S2CKick proto.InternalMessageInfo

func (m *S2CKick) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type S2CRepeatLogin struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRepeatLogin) Reset()         { *m = S2CRepeatLogin{} }
func (m *S2CRepeatLogin) String() string { return proto.CompactTextString(m) }
func (*S2CRepeatLogin) ProtoMessage()    {}
func (*S2CRepeatLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{24}
}
func (m *S2CRepeatLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRepeatLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRepeatLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRepeatLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRepeatLogin.Merge(m, src)
}
func (m *S2CRepeatLogin) XXX_Size() int {
	return m.Size()
}
func (m *S2CRepeatLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRepeatLogin.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRepeatLogin proto.InternalMessageInfo

// 修改名字
type C2SRename struct {
	Newname              string   `protobuf:"bytes,1,opt,name=newname,proto3" json:"newname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SRename) Reset()         { *m = C2SRename{} }
func (m *C2SRename) String() string { return proto.CompactTextString(m) }
func (*C2SRename) ProtoMessage()    {}
func (*C2SRename) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{25}
}
func (m *C2SRename) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SRename) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SRename.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SRename) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SRename.Merge(m, src)
}
func (m *C2SRename) XXX_Size() int {
	return m.Size()
}
func (m *C2SRename) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SRename.DiscardUnknown(m)
}

var xxx_messageInfo_C2SRename proto.InternalMessageInfo

func (m *C2SRename) GetNewname() string {
	if m != nil {
		return m.Newname
	}
	return ""
}

type S2CRename struct {
	Newname              string   `protobuf:"bytes,1,opt,name=newname,proto3" json:"newname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRename) Reset()         { *m = S2CRename{} }
func (m *S2CRename) String() string { return proto.CompactTextString(m) }
func (*S2CRename) ProtoMessage()    {}
func (*S2CRename) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{26}
}
func (m *S2CRename) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRename) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRename.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRename) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRename.Merge(m, src)
}
func (m *S2CRename) XXX_Size() int {
	return m.Size()
}
func (m *S2CRename) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRename.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRename proto.InternalMessageInfo

func (m *S2CRename) GetNewname() string {
	if m != nil {
		return m.Newname
	}
	return ""
}

type DeviceInfo struct {
	DeviceInfo           string   `protobuf:"bytes,1,opt,name=DeviceInfo,proto3" json:"DeviceInfo,omitempty"`
	DeviceProducter      string   `protobuf:"bytes,2,opt,name=DeviceProducter,proto3" json:"DeviceProducter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceInfo) Reset()         { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()    {}
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{27}
}
func (m *DeviceInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeviceInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfo.Merge(m, src)
}
func (m *DeviceInfo) XXX_Size() int {
	return m.Size()
}
func (m *DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfo proto.InternalMessageInfo

func (m *DeviceInfo) GetDeviceInfo() string {
	if m != nil {
		return m.DeviceInfo
	}
	return ""
}

func (m *DeviceInfo) GetDeviceProducter() string {
	if m != nil {
		return m.DeviceProducter
	}
	return ""
}

// 上传硬件信息
type C2SDeviceInfo struct {
	DeviceInfo           *DeviceInfo `protobuf:"bytes,1,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *C2SDeviceInfo) Reset()         { *m = C2SDeviceInfo{} }
func (m *C2SDeviceInfo) String() string { return proto.CompactTextString(m) }
func (*C2SDeviceInfo) ProtoMessage()    {}
func (*C2SDeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{28}
}
func (m *C2SDeviceInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SDeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SDeviceInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SDeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SDeviceInfo.Merge(m, src)
}
func (m *C2SDeviceInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2SDeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SDeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SDeviceInfo proto.InternalMessageInfo

func (m *C2SDeviceInfo) GetDeviceInfo() *DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

type S2CDeviceInfo struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CDeviceInfo) Reset()         { *m = S2CDeviceInfo{} }
func (m *S2CDeviceInfo) String() string { return proto.CompactTextString(m) }
func (*S2CDeviceInfo) ProtoMessage()    {}
func (*S2CDeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{29}
}
func (m *S2CDeviceInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CDeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CDeviceInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CDeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CDeviceInfo.Merge(m, src)
}
func (m *S2CDeviceInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2CDeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CDeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CDeviceInfo proto.InternalMessageInfo

func (m *S2CDeviceInfo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 设置用户名（用户名唯一，且不许修改）
type C2SSetUserName struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SSetUserName) Reset()         { *m = C2SSetUserName{} }
func (m *C2SSetUserName) String() string { return proto.CompactTextString(m) }
func (*C2SSetUserName) ProtoMessage()    {}
func (*C2SSetUserName) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{30}
}
func (m *C2SSetUserName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SSetUserName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SSetUserName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SSetUserName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SSetUserName.Merge(m, src)
}
func (m *C2SSetUserName) XXX_Size() int {
	return m.Size()
}
func (m *C2SSetUserName) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SSetUserName.DiscardUnknown(m)
}

var xxx_messageInfo_C2SSetUserName proto.InternalMessageInfo

func (m *C2SSetUserName) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type S2CSetUserName struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CSetUserName) Reset()         { *m = S2CSetUserName{} }
func (m *S2CSetUserName) String() string { return proto.CompactTextString(m) }
func (*S2CSetUserName) ProtoMessage()    {}
func (*S2CSetUserName) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{31}
}
func (m *S2CSetUserName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CSetUserName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CSetUserName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CSetUserName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CSetUserName.Merge(m, src)
}
func (m *S2CSetUserName) XXX_Size() int {
	return m.Size()
}
func (m *S2CSetUserName) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CSetUserName.DiscardUnknown(m)
}

var xxx_messageInfo_S2CSetUserName proto.InternalMessageInfo

func (m *S2CSetUserName) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 头像
type C2SSetHeadPortrait struct {
	HeadPortraitUrl      string   `protobuf:"bytes,1,opt,name=headPortraitUrl,proto3" json:"headPortraitUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SSetHeadPortrait) Reset()         { *m = C2SSetHeadPortrait{} }
func (m *C2SSetHeadPortrait) String() string { return proto.CompactTextString(m) }
func (*C2SSetHeadPortrait) ProtoMessage()    {}
func (*C2SSetHeadPortrait) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{32}
}
func (m *C2SSetHeadPortrait) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SSetHeadPortrait) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SSetHeadPortrait.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SSetHeadPortrait) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SSetHeadPortrait.Merge(m, src)
}
func (m *C2SSetHeadPortrait) XXX_Size() int {
	return m.Size()
}
func (m *C2SSetHeadPortrait) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SSetHeadPortrait.DiscardUnknown(m)
}

var xxx_messageInfo_C2SSetHeadPortrait proto.InternalMessageInfo

func (m *C2SSetHeadPortrait) GetHeadPortraitUrl() string {
	if m != nil {
		return m.HeadPortraitUrl
	}
	return ""
}

type S2CSetHeadPortrait struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CSetHeadPortrait) Reset()         { *m = S2CSetHeadPortrait{} }
func (m *S2CSetHeadPortrait) String() string { return proto.CompactTextString(m) }
func (*S2CSetHeadPortrait) ProtoMessage()    {}
func (*S2CSetHeadPortrait) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{33}
}
func (m *S2CSetHeadPortrait) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CSetHeadPortrait) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CSetHeadPortrait.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CSetHeadPortrait) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CSetHeadPortrait.Merge(m, src)
}
func (m *S2CSetHeadPortrait) XXX_Size() int {
	return m.Size()
}
func (m *S2CSetHeadPortrait) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CSetHeadPortrait.DiscardUnknown(m)
}

var xxx_messageInfo_S2CSetHeadPortrait proto.InternalMessageInfo

func (m *S2CSetHeadPortrait) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 修改密码
type C2SChangePassword struct {
	StrPassword          string   `protobuf:"bytes,1,opt,name=strPassword,proto3" json:"strPassword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SChangePassword) Reset()         { *m = C2SChangePassword{} }
func (m *C2SChangePassword) String() string { return proto.CompactTextString(m) }
func (*C2SChangePassword) ProtoMessage()    {}
func (*C2SChangePassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{34}
}
func (m *C2SChangePassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SChangePassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SChangePassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SChangePassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SChangePassword.Merge(m, src)
}
func (m *C2SChangePassword) XXX_Size() int {
	return m.Size()
}
func (m *C2SChangePassword) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SChangePassword.DiscardUnknown(m)
}

var xxx_messageInfo_C2SChangePassword proto.InternalMessageInfo

func (m *C2SChangePassword) GetStrPassword() string {
	if m != nil {
		return m.StrPassword
	}
	return ""
}

type S2CChangePassword struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CChangePassword) Reset()         { *m = S2CChangePassword{} }
func (m *S2CChangePassword) String() string { return proto.CompactTextString(m) }
func (*S2CChangePassword) ProtoMessage()    {}
func (*S2CChangePassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{35}
}
func (m *S2CChangePassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CChangePassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CChangePassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CChangePassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CChangePassword.Merge(m, src)
}
func (m *S2CChangePassword) XXX_Size() int {
	return m.Size()
}
func (m *S2CChangePassword) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CChangePassword.DiscardUnknown(m)
}

var xxx_messageInfo_S2CChangePassword proto.InternalMessageInfo

func (m *S2CChangePassword) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 忘记密码
type C2SForgetPassword struct {
	PhoneNum int64  `protobuf:"varint,1,opt,name=phoneNum,proto3" json:"phoneNum,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// 短信验证码
	VerificationCode string `protobuf:"bytes,3,opt,name=verificationCode,proto3" json:"verificationCode,omitempty"`
	// 区号
	RegionCode           string   `protobuf:"bytes,4,opt,name=regionCode,proto3" json:"regionCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SForgetPassword) Reset()         { *m = C2SForgetPassword{} }
func (m *C2SForgetPassword) String() string { return proto.CompactTextString(m) }
func (*C2SForgetPassword) ProtoMessage()    {}
func (*C2SForgetPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{36}
}
func (m *C2SForgetPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SForgetPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SForgetPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SForgetPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SForgetPassword.Merge(m, src)
}
func (m *C2SForgetPassword) XXX_Size() int {
	return m.Size()
}
func (m *C2SForgetPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SForgetPassword.DiscardUnknown(m)
}

var xxx_messageInfo_C2SForgetPassword proto.InternalMessageInfo

func (m *C2SForgetPassword) GetPhoneNum() int64 {
	if m != nil {
		return m.PhoneNum
	}
	return 0
}

func (m *C2SForgetPassword) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *C2SForgetPassword) GetVerificationCode() string {
	if m != nil {
		return m.VerificationCode
	}
	return ""
}

func (m *C2SForgetPassword) GetRegionCode() string {
	if m != nil {
		return m.RegionCode
	}
	return ""
}

type S2CForgetPassword struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CForgetPassword) Reset()         { *m = S2CForgetPassword{} }
func (m *S2CForgetPassword) String() string { return proto.CompactTextString(m) }
func (*S2CForgetPassword) ProtoMessage()    {}
func (*S2CForgetPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{37}
}
func (m *S2CForgetPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CForgetPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CForgetPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CForgetPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CForgetPassword.Merge(m, src)
}
func (m *S2CForgetPassword) XXX_Size() int {
	return m.Size()
}
func (m *S2CForgetPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CForgetPassword.DiscardUnknown(m)
}

var xxx_messageInfo_S2CForgetPassword proto.InternalMessageInfo

func (m *S2CForgetPassword) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 修改好友备注名
type C2SSetFriendRemarkName struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	FriendRemarkName     string   `protobuf:"bytes,2,opt,name=friendRemarkName,proto3" json:"friendRemarkName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SSetFriendRemarkName) Reset()         { *m = C2SSetFriendRemarkName{} }
func (m *C2SSetFriendRemarkName) String() string { return proto.CompactTextString(m) }
func (*C2SSetFriendRemarkName) ProtoMessage()    {}
func (*C2SSetFriendRemarkName) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{38}
}
func (m *C2SSetFriendRemarkName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SSetFriendRemarkName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SSetFriendRemarkName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SSetFriendRemarkName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SSetFriendRemarkName.Merge(m, src)
}
func (m *C2SSetFriendRemarkName) XXX_Size() int {
	return m.Size()
}
func (m *C2SSetFriendRemarkName) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SSetFriendRemarkName.DiscardUnknown(m)
}

var xxx_messageInfo_C2SSetFriendRemarkName proto.InternalMessageInfo

func (m *C2SSetFriendRemarkName) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *C2SSetFriendRemarkName) GetFriendRemarkName() string {
	if m != nil {
		return m.FriendRemarkName
	}
	return ""
}

type S2CSetFriendRemarkName struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	FriendRemarkName     string   `protobuf:"bytes,2,opt,name=friendRemarkName,proto3" json:"friendRemarkName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CSetFriendRemarkName) Reset()         { *m = S2CSetFriendRemarkName{} }
func (m *S2CSetFriendRemarkName) String() string { return proto.CompactTextString(m) }
func (*S2CSetFriendRemarkName) ProtoMessage()    {}
func (*S2CSetFriendRemarkName) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{39}
}
func (m *S2CSetFriendRemarkName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CSetFriendRemarkName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CSetFriendRemarkName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CSetFriendRemarkName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CSetFriendRemarkName.Merge(m, src)
}
func (m *S2CSetFriendRemarkName) XXX_Size() int {
	return m.Size()
}
func (m *S2CSetFriendRemarkName) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CSetFriendRemarkName.DiscardUnknown(m)
}

var xxx_messageInfo_S2CSetFriendRemarkName proto.InternalMessageInfo

func (m *S2CSetFriendRemarkName) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *S2CSetFriendRemarkName) GetFriendRemarkName() string {
	if m != nil {
		return m.FriendRemarkName
	}
	return ""
}

// 获取验证码
type C2SGetVerificationCode struct {
	PhoneNum             int64                  `protobuf:"varint,1,opt,name=phoneNum,proto3" json:"phoneNum,omitempty"`
	Region               string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Action               VerificationCodeAction `protobuf:"varint,3,opt,name=action,proto3,enum=msg_struct.VerificationCodeAction" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *C2SGetVerificationCode) Reset()         { *m = C2SGetVerificationCode{} }
func (m *C2SGetVerificationCode) String() string { return proto.CompactTextString(m) }
func (*C2SGetVerificationCode) ProtoMessage()    {}
func (*C2SGetVerificationCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{40}
}
func (m *C2SGetVerificationCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SGetVerificationCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SGetVerificationCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SGetVerificationCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SGetVerificationCode.Merge(m, src)
}
func (m *C2SGetVerificationCode) XXX_Size() int {
	return m.Size()
}
func (m *C2SGetVerificationCode) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SGetVerificationCode.DiscardUnknown(m)
}

var xxx_messageInfo_C2SGetVerificationCode proto.InternalMessageInfo

func (m *C2SGetVerificationCode) GetPhoneNum() int64 {
	if m != nil {
		return m.PhoneNum
	}
	return 0
}

func (m *C2SGetVerificationCode) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *C2SGetVerificationCode) GetAction() VerificationCodeAction {
	if m != nil {
		return m.Action
	}
	return VerificationCodeAction_register
}

type S2CGetVerificationCode struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CGetVerificationCode) Reset()         { *m = S2CGetVerificationCode{} }
func (m *S2CGetVerificationCode) String() string { return proto.CompactTextString(m) }
func (*S2CGetVerificationCode) ProtoMessage()    {}
func (*S2CGetVerificationCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{41}
}
func (m *S2CGetVerificationCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CGetVerificationCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CGetVerificationCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CGetVerificationCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CGetVerificationCode.Merge(m, src)
}
func (m *S2CGetVerificationCode) XXX_Size() int {
	return m.Size()
}
func (m *S2CGetVerificationCode) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CGetVerificationCode.DiscardUnknown(m)
}

var xxx_messageInfo_S2CGetVerificationCode proto.InternalMessageInfo

func (m *S2CGetVerificationCode) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 音频聊天内容
type VoiceMessage struct {
	AudioSecond          int64    `protobuf:"varint,1,opt,name=audioSecond,proto3" json:"audioSecond,omitempty"`
	AudioUrl             string   `protobuf:"bytes,2,opt,name=audioUrl,proto3" json:"audioUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoiceMessage) Reset()         { *m = VoiceMessage{} }
func (m *VoiceMessage) String() string { return proto.CompactTextString(m) }
func (*VoiceMessage) ProtoMessage()    {}
func (*VoiceMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{42}
}
func (m *VoiceMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoiceMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoiceMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoiceMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoiceMessage.Merge(m, src)
}
func (m *VoiceMessage) XXX_Size() int {
	return m.Size()
}
func (m *VoiceMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_VoiceMessage.DiscardUnknown(m)
}

var xxx_messageInfo_VoiceMessage proto.InternalMessageInfo

func (m *VoiceMessage) GetAudioSecond() int64 {
	if m != nil {
		return m.AudioSecond
	}
	return 0
}

func (m *VoiceMessage) GetAudioUrl() string {
	if m != nil {
		return m.AudioUrl
	}
	return ""
}

// 视频聊天内容
type VideoMessage struct {
	VideoSecond          int64    `protobuf:"varint,1,opt,name=videoSecond,proto3" json:"videoSecond,omitempty"`
	VideoUrl             string   `protobuf:"bytes,2,opt,name=videoUrl,proto3" json:"videoUrl,omitempty"`
	VideoThumbnail       string   `protobuf:"bytes,3,opt,name=videoThumbnail,proto3" json:"videoThumbnail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoMessage) Reset()         { *m = VideoMessage{} }
func (m *VideoMessage) String() string { return proto.CompactTextString(m) }
func (*VideoMessage) ProtoMessage()    {}
func (*VideoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{43}
}
func (m *VideoMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoMessage.Merge(m, src)
}
func (m *VideoMessage) XXX_Size() int {
	return m.Size()
}
func (m *VideoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_VideoMessage proto.InternalMessageInfo

func (m *VideoMessage) GetVideoSecond() int64 {
	if m != nil {
		return m.VideoSecond
	}
	return 0
}

func (m *VideoMessage) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *VideoMessage) GetVideoThumbnail() string {
	if m != nil {
		return m.VideoThumbnail
	}
	return ""
}

// 文件聊天内容
type FileMessage struct {
	FileSize             int64    `protobuf:"varint,1,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	FileUrl              string   `protobuf:"bytes,2,opt,name=fileUrl,proto3" json:"fileUrl,omitempty"`
	FileThumbnail        string   `protobuf:"bytes,3,opt,name=fileThumbnail,proto3" json:"fileThumbnail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileMessage) Reset()         { *m = FileMessage{} }
func (m *FileMessage) String() string { return proto.CompactTextString(m) }
func (*FileMessage) ProtoMessage()    {}
func (*FileMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{44}
}
func (m *FileMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FileMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FileMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FileMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileMessage.Merge(m, src)
}
func (m *FileMessage) XXX_Size() int {
	return m.Size()
}
func (m *FileMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_FileMessage.DiscardUnknown(m)
}

var xxx_messageInfo_FileMessage proto.InternalMessageInfo

func (m *FileMessage) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *FileMessage) GetFileUrl() string {
	if m != nil {
		return m.FileUrl
	}
	return ""
}

func (m *FileMessage) GetFileThumbnail() string {
	if m != nil {
		return m.FileThumbnail
	}
	return ""
}

// 名片
type CardMessage struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NickName             string   `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Portrait             string   `protobuf:"bytes,3,opt,name=portrait,proto3" json:"portrait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardMessage) Reset()         { *m = CardMessage{} }
func (m *CardMessage) String() string { return proto.CompactTextString(m) }
func (*CardMessage) ProtoMessage()    {}
func (*CardMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{45}
}
func (m *CardMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CardMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CardMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CardMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardMessage.Merge(m, src)
}
func (m *CardMessage) XXX_Size() int {
	return m.Size()
}
func (m *CardMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CardMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CardMessage proto.InternalMessageInfo

func (m *CardMessage) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CardMessage) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *CardMessage) GetPortrait() string {
	if m != nil {
		return m.Portrait
	}
	return ""
}

// 时间戳 srvTimeStamp 在本机是唯一的, 而且用户也是登录到固定的 gate 上
// 所以 receiverId, senderId, srvTimeStamp 这三个元素可以作为一个消息包的指纹
type ChatMessage struct {
	// 接收者的 id, 客户端填
	ReceiverId int64 `protobuf:"varint,1,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	// 发送者 id, 服务端填
	SenderId int64 `protobuf:"varint,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	// 文字信息/图片url/语音文件url, 客户端填
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// 服务端时间戳, ( 系统当前时间的纳秒值 / 1000 ), 服务端填, 必须保证唯一
	SrvTimeStamp int64 `protobuf:"varint,4,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	// 消息类型: word 文字, pic 图片, voice 语音
	MsgType string `protobuf:"bytes,5,opt,name=msgType,proto3" json:"msgType,omitempty"`
	// 发言者名字, 用于在聊天过程中实时让接受者知道改名
	SenderName string `protobuf:"bytes,6,opt,name=senderName,proto3" json:"senderName,omitempty"`
	// 客户端accountId+时间戳, ( 系统当前时间的纳秒值 / 1000 ), 客户端填, 必须保证唯一, 用于跟客户端确认消息用
	AccountIDCliTimeStamp string `protobuf:"bytes,7,opt,name=accountIDCliTimeStamp,proto3" json:"accountIDCliTimeStamp,omitempty"`
	// 发送者的头像url地址
	SenderheadPortraitUrl string `protobuf:"bytes,8,opt,name=senderheadPortraitUrl,proto3" json:"senderheadPortraitUrl,omitempty"`
	// 是否撤回消息, true 撤回消息, false 不撤回
	WithDraw bool `protobuf:"varint,9,opt,name=withDraw,proto3" json:"withDraw,omitempty"`
	// 好友备注名
	SenderRemarkName string `protobuf:"bytes,10,opt,name=senderRemarkName,proto3" json:"senderRemarkName,omitempty"`
	// 音频聊天内容
	VoiceMessage *VoiceMessage `protobuf:"bytes,11,opt,name=voiceMessage,proto3" json:"voiceMessage,omitempty"`
	// 视频聊天内容
	VideoMessage *VideoMessage `protobuf:"bytes,12,opt,name=videoMessage,proto3" json:"videoMessage,omitempty"`
	// 文件聊天内容
	FileMessage *FileMessage `protobuf:"bytes,13,opt,name=fileMessage,proto3" json:"fileMessage,omitempty"`
	// 名片
	CardMessage *CardMessage `protobuf:"bytes,14,opt,name=cardMessage,proto3" json:"cardMessage,omitempty"`
	// 发送者的上级代理 id
	SenderAgentId        int64    `protobuf:"varint,15,opt,name=senderAgentId,proto3" json:"senderAgentId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{46}
}
func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(m, src)
}
func (m *ChatMessage) XXX_Size() int {
	return m.Size()
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *ChatMessage) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *ChatMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ChatMessage) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

func (m *ChatMessage) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *ChatMessage) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *ChatMessage) GetAccountIDCliTimeStamp() string {
	if m != nil {
		return m.AccountIDCliTimeStamp
	}
	return ""
}

func (m *ChatMessage) GetSenderheadPortraitUrl() string {
	if m != nil {
		return m.SenderheadPortraitUrl
	}
	return ""
}

func (m *ChatMessage) GetWithDraw() bool {
	if m != nil {
		return m.WithDraw
	}
	return false
}

func (m *ChatMessage) GetSenderRemarkName() string {
	if m != nil {
		return m.SenderRemarkName
	}
	return ""
}

func (m *ChatMessage) GetVoiceMessage() *VoiceMessage {
	if m != nil {
		return m.VoiceMessage
	}
	return nil
}

func (m *ChatMessage) GetVideoMessage() *VideoMessage {
	if m != nil {
		return m.VideoMessage
	}
	return nil
}

func (m *ChatMessage) GetFileMessage() *FileMessage {
	if m != nil {
		return m.FileMessage
	}
	return nil
}

func (m *ChatMessage) GetCardMessage() *CardMessage {
	if m != nil {
		return m.CardMessage
	}
	return nil
}

func (m *ChatMessage) GetSenderAgentId() int64 {
	if m != nil {
		return m.SenderAgentId
	}
	return 0
}

// A 向服务器发送一条私聊消息, 转发给 B
type C2SPrivateChat struct {
	ChatMsg *ChatMessage `protobuf:"bytes,1,opt,name=chatMsg,proto3" json:"chatMsg,omitempty"`
	// 客户端时间戳, ( 系统当前时间的纳秒值 / 1000 ), 客户端填, 必须保证唯一, 用于跟客户端确认消息用
	CliTimeStamp         int64    `protobuf:"varint,2,opt,name=cliTimeStamp,proto3" json:"cliTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SPrivateChat) Reset()         { *m = C2SPrivateChat{} }
func (m *C2SPrivateChat) String() string { return proto.CompactTextString(m) }
func (*C2SPrivateChat) ProtoMessage()    {}
func (*C2SPrivateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{47}
}
func (m *C2SPrivateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SPrivateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SPrivateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SPrivateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SPrivateChat.Merge(m, src)
}
func (m *C2SPrivateChat) XXX_Size() int {
	return m.Size()
}
func (m *C2SPrivateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SPrivateChat.DiscardUnknown(m)
}

var xxx_messageInfo_C2SPrivateChat proto.InternalMessageInfo

func (m *C2SPrivateChat) GetChatMsg() *ChatMessage {
	if m != nil {
		return m.ChatMsg
	}
	return nil
}

func (m *C2SPrivateChat) GetCliTimeStamp() int64 {
	if m != nil {
		return m.CliTimeStamp
	}
	return 0
}

// 服务器把 A 发送的私聊消息,投递给 MQ
type MQPrivateChat struct {
	ChatMsg              *ChatMessage `protobuf:"bytes,1,opt,name=chatMsg,proto3" json:"chatMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MQPrivateChat) Reset()         { *m = MQPrivateChat{} }
func (m *MQPrivateChat) String() string { return proto.CompactTextString(m) }
func (*MQPrivateChat) ProtoMessage()    {}
func (*MQPrivateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{48}
}
func (m *MQPrivateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQPrivateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQPrivateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQPrivateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQPrivateChat.Merge(m, src)
}
func (m *MQPrivateChat) XXX_Size() int {
	return m.Size()
}
func (m *MQPrivateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_MQPrivateChat.DiscardUnknown(m)
}

var xxx_messageInfo_MQPrivateChat proto.InternalMessageInfo

func (m *MQPrivateChat) GetChatMsg() *ChatMessage {
	if m != nil {
		return m.ChatMsg
	}
	return nil
}

// 服务器把私聊消息保存进 redis, 投递给 MQ 后, 向 A 回复确认消息
type S2CPrivateChat struct {
	// B 的 id
	ReceiverId int64 `protobuf:"varint,1,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	// 发送者的头像
	SenderheadPortraitUrl string `protobuf:"bytes,2,opt,name=senderheadPortraitUrl,proto3" json:"senderheadPortraitUrl,omitempty"`
	// 服务器的时间戳, 客户端转换后显示在界面上
	SrvTimeStamp int64 `protobuf:"varint,3,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	// 这是 A 发来的时间戳, 用来向 A 确定某条聊天记录
	CliTimeStamp int64 `protobuf:"varint,4,opt,name=cliTimeStamp,proto3" json:"cliTimeStamp,omitempty"`
	// 这是 A 发来的时间戳, 用来向 A 确定某条聊天记录
	AccountIDCliTimeStamp string   `protobuf:"bytes,5,opt,name=accountIDCliTimeStamp,proto3" json:"accountIDCliTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *S2CPrivateChat) Reset()         { *m = S2CPrivateChat{} }
func (m *S2CPrivateChat) String() string { return proto.CompactTextString(m) }
func (*S2CPrivateChat) ProtoMessage()    {}
func (*S2CPrivateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{49}
}
func (m *S2CPrivateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CPrivateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CPrivateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CPrivateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CPrivateChat.Merge(m, src)
}
func (m *S2CPrivateChat) XXX_Size() int {
	return m.Size()
}
func (m *S2CPrivateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CPrivateChat.DiscardUnknown(m)
}

var xxx_messageInfo_S2CPrivateChat proto.InternalMessageInfo

func (m *S2CPrivateChat) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *S2CPrivateChat) GetSenderheadPortraitUrl() string {
	if m != nil {
		return m.SenderheadPortraitUrl
	}
	return ""
}

func (m *S2CPrivateChat) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

func (m *S2CPrivateChat) GetCliTimeStamp() int64 {
	if m != nil {
		return m.CliTimeStamp
	}
	return 0
}

func (m *S2CPrivateChat) GetAccountIDCliTimeStamp() string {
	if m != nil {
		return m.AccountIDCliTimeStamp
	}
	return ""
}

// B 收到 A 发来的消息
type S2CRecvPrivateChat struct {
	ChatMsg              *ChatMessage `protobuf:"bytes,1,opt,name=chatMsg,proto3" json:"chatMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *S2CRecvPrivateChat) Reset()         { *m = S2CRecvPrivateChat{} }
func (m *S2CRecvPrivateChat) String() string { return proto.CompactTextString(m) }
func (*S2CRecvPrivateChat) ProtoMessage()    {}
func (*S2CRecvPrivateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{50}
}
func (m *S2CRecvPrivateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvPrivateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvPrivateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvPrivateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvPrivateChat.Merge(m, src)
}
func (m *S2CRecvPrivateChat) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvPrivateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvPrivateChat.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvPrivateChat proto.InternalMessageInfo

func (m *S2CRecvPrivateChat) GetChatMsg() *ChatMessage {
	if m != nil {
		return m.ChatMsg
	}
	return nil
}

// 收到"我"在其他终端上发出的消息
// 比如 a  登录了 APP 和 WEB 端的 IM, 在 APP 上发给别人的私聊消息, WEB 上也能看到
type S2COtherTerminalPrivateChat struct {
	ChatMsg              *ChatMessage `protobuf:"bytes,1,opt,name=chatMsg,proto3" json:"chatMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *S2COtherTerminalPrivateChat) Reset()         { *m = S2COtherTerminalPrivateChat{} }
func (m *S2COtherTerminalPrivateChat) String() string { return proto.CompactTextString(m) }
func (*S2COtherTerminalPrivateChat) ProtoMessage()    {}
func (*S2COtherTerminalPrivateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{51}
}
func (m *S2COtherTerminalPrivateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2COtherTerminalPrivateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2COtherTerminalPrivateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2COtherTerminalPrivateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2COtherTerminalPrivateChat.Merge(m, src)
}
func (m *S2COtherTerminalPrivateChat) XXX_Size() int {
	return m.Size()
}
func (m *S2COtherTerminalPrivateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_S2COtherTerminalPrivateChat.DiscardUnknown(m)
}

var xxx_messageInfo_S2COtherTerminalPrivateChat proto.InternalMessageInfo

func (m *S2COtherTerminalPrivateChat) GetChatMsg() *ChatMessage {
	if m != nil {
		return m.ChatMsg
	}
	return nil
}

// 账号在其他地方登录
type S2CLoginSomewhereElse struct {
	SrvTimeStamp         int64    `protobuf:"varint,1,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CLoginSomewhereElse) Reset()         { *m = S2CLoginSomewhereElse{} }
func (m *S2CLoginSomewhereElse) String() string { return proto.CompactTextString(m) }
func (*S2CLoginSomewhereElse) ProtoMessage()    {}
func (*S2CLoginSomewhereElse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{52}
}
func (m *S2CLoginSomewhereElse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CLoginSomewhereElse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CLoginSomewhereElse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CLoginSomewhereElse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CLoginSomewhereElse.Merge(m, src)
}
func (m *S2CLoginSomewhereElse) XXX_Size() int {
	return m.Size()
}
func (m *S2CLoginSomewhereElse) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CLoginSomewhereElse.DiscardUnknown(m)
}

var xxx_messageInfo_S2CLoginSomewhereElse proto.InternalMessageInfo

func (m *S2CLoginSomewhereElse) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

// A 告诉服务端,收到的最后一条消息的时间戳, 取值来自 S2CPrivateChat.srvTimeStamp, S2CRecvPrivateChat.chatMsg.srvTimeStamp
// A 发给 B 的消息, 算 A 的聊天记录, 所以取值来自 S2CPrivateChat.srvTimeStamp
// B 发给 A 的消息, 算 A 的聊天记录, 所以取值来自 S2CRecvPrivateChat.chatMsg.srvTimeStamp
type C2SLastMsgTimeStamp struct {
	SrvTimeStamp         int64    `protobuf:"varint,2,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SLastMsgTimeStamp) Reset()         { *m = C2SLastMsgTimeStamp{} }
func (m *C2SLastMsgTimeStamp) String() string { return proto.CompactTextString(m) }
func (*C2SLastMsgTimeStamp) ProtoMessage()    {}
func (*C2SLastMsgTimeStamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{53}
}
func (m *C2SLastMsgTimeStamp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SLastMsgTimeStamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SLastMsgTimeStamp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SLastMsgTimeStamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SLastMsgTimeStamp.Merge(m, src)
}
func (m *C2SLastMsgTimeStamp) XXX_Size() int {
	return m.Size()
}
func (m *C2SLastMsgTimeStamp) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SLastMsgTimeStamp.DiscardUnknown(m)
}

var xxx_messageInfo_C2SLastMsgTimeStamp proto.InternalMessageInfo

func (m *C2SLastMsgTimeStamp) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

// 客户端登录后发送这条消息获取离线私聊消息
type C2SGetOfflinePrivateChatMsg struct {
	// 这个值是 web 端设置为 true, 安卓和 ios 不需要设置
	IsWebSide            bool     `protobuf:"varint,1,opt,name=isWebSide,proto3" json:"isWebSide,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SGetOfflinePrivateChatMsg) Reset()         { *m = C2SGetOfflinePrivateChatMsg{} }
func (m *C2SGetOfflinePrivateChatMsg) String() string { return proto.CompactTextString(m) }
func (*C2SGetOfflinePrivateChatMsg) ProtoMessage()    {}
func (*C2SGetOfflinePrivateChatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{54}
}
func (m *C2SGetOfflinePrivateChatMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SGetOfflinePrivateChatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SGetOfflinePrivateChatMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SGetOfflinePrivateChatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SGetOfflinePrivateChatMsg.Merge(m, src)
}
func (m *C2SGetOfflinePrivateChatMsg) XXX_Size() int {
	return m.Size()
}
func (m *C2SGetOfflinePrivateChatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SGetOfflinePrivateChatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_C2SGetOfflinePrivateChatMsg proto.InternalMessageInfo

func (m *C2SGetOfflinePrivateChatMsg) GetIsWebSide() bool {
	if m != nil {
		return m.IsWebSide
	}
	return false
}

type S2CGetOfflinePrivateChatMsg struct {
	Msgs []*ChatMessage `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs,omitempty"`
	// srvTimeStamp 字段是当做占位符来让 iOS 客户端正常运行
	// 如果没有 srvTimeStamp 字段, 当 repeated chatMessage msgs 为空时
	// iOS 客户端会发生异常
	SrvTimeStamp         int64    `protobuf:"varint,2,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CGetOfflinePrivateChatMsg) Reset()         { *m = S2CGetOfflinePrivateChatMsg{} }
func (m *S2CGetOfflinePrivateChatMsg) String() string { return proto.CompactTextString(m) }
func (*S2CGetOfflinePrivateChatMsg) ProtoMessage()    {}
func (*S2CGetOfflinePrivateChatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{55}
}
func (m *S2CGetOfflinePrivateChatMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CGetOfflinePrivateChatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CGetOfflinePrivateChatMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CGetOfflinePrivateChatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CGetOfflinePrivateChatMsg.Merge(m, src)
}
func (m *S2CGetOfflinePrivateChatMsg) XXX_Size() int {
	return m.Size()
}
func (m *S2CGetOfflinePrivateChatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CGetOfflinePrivateChatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_S2CGetOfflinePrivateChatMsg proto.InternalMessageInfo

func (m *S2CGetOfflinePrivateChatMsg) GetMsgs() []*ChatMessage {
	if m != nil {
		return m.Msgs
	}
	return nil
}

func (m *S2CGetOfflinePrivateChatMsg) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

type C2SHuanXinPush struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SHuanXinPush) Reset()         { *m = C2SHuanXinPush{} }
func (m *C2SHuanXinPush) String() string { return proto.CompactTextString(m) }
func (*C2SHuanXinPush) ProtoMessage()    {}
func (*C2SHuanXinPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{56}
}
func (m *C2SHuanXinPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SHuanXinPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SHuanXinPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SHuanXinPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SHuanXinPush.Merge(m, src)
}
func (m *C2SHuanXinPush) XXX_Size() int {
	return m.Size()
}
func (m *C2SHuanXinPush) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SHuanXinPush.DiscardUnknown(m)
}

var xxx_messageInfo_C2SHuanXinPush proto.InternalMessageInfo

func (m *C2SHuanXinPush) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type S2CHuanXinPush struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CHuanXinPush) Reset()         { *m = S2CHuanXinPush{} }
func (m *S2CHuanXinPush) String() string { return proto.CompactTextString(m) }
func (*S2CHuanXinPush) ProtoMessage()    {}
func (*S2CHuanXinPush) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{57}
}
func (m *S2CHuanXinPush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CHuanXinPush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CHuanXinPush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CHuanXinPush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CHuanXinPush.Merge(m, src)
}
func (m *S2CHuanXinPush) XXX_Size() int {
	return m.Size()
}
func (m *S2CHuanXinPush) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CHuanXinPush.DiscardUnknown(m)
}

var xxx_messageInfo_S2CHuanXinPush proto.InternalMessageInfo

func (m *S2CHuanXinPush) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type C2SPicWillBeSend struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SPicWillBeSend) Reset()         { *m = C2SPicWillBeSend{} }
func (m *C2SPicWillBeSend) String() string { return proto.CompactTextString(m) }
func (*C2SPicWillBeSend) ProtoMessage()    {}
func (*C2SPicWillBeSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{58}
}
func (m *C2SPicWillBeSend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SPicWillBeSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SPicWillBeSend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SPicWillBeSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SPicWillBeSend.Merge(m, src)
}
func (m *C2SPicWillBeSend) XXX_Size() int {
	return m.Size()
}
func (m *C2SPicWillBeSend) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SPicWillBeSend.DiscardUnknown(m)
}

var xxx_messageInfo_C2SPicWillBeSend proto.InternalMessageInfo

type S2CPicWillBeSend struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CPicWillBeSend) Reset()         { *m = S2CPicWillBeSend{} }
func (m *S2CPicWillBeSend) String() string { return proto.CompactTextString(m) }
func (*S2CPicWillBeSend) ProtoMessage()    {}
func (*S2CPicWillBeSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{59}
}
func (m *S2CPicWillBeSend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CPicWillBeSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CPicWillBeSend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CPicWillBeSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CPicWillBeSend.Merge(m, src)
}
func (m *S2CPicWillBeSend) XXX_Size() int {
	return m.Size()
}
func (m *S2CPicWillBeSend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CPicWillBeSend.DiscardUnknown(m)
}

var xxx_messageInfo_S2CPicWillBeSend proto.InternalMessageInfo

func (m *S2CPicWillBeSend) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type C2SAddFriend struct {
	// 发起好友请求的人
	SenderId int64 `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	// 接收好友请求的人
	ReceiverId           int64    `protobuf:"varint,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	MsgTimestamp         int64    `protobuf:"varint,3,opt,name=msgTimestamp,proto3" json:"msgTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SAddFriend) Reset()         { *m = C2SAddFriend{} }
func (m *C2SAddFriend) String() string { return proto.CompactTextString(m) }
func (*C2SAddFriend) ProtoMessage()    {}
func (*C2SAddFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{60}
}
func (m *C2SAddFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SAddFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SAddFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SAddFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SAddFriend.Merge(m, src)
}
func (m *C2SAddFriend) XXX_Size() int {
	return m.Size()
}
func (m *C2SAddFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SAddFriend.DiscardUnknown(m)
}

var xxx_messageInfo_C2SAddFriend proto.InternalMessageInfo

func (m *C2SAddFriend) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *C2SAddFriend) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *C2SAddFriend) GetMsgTimestamp() int64 {
	if m != nil {
		return m.MsgTimestamp
	}
	return 0
}

type MQAddFriend struct {
	AddFriend            *C2SAddFriend `protobuf:"bytes,1,opt,name=addFriend,proto3" json:"addFriend,omitempty"`
	SrvTimeStamp         int64         `protobuf:"varint,2,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	SenderNickName       string        `protobuf:"bytes,3,opt,name=senderNickName,proto3" json:"senderNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MQAddFriend) Reset()         { *m = MQAddFriend{} }
func (m *MQAddFriend) String() string { return proto.CompactTextString(m) }
func (*MQAddFriend) ProtoMessage()    {}
func (*MQAddFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{61}
}
func (m *MQAddFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQAddFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQAddFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQAddFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQAddFriend.Merge(m, src)
}
func (m *MQAddFriend) XXX_Size() int {
	return m.Size()
}
func (m *MQAddFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_MQAddFriend.DiscardUnknown(m)
}

var xxx_messageInfo_MQAddFriend proto.InternalMessageInfo

func (m *MQAddFriend) GetAddFriend() *C2SAddFriend {
	if m != nil {
		return m.AddFriend
	}
	return nil
}

func (m *MQAddFriend) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

func (m *MQAddFriend) GetSenderNickName() string {
	if m != nil {
		return m.SenderNickName
	}
	return ""
}

type S2CAddFriend struct {
	// 发起好友请求的人
	SenderId int64 `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	// 接收好友请求的人
	ReceiverId           int64    `protobuf:"varint,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	SrvTimeStamp         int64    `protobuf:"varint,3,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CAddFriend) Reset()         { *m = S2CAddFriend{} }
func (m *S2CAddFriend) String() string { return proto.CompactTextString(m) }
func (*S2CAddFriend) ProtoMessage()    {}
func (*S2CAddFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{62}
}
func (m *S2CAddFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CAddFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CAddFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CAddFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CAddFriend.Merge(m, src)
}
func (m *S2CAddFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2CAddFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CAddFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2CAddFriend proto.InternalMessageInfo

func (m *S2CAddFriend) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *S2CAddFriend) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *S2CAddFriend) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

type S2CRecvAddFriend struct {
	// 发起好友请求的人
	SenderId int64 `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	// 接收好友请求的人
	ReceiverId           int64    `protobuf:"varint,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	SrvTimeStamp         int64    `protobuf:"varint,3,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	SenderNickName       string   `protobuf:"bytes,4,opt,name=senderNickName,proto3" json:"senderNickName,omitempty"`
	SenderHeadPortrait   string   `protobuf:"bytes,5,opt,name=senderHeadPortrait,proto3" json:"senderHeadPortrait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvAddFriend) Reset()         { *m = S2CRecvAddFriend{} }
func (m *S2CRecvAddFriend) String() string { return proto.CompactTextString(m) }
func (*S2CRecvAddFriend) ProtoMessage()    {}
func (*S2CRecvAddFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{63}
}
func (m *S2CRecvAddFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvAddFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvAddFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvAddFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvAddFriend.Merge(m, src)
}
func (m *S2CRecvAddFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvAddFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvAddFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvAddFriend proto.InternalMessageInfo

func (m *S2CRecvAddFriend) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *S2CRecvAddFriend) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *S2CRecvAddFriend) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

func (m *S2CRecvAddFriend) GetSenderNickName() string {
	if m != nil {
		return m.SenderNickName
	}
	return ""
}

func (m *S2CRecvAddFriend) GetSenderHeadPortrait() string {
	if m != nil {
		return m.SenderHeadPortrait
	}
	return ""
}

type C2SAgreeBecomeFriend struct {
	// 发起好友请求的人, C2SAddFriend.senderId
	SenderId int64 `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	// 接收好友请求的人, 也就是发 C2SAgreeBecomeFriend 消息的人
	ReceiverId           int64    `protobuf:"varint,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	MsgTimestamp         int64    `protobuf:"varint,3,opt,name=msgTimestamp,proto3" json:"msgTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SAgreeBecomeFriend) Reset()         { *m = C2SAgreeBecomeFriend{} }
func (m *C2SAgreeBecomeFriend) String() string { return proto.CompactTextString(m) }
func (*C2SAgreeBecomeFriend) ProtoMessage()    {}
func (*C2SAgreeBecomeFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{64}
}
func (m *C2SAgreeBecomeFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SAgreeBecomeFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SAgreeBecomeFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SAgreeBecomeFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SAgreeBecomeFriend.Merge(m, src)
}
func (m *C2SAgreeBecomeFriend) XXX_Size() int {
	return m.Size()
}
func (m *C2SAgreeBecomeFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SAgreeBecomeFriend.DiscardUnknown(m)
}

var xxx_messageInfo_C2SAgreeBecomeFriend proto.InternalMessageInfo

func (m *C2SAgreeBecomeFriend) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *C2SAgreeBecomeFriend) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *C2SAgreeBecomeFriend) GetMsgTimestamp() int64 {
	if m != nil {
		return m.MsgTimestamp
	}
	return 0
}

type S2CAgreeBecomeFriend struct {
	// 发起好友请求的人, C2SAddFriend.senderId
	SenderId                      int64    `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	MsgTimestamp                  int64    `protobuf:"varint,2,opt,name=msgTimestamp,proto3" json:"msgTimestamp,omitempty"`
	SenderNickName                string   `protobuf:"bytes,3,opt,name=senderNickName,proto3" json:"senderNickName,omitempty"`
	AgreeBecomeFriendHeadPortrait string   `protobuf:"bytes,4,opt,name=agreeBecomeFriendHeadPortrait,proto3" json:"agreeBecomeFriendHeadPortrait,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *S2CAgreeBecomeFriend) Reset()         { *m = S2CAgreeBecomeFriend{} }
func (m *S2CAgreeBecomeFriend) String() string { return proto.CompactTextString(m) }
func (*S2CAgreeBecomeFriend) ProtoMessage()    {}
func (*S2CAgreeBecomeFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{65}
}
func (m *S2CAgreeBecomeFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CAgreeBecomeFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CAgreeBecomeFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CAgreeBecomeFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CAgreeBecomeFriend.Merge(m, src)
}
func (m *S2CAgreeBecomeFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2CAgreeBecomeFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CAgreeBecomeFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2CAgreeBecomeFriend proto.InternalMessageInfo

func (m *S2CAgreeBecomeFriend) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *S2CAgreeBecomeFriend) GetMsgTimestamp() int64 {
	if m != nil {
		return m.MsgTimestamp
	}
	return 0
}

func (m *S2CAgreeBecomeFriend) GetSenderNickName() string {
	if m != nil {
		return m.SenderNickName
	}
	return ""
}

func (m *S2CAgreeBecomeFriend) GetAgreeBecomeFriendHeadPortrait() string {
	if m != nil {
		return m.AgreeBecomeFriendHeadPortrait
	}
	return ""
}

type S2CRecvAgreeBecomeFriend struct {
	// 发起好友请求的人, C2SAddFriend.senderId
	SenderId int64 `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	// 接收好友请求的人, 也就是发 C2SAgreeBecomeFriend 消息的人
	ReceiverId           int64    `protobuf:"varint,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	ReceiverNickName     string   `protobuf:"bytes,3,opt,name=receiverNickName,proto3" json:"receiverNickName,omitempty"`
	ReceiverHeadPortrait string   `protobuf:"bytes,4,opt,name=receiverHeadPortrait,proto3" json:"receiverHeadPortrait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvAgreeBecomeFriend) Reset()         { *m = S2CRecvAgreeBecomeFriend{} }
func (m *S2CRecvAgreeBecomeFriend) String() string { return proto.CompactTextString(m) }
func (*S2CRecvAgreeBecomeFriend) ProtoMessage()    {}
func (*S2CRecvAgreeBecomeFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{66}
}
func (m *S2CRecvAgreeBecomeFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvAgreeBecomeFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvAgreeBecomeFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvAgreeBecomeFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvAgreeBecomeFriend.Merge(m, src)
}
func (m *S2CRecvAgreeBecomeFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvAgreeBecomeFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvAgreeBecomeFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvAgreeBecomeFriend proto.InternalMessageInfo

func (m *S2CRecvAgreeBecomeFriend) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *S2CRecvAgreeBecomeFriend) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *S2CRecvAgreeBecomeFriend) GetReceiverNickName() string {
	if m != nil {
		return m.ReceiverNickName
	}
	return ""
}

func (m *S2CRecvAgreeBecomeFriend) GetReceiverHeadPortrait() string {
	if m != nil {
		return m.ReceiverHeadPortrait
	}
	return ""
}

type MQAgreeBecomeFriend struct {
	AgreeBeFriend        *C2SAgreeBecomeFriend `protobuf:"bytes,1,opt,name=agreeBeFriend,proto3" json:"agreeBeFriend,omitempty"`
	MsgTimestamp         int64                 `protobuf:"varint,2,opt,name=msgTimestamp,proto3" json:"msgTimestamp,omitempty"`
	FriendNickName       string                `protobuf:"bytes,3,opt,name=friendNickName,proto3" json:"friendNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MQAgreeBecomeFriend) Reset()         { *m = MQAgreeBecomeFriend{} }
func (m *MQAgreeBecomeFriend) String() string { return proto.CompactTextString(m) }
func (*MQAgreeBecomeFriend) ProtoMessage()    {}
func (*MQAgreeBecomeFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{67}
}
func (m *MQAgreeBecomeFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQAgreeBecomeFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQAgreeBecomeFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQAgreeBecomeFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQAgreeBecomeFriend.Merge(m, src)
}
func (m *MQAgreeBecomeFriend) XXX_Size() int {
	return m.Size()
}
func (m *MQAgreeBecomeFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_MQAgreeBecomeFriend.DiscardUnknown(m)
}

var xxx_messageInfo_MQAgreeBecomeFriend proto.InternalMessageInfo

func (m *MQAgreeBecomeFriend) GetAgreeBeFriend() *C2SAgreeBecomeFriend {
	if m != nil {
		return m.AgreeBeFriend
	}
	return nil
}

func (m *MQAgreeBecomeFriend) GetMsgTimestamp() int64 {
	if m != nil {
		return m.MsgTimestamp
	}
	return 0
}

func (m *MQAgreeBecomeFriend) GetFriendNickName() string {
	if m != nil {
		return m.FriendNickName
	}
	return ""
}

type S2COtherTerminalAgreeBecomeFriend struct {
	// 发起好友请求的人, C2SAddFriend.senderId
	SenderId int64 `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	//int64 msgTimestamp = 2;
	SenderNickName       string   `protobuf:"bytes,3,opt,name=senderNickName,proto3" json:"senderNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2COtherTerminalAgreeBecomeFriend) Reset()         { *m = S2COtherTerminalAgreeBecomeFriend{} }
func (m *S2COtherTerminalAgreeBecomeFriend) String() string { return proto.CompactTextString(m) }
func (*S2COtherTerminalAgreeBecomeFriend) ProtoMessage()    {}
func (*S2COtherTerminalAgreeBecomeFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{68}
}
func (m *S2COtherTerminalAgreeBecomeFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2COtherTerminalAgreeBecomeFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2COtherTerminalAgreeBecomeFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2COtherTerminalAgreeBecomeFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2COtherTerminalAgreeBecomeFriend.Merge(m, src)
}
func (m *S2COtherTerminalAgreeBecomeFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2COtherTerminalAgreeBecomeFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2COtherTerminalAgreeBecomeFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2COtherTerminalAgreeBecomeFriend proto.InternalMessageInfo

func (m *S2COtherTerminalAgreeBecomeFriend) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *S2COtherTerminalAgreeBecomeFriend) GetSenderNickName() string {
	if m != nil {
		return m.SenderNickName
	}
	return ""
}

type C2SReadFriendReq struct {
	SenderId             int64    `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SReadFriendReq) Reset()         { *m = C2SReadFriendReq{} }
func (m *C2SReadFriendReq) String() string { return proto.CompactTextString(m) }
func (*C2SReadFriendReq) ProtoMessage()    {}
func (*C2SReadFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{69}
}
func (m *C2SReadFriendReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SReadFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SReadFriendReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SReadFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SReadFriendReq.Merge(m, src)
}
func (m *C2SReadFriendReq) XXX_Size() int {
	return m.Size()
}
func (m *C2SReadFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SReadFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_C2SReadFriendReq proto.InternalMessageInfo

func (m *C2SReadFriendReq) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

type S2CReadFriendReq struct {
	SenderId             int64    `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CReadFriendReq) Reset()         { *m = S2CReadFriendReq{} }
func (m *S2CReadFriendReq) String() string { return proto.CompactTextString(m) }
func (*S2CReadFriendReq) ProtoMessage()    {}
func (*S2CReadFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{70}
}
func (m *S2CReadFriendReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CReadFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CReadFriendReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CReadFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CReadFriendReq.Merge(m, src)
}
func (m *S2CReadFriendReq) XXX_Size() int {
	return m.Size()
}
func (m *S2CReadFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CReadFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_S2CReadFriendReq proto.InternalMessageInfo

func (m *S2CReadFriendReq) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

type C2SDeleteFriend struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SDeleteFriend) Reset()         { *m = C2SDeleteFriend{} }
func (m *C2SDeleteFriend) String() string { return proto.CompactTextString(m) }
func (*C2SDeleteFriend) ProtoMessage()    {}
func (*C2SDeleteFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{71}
}
func (m *C2SDeleteFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SDeleteFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SDeleteFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SDeleteFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SDeleteFriend.Merge(m, src)
}
func (m *C2SDeleteFriend) XXX_Size() int {
	return m.Size()
}
func (m *C2SDeleteFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SDeleteFriend.DiscardUnknown(m)
}

var xxx_messageInfo_C2SDeleteFriend proto.InternalMessageInfo

func (m *C2SDeleteFriend) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type MQDeleteFriend struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MQDeleteFriend) Reset()         { *m = MQDeleteFriend{} }
func (m *MQDeleteFriend) String() string { return proto.CompactTextString(m) }
func (*MQDeleteFriend) ProtoMessage()    {}
func (*MQDeleteFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{72}
}
func (m *MQDeleteFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQDeleteFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQDeleteFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQDeleteFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQDeleteFriend.Merge(m, src)
}
func (m *MQDeleteFriend) XXX_Size() int {
	return m.Size()
}
func (m *MQDeleteFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_MQDeleteFriend.DiscardUnknown(m)
}

var xxx_messageInfo_MQDeleteFriend proto.InternalMessageInfo

func (m *MQDeleteFriend) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type S2CDeleteFriend struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CDeleteFriend) Reset()         { *m = S2CDeleteFriend{} }
func (m *S2CDeleteFriend) String() string { return proto.CompactTextString(m) }
func (*S2CDeleteFriend) ProtoMessage()    {}
func (*S2CDeleteFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{73}
}
func (m *S2CDeleteFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CDeleteFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CDeleteFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CDeleteFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CDeleteFriend.Merge(m, src)
}
func (m *S2CDeleteFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2CDeleteFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CDeleteFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2CDeleteFriend proto.InternalMessageInfo

func (m *S2CDeleteFriend) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type S2CRecvDeleteFriend struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvDeleteFriend) Reset()         { *m = S2CRecvDeleteFriend{} }
func (m *S2CRecvDeleteFriend) String() string { return proto.CompactTextString(m) }
func (*S2CRecvDeleteFriend) ProtoMessage()    {}
func (*S2CRecvDeleteFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{74}
}
func (m *S2CRecvDeleteFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvDeleteFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvDeleteFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvDeleteFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvDeleteFriend.Merge(m, src)
}
func (m *S2CRecvDeleteFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvDeleteFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvDeleteFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvDeleteFriend proto.InternalMessageInfo

func (m *S2CRecvDeleteFriend) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type C2SConfirmDeleteFriend struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SConfirmDeleteFriend) Reset()         { *m = C2SConfirmDeleteFriend{} }
func (m *C2SConfirmDeleteFriend) String() string { return proto.CompactTextString(m) }
func (*C2SConfirmDeleteFriend) ProtoMessage()    {}
func (*C2SConfirmDeleteFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{75}
}
func (m *C2SConfirmDeleteFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SConfirmDeleteFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SConfirmDeleteFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SConfirmDeleteFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SConfirmDeleteFriend.Merge(m, src)
}
func (m *C2SConfirmDeleteFriend) XXX_Size() int {
	return m.Size()
}
func (m *C2SConfirmDeleteFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SConfirmDeleteFriend.DiscardUnknown(m)
}

var xxx_messageInfo_C2SConfirmDeleteFriend proto.InternalMessageInfo

func (m *C2SConfirmDeleteFriend) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type S2CConfirmDeleteFriend struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CConfirmDeleteFriend) Reset()         { *m = S2CConfirmDeleteFriend{} }
func (m *S2CConfirmDeleteFriend) String() string { return proto.CompactTextString(m) }
func (*S2CConfirmDeleteFriend) ProtoMessage()    {}
func (*S2CConfirmDeleteFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{76}
}
func (m *S2CConfirmDeleteFriend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CConfirmDeleteFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CConfirmDeleteFriend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CConfirmDeleteFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CConfirmDeleteFriend.Merge(m, src)
}
func (m *S2CConfirmDeleteFriend) XXX_Size() int {
	return m.Size()
}
func (m *S2CConfirmDeleteFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CConfirmDeleteFriend.DiscardUnknown(m)
}

var xxx_messageInfo_S2CConfirmDeleteFriend proto.InternalMessageInfo

func (m *S2CConfirmDeleteFriend) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type C2SCreateChatGroup struct {
	// 群组名称
	ChatGroupName string `protobuf:"bytes,1,opt,name=chatGroupName,proto3" json:"chatGroupName,omitempty"`
	// 群组图片, 要注意二进制安全
	PicChatGroup string `protobuf:"bytes,2,opt,name=picChatGroup,proto3" json:"picChatGroup,omitempty"`
	// 建群时邀请的好友
	FirendIds            []int64  `protobuf:"varint,3,rep,packed,name=firendIds,proto3" json:"firendIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SCreateChatGroup) Reset()         { *m = C2SCreateChatGroup{} }
func (m *C2SCreateChatGroup) String() string { return proto.CompactTextString(m) }
func (*C2SCreateChatGroup) ProtoMessage()    {}
func (*C2SCreateChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{77}
}
func (m *C2SCreateChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SCreateChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SCreateChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SCreateChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SCreateChatGroup.Merge(m, src)
}
func (m *C2SCreateChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *C2SCreateChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SCreateChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_C2SCreateChatGroup proto.InternalMessageInfo

func (m *C2SCreateChatGroup) GetChatGroupName() string {
	if m != nil {
		return m.ChatGroupName
	}
	return ""
}

func (m *C2SCreateChatGroup) GetPicChatGroup() string {
	if m != nil {
		return m.PicChatGroup
	}
	return ""
}

func (m *C2SCreateChatGroup) GetFirendIds() []int64 {
	if m != nil {
		return m.FirendIds
	}
	return nil
}

// 由建群的群主填写下面结构体的内容
type CreateChatGroup struct {
	// 群组名称
	ChatGroupName string `protobuf:"bytes,1,opt,name=chatGroupName,proto3" json:"chatGroupName,omitempty"`
	// 群组图片, 要注意二进制安全
	PicChatGroup string `protobuf:"bytes,2,opt,name=picChatGroup,proto3" json:"picChatGroup,omitempty"`
	// 建群时邀请的好友
	Members []int64 `protobuf:"varint,3,rep,packed,name=members,proto3" json:"members,omitempty"`
	// 群唯一 id
	ChatGroupId int64 `protobuf:"varint,4,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 群主 id
	ChatGroupAdminId int64 `protobuf:"varint,5,opt,name=chatGroupAdminId,proto3" json:"chatGroupAdminId,omitempty"`
	// 群主所在的服务器的 MQ 主题
	Topic                string   `protobuf:"bytes,6,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateChatGroup) Reset()         { *m = CreateChatGroup{} }
func (m *CreateChatGroup) String() string { return proto.CompactTextString(m) }
func (*CreateChatGroup) ProtoMessage()    {}
func (*CreateChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{78}
}
func (m *CreateChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateChatGroup.Merge(m, src)
}
func (m *CreateChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *CreateChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_CreateChatGroup proto.InternalMessageInfo

func (m *CreateChatGroup) GetChatGroupName() string {
	if m != nil {
		return m.ChatGroupName
	}
	return ""
}

func (m *CreateChatGroup) GetPicChatGroup() string {
	if m != nil {
		return m.PicChatGroup
	}
	return ""
}

func (m *CreateChatGroup) GetMembers() []int64 {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CreateChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *CreateChatGroup) GetChatGroupAdminId() int64 {
	if m != nil {
		return m.ChatGroupAdminId
	}
	return 0
}

func (m *CreateChatGroup) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type S2CCreateChatGroup struct {
	Ccg                  *CreateChatGroup `protobuf:"bytes,1,opt,name=ccg,proto3" json:"ccg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2CCreateChatGroup) Reset()         { *m = S2CCreateChatGroup{} }
func (m *S2CCreateChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CCreateChatGroup) ProtoMessage()    {}
func (*S2CCreateChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{79}
}
func (m *S2CCreateChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CCreateChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CCreateChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CCreateChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CCreateChatGroup.Merge(m, src)
}
func (m *S2CCreateChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CCreateChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CCreateChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CCreateChatGroup proto.InternalMessageInfo

func (m *S2CCreateChatGroup) GetCcg() *CreateChatGroup {
	if m != nil {
		return m.Ccg
	}
	return nil
}

type MQCreateChatGroup struct {
	Ccg                  *CreateChatGroup `protobuf:"bytes,1,opt,name=ccg,proto3" json:"ccg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MQCreateChatGroup) Reset()         { *m = MQCreateChatGroup{} }
func (m *MQCreateChatGroup) String() string { return proto.CompactTextString(m) }
func (*MQCreateChatGroup) ProtoMessage()    {}
func (*MQCreateChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{80}
}
func (m *MQCreateChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQCreateChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQCreateChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQCreateChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQCreateChatGroup.Merge(m, src)
}
func (m *MQCreateChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *MQCreateChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MQCreateChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MQCreateChatGroup proto.InternalMessageInfo

func (m *MQCreateChatGroup) GetCcg() *CreateChatGroup {
	if m != nil {
		return m.Ccg
	}
	return nil
}

type S2CRecvCreateChatGroup struct {
	Ccg                  *CreateChatGroup `protobuf:"bytes,1,opt,name=ccg,proto3" json:"ccg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2CRecvCreateChatGroup) Reset()         { *m = S2CRecvCreateChatGroup{} }
func (m *S2CRecvCreateChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CRecvCreateChatGroup) ProtoMessage()    {}
func (*S2CRecvCreateChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{81}
}
func (m *S2CRecvCreateChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvCreateChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvCreateChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvCreateChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvCreateChatGroup.Merge(m, src)
}
func (m *S2CRecvCreateChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvCreateChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvCreateChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvCreateChatGroup proto.InternalMessageInfo

func (m *S2CRecvCreateChatGroup) GetCcg() *CreateChatGroup {
	if m != nil {
		return m.Ccg
	}
	return nil
}

type ReqJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 申请者ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// 申请加群消息
	ChatGroupReqMessage string `protobuf:"bytes,3,opt,name=chatGroupReqMessage,proto3" json:"chatGroupReqMessage,omitempty"`
	// 申请者昵称
	UserNickName         string   `protobuf:"bytes,4,opt,name=userNickName,proto3" json:"userNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqJoinChatGroup) Reset()         { *m = ReqJoinChatGroup{} }
func (m *ReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*ReqJoinChatGroup) ProtoMessage()    {}
func (*ReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{82}
}
func (m *ReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqJoinChatGroup.Merge(m, src)
}
func (m *ReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *ReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ReqJoinChatGroup proto.InternalMessageInfo

func (m *ReqJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *ReqJoinChatGroup) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReqJoinChatGroup) GetChatGroupReqMessage() string {
	if m != nil {
		return m.ChatGroupReqMessage
	}
	return ""
}

func (m *ReqJoinChatGroup) GetUserNickName() string {
	if m != nil {
		return m.UserNickName
	}
	return ""
}

// 用户主动申请加入聊天群
type C2SReqJoinChatGroup struct {
	Rjcg                 *ReqJoinChatGroup `protobuf:"bytes,1,opt,name=rjcg,proto3" json:"rjcg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *C2SReqJoinChatGroup) Reset()         { *m = C2SReqJoinChatGroup{} }
func (m *C2SReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*C2SReqJoinChatGroup) ProtoMessage()    {}
func (*C2SReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{83}
}
func (m *C2SReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SReqJoinChatGroup.Merge(m, src)
}
func (m *C2SReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *C2SReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_C2SReqJoinChatGroup proto.InternalMessageInfo

func (m *C2SReqJoinChatGroup) GetRjcg() *ReqJoinChatGroup {
	if m != nil {
		return m.Rjcg
	}
	return nil
}

// 服务器回复用户主动申请加入聊天群消息
type S2CRecvReqJoinChatGroup struct {
	Rjcg                 *ReqJoinChatGroup `protobuf:"bytes,1,opt,name=rjcg,proto3" json:"rjcg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *S2CRecvReqJoinChatGroup) Reset()         { *m = S2CRecvReqJoinChatGroup{} }
func (m *S2CRecvReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CRecvReqJoinChatGroup) ProtoMessage()    {}
func (*S2CRecvReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{84}
}
func (m *S2CRecvReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvReqJoinChatGroup.Merge(m, src)
}
func (m *S2CRecvReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvReqJoinChatGroup proto.InternalMessageInfo

func (m *S2CRecvReqJoinChatGroup) GetRjcg() *ReqJoinChatGroup {
	if m != nil {
		return m.Rjcg
	}
	return nil
}

// MQ 通知群主，某用户主动加群消息
type MQReqJoinChatGroup struct {
	Rjcg                 *ReqJoinChatGroup `protobuf:"bytes,1,opt,name=rjcg,proto3" json:"rjcg,omitempty"`
	ReqUid               int64             `protobuf:"varint,2,opt,name=reqUid,proto3" json:"reqUid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MQReqJoinChatGroup) Reset()         { *m = MQReqJoinChatGroup{} }
func (m *MQReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*MQReqJoinChatGroup) ProtoMessage()    {}
func (*MQReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{85}
}
func (m *MQReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQReqJoinChatGroup.Merge(m, src)
}
func (m *MQReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *MQReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MQReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MQReqJoinChatGroup proto.InternalMessageInfo

func (m *MQReqJoinChatGroup) GetRjcg() *ReqJoinChatGroup {
	if m != nil {
		return m.Rjcg
	}
	return nil
}

func (m *MQReqJoinChatGroup) GetReqUid() int64 {
	if m != nil {
		return m.ReqUid
	}
	return 0
}

// 服务器发送到群主，某用户主动加群消息
type S2CSomeOneReqJoinChatGroup struct {
	Rjcg                 *ReqJoinChatGroup `protobuf:"bytes,1,opt,name=rjcg,proto3" json:"rjcg,omitempty"`
	ReqUid               int64             `protobuf:"varint,2,opt,name=reqUid,proto3" json:"reqUid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *S2CSomeOneReqJoinChatGroup) Reset()         { *m = S2CSomeOneReqJoinChatGroup{} }
func (m *S2CSomeOneReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CSomeOneReqJoinChatGroup) ProtoMessage()    {}
func (*S2CSomeOneReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{86}
}
func (m *S2CSomeOneReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CSomeOneReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CSomeOneReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CSomeOneReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CSomeOneReqJoinChatGroup.Merge(m, src)
}
func (m *S2CSomeOneReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CSomeOneReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CSomeOneReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CSomeOneReqJoinChatGroup proto.InternalMessageInfo

func (m *S2CSomeOneReqJoinChatGroup) GetRjcg() *ReqJoinChatGroup {
	if m != nil {
		return m.Rjcg
	}
	return nil
}

func (m *S2CSomeOneReqJoinChatGroup) GetReqUid() int64 {
	if m != nil {
		return m.ReqUid
	}
	return 0
}

// 群主同意用户加群申请
type C2SAgreeSomeOneReqJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 申请ID
	ReqUid int64 `protobuf:"varint,2,opt,name=reqUid,proto3" json:"reqUid,omitempty"`
	// 申请者ID
	ReqId int64 `protobuf:"varint,3,opt,name=reqId,proto3" json:"reqId,omitempty"`
	// 申请者昵称
	ReqNickName          string   `protobuf:"bytes,4,opt,name=reqNickName,proto3" json:"reqNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SAgreeSomeOneReqJoinChatGroup) Reset()         { *m = C2SAgreeSomeOneReqJoinChatGroup{} }
func (m *C2SAgreeSomeOneReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*C2SAgreeSomeOneReqJoinChatGroup) ProtoMessage()    {}
func (*C2SAgreeSomeOneReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{87}
}
func (m *C2SAgreeSomeOneReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SAgreeSomeOneReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SAgreeSomeOneReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SAgreeSomeOneReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SAgreeSomeOneReqJoinChatGroup.Merge(m, src)
}
func (m *C2SAgreeSomeOneReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *C2SAgreeSomeOneReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SAgreeSomeOneReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_C2SAgreeSomeOneReqJoinChatGroup proto.InternalMessageInfo

func (m *C2SAgreeSomeOneReqJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *C2SAgreeSomeOneReqJoinChatGroup) GetReqUid() int64 {
	if m != nil {
		return m.ReqUid
	}
	return 0
}

func (m *C2SAgreeSomeOneReqJoinChatGroup) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *C2SAgreeSomeOneReqJoinChatGroup) GetReqNickName() string {
	if m != nil {
		return m.ReqNickName
	}
	return ""
}

// 通知 MQ，群主同意加群申请消息
type MQAgreeSomeOneReqJoinChatGroup struct {
	// 群组ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MQAgreeSomeOneReqJoinChatGroup) Reset()         { *m = MQAgreeSomeOneReqJoinChatGroup{} }
func (m *MQAgreeSomeOneReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*MQAgreeSomeOneReqJoinChatGroup) ProtoMessage()    {}
func (*MQAgreeSomeOneReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{88}
}
func (m *MQAgreeSomeOneReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQAgreeSomeOneReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQAgreeSomeOneReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQAgreeSomeOneReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQAgreeSomeOneReqJoinChatGroup.Merge(m, src)
}
func (m *MQAgreeSomeOneReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *MQAgreeSomeOneReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MQAgreeSomeOneReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MQAgreeSomeOneReqJoinChatGroup proto.InternalMessageInfo

func (m *MQAgreeSomeOneReqJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// 通知 MQ，群主同意某用户加群申请消息
type MQManagerAgreeSomeOneReqJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// 用户昵称
	UserNickName         string   `protobuf:"bytes,3,opt,name=userNickName,proto3" json:"userNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MQManagerAgreeSomeOneReqJoinChatGroup) Reset()         { *m = MQManagerAgreeSomeOneReqJoinChatGroup{} }
func (m *MQManagerAgreeSomeOneReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*MQManagerAgreeSomeOneReqJoinChatGroup) ProtoMessage()    {}
func (*MQManagerAgreeSomeOneReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{89}
}
func (m *MQManagerAgreeSomeOneReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQManagerAgreeSomeOneReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQManagerAgreeSomeOneReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQManagerAgreeSomeOneReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQManagerAgreeSomeOneReqJoinChatGroup.Merge(m, src)
}
func (m *MQManagerAgreeSomeOneReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *MQManagerAgreeSomeOneReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MQManagerAgreeSomeOneReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MQManagerAgreeSomeOneReqJoinChatGroup proto.InternalMessageInfo

func (m *MQManagerAgreeSomeOneReqJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *MQManagerAgreeSomeOneReqJoinChatGroup) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *MQManagerAgreeSomeOneReqJoinChatGroup) GetUserNickName() string {
	if m != nil {
		return m.UserNickName
	}
	return ""
}

// 通知申请者，群主同意加群申请消息
type S2CManagerAgreeJoinChatGroup struct {
	// 群组ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CManagerAgreeJoinChatGroup) Reset()         { *m = S2CManagerAgreeJoinChatGroup{} }
func (m *S2CManagerAgreeJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CManagerAgreeJoinChatGroup) ProtoMessage()    {}
func (*S2CManagerAgreeJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{90}
}
func (m *S2CManagerAgreeJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CManagerAgreeJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CManagerAgreeJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CManagerAgreeJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CManagerAgreeJoinChatGroup.Merge(m, src)
}
func (m *S2CManagerAgreeJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CManagerAgreeJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CManagerAgreeJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CManagerAgreeJoinChatGroup proto.InternalMessageInfo

func (m *S2CManagerAgreeJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// 通知群成员，群主同意某用户加群申请消息
type S2CManagerAgreeSomeOneReqJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 申请者用户ID
	UserId               int64    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	UserNickName         string   `protobuf:"bytes,3,opt,name=userNickName,proto3" json:"userNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) Reset() {
	*m = S2CManagerAgreeSomeOneReqJoinChatGroup{}
}
func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CManagerAgreeSomeOneReqJoinChatGroup) ProtoMessage()    {}
func (*S2CManagerAgreeSomeOneReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{91}
}
func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CManagerAgreeSomeOneReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CManagerAgreeSomeOneReqJoinChatGroup.Merge(m, src)
}
func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CManagerAgreeSomeOneReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CManagerAgreeSomeOneReqJoinChatGroup proto.InternalMessageInfo

func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) GetUserNickName() string {
	if m != nil {
		return m.UserNickName
	}
	return ""
}

// 回复群主，同意某用户加入聊天群申请
type S2CRecvManagerAgreeSomeOneReqJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 申请者用户ID
	UserId               int64    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) Reset() {
	*m = S2CRecvManagerAgreeSomeOneReqJoinChatGroup{}
}
func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) String() string {
	return proto.CompactTextString(m)
}
func (*S2CRecvManagerAgreeSomeOneReqJoinChatGroup) ProtoMessage() {}
func (*S2CRecvManagerAgreeSomeOneReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{92}
}
func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvManagerAgreeSomeOneReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvManagerAgreeSomeOneReqJoinChatGroup.Merge(m, src)
}
func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvManagerAgreeSomeOneReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvManagerAgreeSomeOneReqJoinChatGroup proto.InternalMessageInfo

func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 群主拒绝用户加群
type C2SRefuseSomeOneReqJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 申请者用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// 申请ID
	ReqUid int64 `protobuf:"varint,3,opt,name=reqUid,proto3" json:"reqUid,omitempty"`
	// 拒绝消息
	RefuseReqJoinChatGroupMessage string   `protobuf:"bytes,4,opt,name=refuseReqJoinChatGroupMessage,proto3" json:"refuseReqJoinChatGroupMessage,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *C2SRefuseSomeOneReqJoinChatGroup) Reset()         { *m = C2SRefuseSomeOneReqJoinChatGroup{} }
func (m *C2SRefuseSomeOneReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*C2SRefuseSomeOneReqJoinChatGroup) ProtoMessage()    {}
func (*C2SRefuseSomeOneReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{93}
}
func (m *C2SRefuseSomeOneReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SRefuseSomeOneReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SRefuseSomeOneReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SRefuseSomeOneReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SRefuseSomeOneReqJoinChatGroup.Merge(m, src)
}
func (m *C2SRefuseSomeOneReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *C2SRefuseSomeOneReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SRefuseSomeOneReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_C2SRefuseSomeOneReqJoinChatGroup proto.InternalMessageInfo

func (m *C2SRefuseSomeOneReqJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *C2SRefuseSomeOneReqJoinChatGroup) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *C2SRefuseSomeOneReqJoinChatGroup) GetReqUid() int64 {
	if m != nil {
		return m.ReqUid
	}
	return 0
}

func (m *C2SRefuseSomeOneReqJoinChatGroup) GetRefuseReqJoinChatGroupMessage() string {
	if m != nil {
		return m.RefuseReqJoinChatGroupMessage
	}
	return ""
}

// 通知 MQ，群主拒绝用户加群申请
type MQRefuseSomeOneReqJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 申请ID
	ReqUid int64 `protobuf:"varint,2,opt,name=reqUid,proto3" json:"reqUid,omitempty"`
	// 拒绝消息
	RefuseReqJoinChatGroupMessage string   `protobuf:"bytes,3,opt,name=refuseReqJoinChatGroupMessage,proto3" json:"refuseReqJoinChatGroupMessage,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *MQRefuseSomeOneReqJoinChatGroup) Reset()         { *m = MQRefuseSomeOneReqJoinChatGroup{} }
func (m *MQRefuseSomeOneReqJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*MQRefuseSomeOneReqJoinChatGroup) ProtoMessage()    {}
func (*MQRefuseSomeOneReqJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{94}
}
func (m *MQRefuseSomeOneReqJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQRefuseSomeOneReqJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQRefuseSomeOneReqJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQRefuseSomeOneReqJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQRefuseSomeOneReqJoinChatGroup.Merge(m, src)
}
func (m *MQRefuseSomeOneReqJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *MQRefuseSomeOneReqJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MQRefuseSomeOneReqJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MQRefuseSomeOneReqJoinChatGroup proto.InternalMessageInfo

func (m *MQRefuseSomeOneReqJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *MQRefuseSomeOneReqJoinChatGroup) GetReqUid() int64 {
	if m != nil {
		return m.ReqUid
	}
	return 0
}

func (m *MQRefuseSomeOneReqJoinChatGroup) GetRefuseReqJoinChatGroupMessage() string {
	if m != nil {
		return m.RefuseReqJoinChatGroupMessage
	}
	return ""
}

// 通知用户，群主拒绝加群申请
type S2CManagerRefuseJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 拒绝消息
	RefuseReqJoinChatGroupMessage string   `protobuf:"bytes,2,opt,name=refuseReqJoinChatGroupMessage,proto3" json:"refuseReqJoinChatGroupMessage,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *S2CManagerRefuseJoinChatGroup) Reset()         { *m = S2CManagerRefuseJoinChatGroup{} }
func (m *S2CManagerRefuseJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CManagerRefuseJoinChatGroup) ProtoMessage()    {}
func (*S2CManagerRefuseJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{95}
}
func (m *S2CManagerRefuseJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CManagerRefuseJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CManagerRefuseJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CManagerRefuseJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CManagerRefuseJoinChatGroup.Merge(m, src)
}
func (m *S2CManagerRefuseJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CManagerRefuseJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CManagerRefuseJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CManagerRefuseJoinChatGroup proto.InternalMessageInfo

func (m *S2CManagerRefuseJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *S2CManagerRefuseJoinChatGroup) GetRefuseReqJoinChatGroupMessage() string {
	if m != nil {
		return m.RefuseReqJoinChatGroupMessage
	}
	return ""
}

type ChatGroupMemberRds struct {
	// 成员ID
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// 成员昵称
	UserNickName string `protobuf:"bytes,2,opt,name=userNickName,proto3" json:"userNickName,omitempty"`
	// 群成员身份标识	// 暂定 1为群主，2为普通群成员（方便后期扩展其他身份）
	Flag int64 `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"`
	// 成员头像url地址
	UserHeadPortraitUrl  string   `protobuf:"bytes,4,opt,name=userHeadPortraitUrl,proto3" json:"userHeadPortraitUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatGroupMemberRds) Reset()         { *m = ChatGroupMemberRds{} }
func (m *ChatGroupMemberRds) String() string { return proto.CompactTextString(m) }
func (*ChatGroupMemberRds) ProtoMessage()    {}
func (*ChatGroupMemberRds) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{96}
}
func (m *ChatGroupMemberRds) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChatGroupMemberRds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChatGroupMemberRds.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChatGroupMemberRds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatGroupMemberRds.Merge(m, src)
}
func (m *ChatGroupMemberRds) XXX_Size() int {
	return m.Size()
}
func (m *ChatGroupMemberRds) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatGroupMemberRds.DiscardUnknown(m)
}

var xxx_messageInfo_ChatGroupMemberRds proto.InternalMessageInfo

func (m *ChatGroupMemberRds) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ChatGroupMemberRds) GetUserNickName() string {
	if m != nil {
		return m.UserNickName
	}
	return ""
}

func (m *ChatGroupMemberRds) GetFlag() int64 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *ChatGroupMemberRds) GetUserHeadPortraitUrl() string {
	if m != nil {
		return m.UserHeadPortraitUrl
	}
	return ""
}

// 拉取群信息
type C2SChatGroupInfo struct {
	// 群组ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SChatGroupInfo) Reset()         { *m = C2SChatGroupInfo{} }
func (m *C2SChatGroupInfo) String() string { return proto.CompactTextString(m) }
func (*C2SChatGroupInfo) ProtoMessage()    {}
func (*C2SChatGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{97}
}
func (m *C2SChatGroupInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SChatGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SChatGroupInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SChatGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SChatGroupInfo.Merge(m, src)
}
func (m *C2SChatGroupInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2SChatGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SChatGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SChatGroupInfo proto.InternalMessageInfo

func (m *C2SChatGroupInfo) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// 回复用户拉取群信息
type S2CChatGroupInfo struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 群名称
	ChatGroupName string `protobuf:"bytes,2,opt,name=chatGroupName,proto3" json:"chatGroupName,omitempty"`
	// 群头像
	ChatGroupHeadPortrait string `protobuf:"bytes,3,opt,name=chatGroupHeadPortrait,proto3" json:"chatGroupHeadPortrait,omitempty"`
	// 群主ID
	ChatGroupOwnerId int64 `protobuf:"varint,4,opt,name=chatGroupOwnerId,proto3" json:"chatGroupOwnerId,omitempty"`
	// 群成员id和昵称
	ChatGroupMemberRds   []*ChatGroupMemberRds `protobuf:"bytes,5,rep,name=chatGroupMemberRds,proto3" json:"chatGroupMemberRds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *S2CChatGroupInfo) Reset()         { *m = S2CChatGroupInfo{} }
func (m *S2CChatGroupInfo) String() string { return proto.CompactTextString(m) }
func (*S2CChatGroupInfo) ProtoMessage()    {}
func (*S2CChatGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{98}
}
func (m *S2CChatGroupInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CChatGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CChatGroupInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CChatGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CChatGroupInfo.Merge(m, src)
}
func (m *S2CChatGroupInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2CChatGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CChatGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CChatGroupInfo proto.InternalMessageInfo

func (m *S2CChatGroupInfo) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *S2CChatGroupInfo) GetChatGroupName() string {
	if m != nil {
		return m.ChatGroupName
	}
	return ""
}

func (m *S2CChatGroupInfo) GetChatGroupHeadPortrait() string {
	if m != nil {
		return m.ChatGroupHeadPortrait
	}
	return ""
}

func (m *S2CChatGroupInfo) GetChatGroupOwnerId() int64 {
	if m != nil {
		return m.ChatGroupOwnerId
	}
	return 0
}

func (m *S2CChatGroupInfo) GetChatGroupMemberRds() []*ChatGroupMemberRds {
	if m != nil {
		return m.ChatGroupMemberRds
	}
	return nil
}

type InviteJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 邀请者ID
	InviterId int64 `protobuf:"varint,2,opt,name=InviterId,proto3" json:"InviterId,omitempty"`
	// 邀请者昵称
	InviterNickName string `protobuf:"bytes,3,opt,name=InviterNickName,proto3" json:"InviterNickName,omitempty"`
	// 被邀请者ID
	InviteeId int64 `protobuf:"varint,4,opt,name=InviteeId,proto3" json:"InviteeId,omitempty"`
	// 被邀请者昵称
	InviteeNickName      string   `protobuf:"bytes,5,opt,name=InviteeNickName,proto3" json:"InviteeNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InviteJoinChatGroup) Reset()         { *m = InviteJoinChatGroup{} }
func (m *InviteJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*InviteJoinChatGroup) ProtoMessage()    {}
func (*InviteJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{99}
}
func (m *InviteJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InviteJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InviteJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InviteJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteJoinChatGroup.Merge(m, src)
}
func (m *InviteJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *InviteJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_InviteJoinChatGroup proto.InternalMessageInfo

func (m *InviteJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *InviteJoinChatGroup) GetInviterId() int64 {
	if m != nil {
		return m.InviterId
	}
	return 0
}

func (m *InviteJoinChatGroup) GetInviterNickName() string {
	if m != nil {
		return m.InviterNickName
	}
	return ""
}

func (m *InviteJoinChatGroup) GetInviteeId() int64 {
	if m != nil {
		return m.InviteeId
	}
	return 0
}

func (m *InviteJoinChatGroup) GetInviteeNickName() string {
	if m != nil {
		return m.InviteeNickName
	}
	return ""
}

// 群成员邀请好友加群
type C2SInviteJoinChatGroup struct {
	// 群组ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 好友ID
	FriendIds            []int64  `protobuf:"varint,2,rep,packed,name=friendIds,proto3" json:"friendIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SInviteJoinChatGroup) Reset()         { *m = C2SInviteJoinChatGroup{} }
func (m *C2SInviteJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*C2SInviteJoinChatGroup) ProtoMessage()    {}
func (*C2SInviteJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{100}
}
func (m *C2SInviteJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SInviteJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SInviteJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SInviteJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SInviteJoinChatGroup.Merge(m, src)
}
func (m *C2SInviteJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *C2SInviteJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SInviteJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_C2SInviteJoinChatGroup proto.InternalMessageInfo

func (m *C2SInviteJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *C2SInviteJoinChatGroup) GetFriendIds() []int64 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

// MQ 传递群成员邀请好友加群
type MQInviteJoinChatGroup struct {
	InviteJoinChatGroup  *InviteJoinChatGroup `protobuf:"bytes,1,opt,name=inviteJoinChatGroup,proto3" json:"inviteJoinChatGroup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MQInviteJoinChatGroup) Reset()         { *m = MQInviteJoinChatGroup{} }
func (m *MQInviteJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*MQInviteJoinChatGroup) ProtoMessage()    {}
func (*MQInviteJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{101}
}
func (m *MQInviteJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQInviteJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQInviteJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQInviteJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQInviteJoinChatGroup.Merge(m, src)
}
func (m *MQInviteJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *MQInviteJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MQInviteJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MQInviteJoinChatGroup proto.InternalMessageInfo

func (m *MQInviteJoinChatGroup) GetInviteJoinChatGroup() *InviteJoinChatGroup {
	if m != nil {
		return m.InviteJoinChatGroup
	}
	return nil
}

// 通知群所有群成员，群成员邀请好友加群
type S2CInviteYouJoinChatGroup struct {
	InviteJoinChatGroup  *InviteJoinChatGroup `protobuf:"bytes,1,opt,name=inviteJoinChatGroup,proto3" json:"inviteJoinChatGroup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *S2CInviteYouJoinChatGroup) Reset()         { *m = S2CInviteYouJoinChatGroup{} }
func (m *S2CInviteYouJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CInviteYouJoinChatGroup) ProtoMessage()    {}
func (*S2CInviteYouJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{102}
}
func (m *S2CInviteYouJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CInviteYouJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CInviteYouJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CInviteYouJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CInviteYouJoinChatGroup.Merge(m, src)
}
func (m *S2CInviteYouJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CInviteYouJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CInviteYouJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CInviteYouJoinChatGroup proto.InternalMessageInfo

func (m *S2CInviteYouJoinChatGroup) GetInviteJoinChatGroup() *InviteJoinChatGroup {
	if m != nil {
		return m.InviteJoinChatGroup
	}
	return nil
}

// 回复用户邀请好友加群
type S2CRecvInviteJoinChatGroup struct {
	// 群组ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvInviteJoinChatGroup) Reset()         { *m = S2CRecvInviteJoinChatGroup{} }
func (m *S2CRecvInviteJoinChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CRecvInviteJoinChatGroup) ProtoMessage()    {}
func (*S2CRecvInviteJoinChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{103}
}
func (m *S2CRecvInviteJoinChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvInviteJoinChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvInviteJoinChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvInviteJoinChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvInviteJoinChatGroup.Merge(m, src)
}
func (m *S2CRecvInviteJoinChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvInviteJoinChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvInviteJoinChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvInviteJoinChatGroup proto.InternalMessageInfo

func (m *S2CRecvInviteJoinChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// 群成员退群
type C2SCancelChatGroup struct {
	// 群ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SCancelChatGroup) Reset()         { *m = C2SCancelChatGroup{} }
func (m *C2SCancelChatGroup) String() string { return proto.CompactTextString(m) }
func (*C2SCancelChatGroup) ProtoMessage()    {}
func (*C2SCancelChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{104}
}
func (m *C2SCancelChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SCancelChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SCancelChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SCancelChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SCancelChatGroup.Merge(m, src)
}
func (m *C2SCancelChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *C2SCancelChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SCancelChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_C2SCancelChatGroup proto.InternalMessageInfo

func (m *C2SCancelChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

type CancelChatGroup struct {
	// 群ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 退群成员ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// 退群成员昵称
	UserNickName         string   `protobuf:"bytes,3,opt,name=userNickName,proto3" json:"userNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelChatGroup) Reset()         { *m = CancelChatGroup{} }
func (m *CancelChatGroup) String() string { return proto.CompactTextString(m) }
func (*CancelChatGroup) ProtoMessage()    {}
func (*CancelChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{105}
}
func (m *CancelChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CancelChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CancelChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CancelChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelChatGroup.Merge(m, src)
}
func (m *CancelChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *CancelChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_CancelChatGroup proto.InternalMessageInfo

func (m *CancelChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *CancelChatGroup) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CancelChatGroup) GetUserNickName() string {
	if m != nil {
		return m.UserNickName
	}
	return ""
}

// MQ 通知群成员某成员退群
type MQCancelChatGroup struct {
	CancelChatGroup      *CancelChatGroup `protobuf:"bytes,1,opt,name=cancelChatGroup,proto3" json:"cancelChatGroup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MQCancelChatGroup) Reset()         { *m = MQCancelChatGroup{} }
func (m *MQCancelChatGroup) String() string { return proto.CompactTextString(m) }
func (*MQCancelChatGroup) ProtoMessage()    {}
func (*MQCancelChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{106}
}
func (m *MQCancelChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQCancelChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQCancelChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQCancelChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQCancelChatGroup.Merge(m, src)
}
func (m *MQCancelChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *MQCancelChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MQCancelChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MQCancelChatGroup proto.InternalMessageInfo

func (m *MQCancelChatGroup) GetCancelChatGroup() *CancelChatGroup {
	if m != nil {
		return m.CancelChatGroup
	}
	return nil
}

// 服务器通知群成员某成员退群
type S2CSomeOneCancelChatGroup struct {
	CancelChatGroup      *CancelChatGroup `protobuf:"bytes,1,opt,name=cancelChatGroup,proto3" json:"cancelChatGroup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2CSomeOneCancelChatGroup) Reset()         { *m = S2CSomeOneCancelChatGroup{} }
func (m *S2CSomeOneCancelChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CSomeOneCancelChatGroup) ProtoMessage()    {}
func (*S2CSomeOneCancelChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{107}
}
func (m *S2CSomeOneCancelChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CSomeOneCancelChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CSomeOneCancelChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CSomeOneCancelChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CSomeOneCancelChatGroup.Merge(m, src)
}
func (m *S2CSomeOneCancelChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CSomeOneCancelChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CSomeOneCancelChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CSomeOneCancelChatGroup proto.InternalMessageInfo

func (m *S2CSomeOneCancelChatGroup) GetCancelChatGroup() *CancelChatGroup {
	if m != nil {
		return m.CancelChatGroup
	}
	return nil
}

// 服务器回复群成员退群成功消息
type S2CRecvCancelChatGroup struct {
	// 群ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvCancelChatGroup) Reset()         { *m = S2CRecvCancelChatGroup{} }
func (m *S2CRecvCancelChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CRecvCancelChatGroup) ProtoMessage()    {}
func (*S2CRecvCancelChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{108}
}
func (m *S2CRecvCancelChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvCancelChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvCancelChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvCancelChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvCancelChatGroup.Merge(m, src)
}
func (m *S2CRecvCancelChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvCancelChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvCancelChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvCancelChatGroup proto.InternalMessageInfo

func (m *S2CRecvCancelChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// 群主解散群消息
type C2SUnChatGroup struct {
	// 群ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SUnChatGroup) Reset()         { *m = C2SUnChatGroup{} }
func (m *C2SUnChatGroup) String() string { return proto.CompactTextString(m) }
func (*C2SUnChatGroup) ProtoMessage()    {}
func (*C2SUnChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{109}
}
func (m *C2SUnChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SUnChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SUnChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SUnChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SUnChatGroup.Merge(m, src)
}
func (m *C2SUnChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *C2SUnChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SUnChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_C2SUnChatGroup proto.InternalMessageInfo

func (m *C2SUnChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// MQ 通知所有群成员，群主解散群消息
type MQUnChatGroup struct {
	// 群ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MQUnChatGroup) Reset()         { *m = MQUnChatGroup{} }
func (m *MQUnChatGroup) String() string { return proto.CompactTextString(m) }
func (*MQUnChatGroup) ProtoMessage()    {}
func (*MQUnChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{110}
}
func (m *MQUnChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQUnChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQUnChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQUnChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQUnChatGroup.Merge(m, src)
}
func (m *MQUnChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *MQUnChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MQUnChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MQUnChatGroup proto.InternalMessageInfo

func (m *MQUnChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// 服务器通知所有群成员，群主解散群消息
type S2CUnChatGroup struct {
	// 群ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CUnChatGroup) Reset()         { *m = S2CUnChatGroup{} }
func (m *S2CUnChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CUnChatGroup) ProtoMessage()    {}
func (*S2CUnChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{111}
}
func (m *S2CUnChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CUnChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CUnChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CUnChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUnChatGroup.Merge(m, src)
}
func (m *S2CUnChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CUnChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUnChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUnChatGroup proto.InternalMessageInfo

func (m *S2CUnChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// 服务器回复群主解散群消息
type S2CRecvUnChatGroup struct {
	// 群ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvUnChatGroup) Reset()         { *m = S2CRecvUnChatGroup{} }
func (m *S2CRecvUnChatGroup) String() string { return proto.CompactTextString(m) }
func (*S2CRecvUnChatGroup) ProtoMessage()    {}
func (*S2CRecvUnChatGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{112}
}
func (m *S2CRecvUnChatGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvUnChatGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvUnChatGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvUnChatGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvUnChatGroup.Merge(m, src)
}
func (m *S2CRecvUnChatGroup) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvUnChatGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvUnChatGroup.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvUnChatGroup proto.InternalMessageInfo

func (m *S2CRecvUnChatGroup) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

type ChatGroupKick struct {
	// 群ID
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 被踢用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// 被踢用户昵称 // 由服务器填写，客户端填写无效
	UserNickName         string   `protobuf:"bytes,3,opt,name=userNickName,proto3" json:"userNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatGroupKick) Reset()         { *m = ChatGroupKick{} }
func (m *ChatGroupKick) String() string { return proto.CompactTextString(m) }
func (*ChatGroupKick) ProtoMessage()    {}
func (*ChatGroupKick) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{113}
}
func (m *ChatGroupKick) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChatGroupKick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChatGroupKick.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChatGroupKick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatGroupKick.Merge(m, src)
}
func (m *ChatGroupKick) XXX_Size() int {
	return m.Size()
}
func (m *ChatGroupKick) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatGroupKick.DiscardUnknown(m)
}

var xxx_messageInfo_ChatGroupKick proto.InternalMessageInfo

func (m *ChatGroupKick) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *ChatGroupKick) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ChatGroupKick) GetUserNickName() string {
	if m != nil {
		return m.UserNickName
	}
	return ""
}

// 群主踢人
type C2SChatGroupKick struct {
	ChatGroupKick        *ChatGroupKick `protobuf:"bytes,1,opt,name=chatGroupKick,proto3" json:"chatGroupKick,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *C2SChatGroupKick) Reset()         { *m = C2SChatGroupKick{} }
func (m *C2SChatGroupKick) String() string { return proto.CompactTextString(m) }
func (*C2SChatGroupKick) ProtoMessage()    {}
func (*C2SChatGroupKick) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{114}
}
func (m *C2SChatGroupKick) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SChatGroupKick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SChatGroupKick.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SChatGroupKick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SChatGroupKick.Merge(m, src)
}
func (m *C2SChatGroupKick) XXX_Size() int {
	return m.Size()
}
func (m *C2SChatGroupKick) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SChatGroupKick.DiscardUnknown(m)
}

var xxx_messageInfo_C2SChatGroupKick proto.InternalMessageInfo

func (m *C2SChatGroupKick) GetChatGroupKick() *ChatGroupKick {
	if m != nil {
		return m.ChatGroupKick
	}
	return nil
}

// MQ 通知所有群成员，群主踢人消息
type MQChatGroupKick struct {
	ChatGroupKick        *ChatGroupKick `protobuf:"bytes,1,opt,name=chatGroupKick,proto3" json:"chatGroupKick,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MQChatGroupKick) Reset()         { *m = MQChatGroupKick{} }
func (m *MQChatGroupKick) String() string { return proto.CompactTextString(m) }
func (*MQChatGroupKick) ProtoMessage()    {}
func (*MQChatGroupKick) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{115}
}
func (m *MQChatGroupKick) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQChatGroupKick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQChatGroupKick.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQChatGroupKick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQChatGroupKick.Merge(m, src)
}
func (m *MQChatGroupKick) XXX_Size() int {
	return m.Size()
}
func (m *MQChatGroupKick) XXX_DiscardUnknown() {
	xxx_messageInfo_MQChatGroupKick.DiscardUnknown(m)
}

var xxx_messageInfo_MQChatGroupKick proto.InternalMessageInfo

func (m *MQChatGroupKick) GetChatGroupKick() *ChatGroupKick {
	if m != nil {
		return m.ChatGroupKick
	}
	return nil
}

// 服务器通知被踢出群的用户
type S2CKickedByChatGroupManager struct {
	ChatGroupKick        *ChatGroupKick `protobuf:"bytes,1,opt,name=chatGroupKick,proto3" json:"chatGroupKick,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *S2CKickedByChatGroupManager) Reset()         { *m = S2CKickedByChatGroupManager{} }
func (m *S2CKickedByChatGroupManager) String() string { return proto.CompactTextString(m) }
func (*S2CKickedByChatGroupManager) ProtoMessage()    {}
func (*S2CKickedByChatGroupManager) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{116}
}
func (m *S2CKickedByChatGroupManager) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CKickedByChatGroupManager) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CKickedByChatGroupManager.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CKickedByChatGroupManager) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CKickedByChatGroupManager.Merge(m, src)
}
func (m *S2CKickedByChatGroupManager) XXX_Size() int {
	return m.Size()
}
func (m *S2CKickedByChatGroupManager) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CKickedByChatGroupManager.DiscardUnknown(m)
}

var xxx_messageInfo_S2CKickedByChatGroupManager proto.InternalMessageInfo

func (m *S2CKickedByChatGroupManager) GetChatGroupKick() *ChatGroupKick {
	if m != nil {
		return m.ChatGroupKick
	}
	return nil
}

// 服务器通知其他群主成员，某成员被群主踢出群
type S2CManagerKickSomeOne struct {
	ChatGroupKick        *ChatGroupKick `protobuf:"bytes,1,opt,name=chatGroupKick,proto3" json:"chatGroupKick,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *S2CManagerKickSomeOne) Reset()         { *m = S2CManagerKickSomeOne{} }
func (m *S2CManagerKickSomeOne) String() string { return proto.CompactTextString(m) }
func (*S2CManagerKickSomeOne) ProtoMessage()    {}
func (*S2CManagerKickSomeOne) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{117}
}
func (m *S2CManagerKickSomeOne) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CManagerKickSomeOne) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CManagerKickSomeOne.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CManagerKickSomeOne) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CManagerKickSomeOne.Merge(m, src)
}
func (m *S2CManagerKickSomeOne) XXX_Size() int {
	return m.Size()
}
func (m *S2CManagerKickSomeOne) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CManagerKickSomeOne.DiscardUnknown(m)
}

var xxx_messageInfo_S2CManagerKickSomeOne proto.InternalMessageInfo

func (m *S2CManagerKickSomeOne) GetChatGroupKick() *ChatGroupKick {
	if m != nil {
		return m.ChatGroupKick
	}
	return nil
}

// 服务器回复群主踢人成功消息
type S2CRecvChatGroupKick struct {
	// 群ID
	ChatGroupId          int64    `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvChatGroupKick) Reset()         { *m = S2CRecvChatGroupKick{} }
func (m *S2CRecvChatGroupKick) String() string { return proto.CompactTextString(m) }
func (*S2CRecvChatGroupKick) ProtoMessage()    {}
func (*S2CRecvChatGroupKick) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{118}
}
func (m *S2CRecvChatGroupKick) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvChatGroupKick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvChatGroupKick.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvChatGroupKick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvChatGroupKick.Merge(m, src)
}
func (m *S2CRecvChatGroupKick) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvChatGroupKick) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvChatGroupKick.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvChatGroupKick proto.InternalMessageInfo

func (m *S2CRecvChatGroupKick) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// 用户获取群列表
type C2SChatGroupList struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SChatGroupList) Reset()         { *m = C2SChatGroupList{} }
func (m *C2SChatGroupList) String() string { return proto.CompactTextString(m) }
func (*C2SChatGroupList) ProtoMessage()    {}
func (*C2SChatGroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{119}
}
func (m *C2SChatGroupList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SChatGroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SChatGroupList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SChatGroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SChatGroupList.Merge(m, src)
}
func (m *C2SChatGroupList) XXX_Size() int {
	return m.Size()
}
func (m *C2SChatGroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SChatGroupList.DiscardUnknown(m)
}

var xxx_messageInfo_C2SChatGroupList proto.InternalMessageInfo

// 回复用户获取群列表
type S2CChatGroupList struct {
	ChatGroupId          []int64  `protobuf:"varint,1,rep,packed,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CChatGroupList) Reset()         { *m = S2CChatGroupList{} }
func (m *S2CChatGroupList) String() string { return proto.CompactTextString(m) }
func (*S2CChatGroupList) ProtoMessage()    {}
func (*S2CChatGroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{120}
}
func (m *S2CChatGroupList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CChatGroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CChatGroupList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CChatGroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CChatGroupList.Merge(m, src)
}
func (m *S2CChatGroupList) XXX_Size() int {
	return m.Size()
}
func (m *S2CChatGroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CChatGroupList.DiscardUnknown(m)
}

var xxx_messageInfo_S2CChatGroupList proto.InternalMessageInfo

func (m *S2CChatGroupList) GetChatGroupId() []int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return nil
}

// 时间戳 srvTimeStamp 在本机是唯一的, 而且用户也是登录到固定的 gate 上
// 所以 receiveGroupId, senderId, srvTimeStamp 这三个元素可以作为一个消息包的指纹
type GroupMessage struct {
	// 接收群的 id, 客户端填
	ReceiveGroupId int64 `protobuf:"varint,1,opt,name=receiveGroupId,proto3" json:"receiveGroupId,omitempty"`
	// 发送者 id, 服务端填
	SenderId int64 `protobuf:"varint,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	// 文字信息/图片url/语音文件url, 客户端填
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// 服务端时间戳, ( 系统当前时间的纳秒值 / 1000 ), 服务端填, 必须保证唯一
	SrvTimeStamp int64 `protobuf:"varint,4,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	// 消息类型: word 文字, pic 图片, voice 语音,
	MsgType string `protobuf:"bytes,5,opt,name=msgType,proto3" json:"msgType,omitempty"`
	// 发言者名字, 用于在聊天过程中实时让接受者知道改名
	SenderName string `protobuf:"bytes,6,opt,name=senderName,proto3" json:"senderName,omitempty"`
	// 客户端时间戳, ( 系统当前时间的纳秒值 / 1000 ), 客户端填, 必须保证唯一, 用于跟客户端确认消息用
	AccoutIdCliTimeStamp string `protobuf:"bytes,7,opt,name=accoutIdCliTimeStamp,proto3" json:"accoutIdCliTimeStamp,omitempty"`
	// 发送者的头像url地址
	SenderheadPortraitUrl string `protobuf:"bytes,8,opt,name=senderheadPortraitUrl,proto3" json:"senderheadPortraitUrl,omitempty"`
	// 是否撤回消息, true 撤回消息, false 不撤回
	WithDraw bool `protobuf:"varint,9,opt,name=withDraw,proto3" json:"withDraw,omitempty"`
	// 音频聊天内容
	VoiceMessage *VoiceMessage `protobuf:"bytes,10,opt,name=voiceMessage,proto3" json:"voiceMessage,omitempty"`
	// 视频聊天内容
	VideoMessage *VideoMessage `protobuf:"bytes,11,opt,name=videoMessage,proto3" json:"videoMessage,omitempty"`
	// 文件聊天内容
	FileMessage *FileMessage `protobuf:"bytes,12,opt,name=fileMessage,proto3" json:"fileMessage,omitempty"`
	// 名片
	CardMessage          *CardMessage `protobuf:"bytes,13,opt,name=cardMessage,proto3" json:"cardMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GroupMessage) Reset()         { *m = GroupMessage{} }
func (m *GroupMessage) String() string { return proto.CompactTextString(m) }
func (*GroupMessage) ProtoMessage()    {}
func (*GroupMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{121}
}
func (m *GroupMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupMessage.Merge(m, src)
}
func (m *GroupMessage) XXX_Size() int {
	return m.Size()
}
func (m *GroupMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GroupMessage proto.InternalMessageInfo

func (m *GroupMessage) GetReceiveGroupId() int64 {
	if m != nil {
		return m.ReceiveGroupId
	}
	return 0
}

func (m *GroupMessage) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *GroupMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *GroupMessage) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

func (m *GroupMessage) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *GroupMessage) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *GroupMessage) GetAccoutIdCliTimeStamp() string {
	if m != nil {
		return m.AccoutIdCliTimeStamp
	}
	return ""
}

func (m *GroupMessage) GetSenderheadPortraitUrl() string {
	if m != nil {
		return m.SenderheadPortraitUrl
	}
	return ""
}

func (m *GroupMessage) GetWithDraw() bool {
	if m != nil {
		return m.WithDraw
	}
	return false
}

func (m *GroupMessage) GetVoiceMessage() *VoiceMessage {
	if m != nil {
		return m.VoiceMessage
	}
	return nil
}

func (m *GroupMessage) GetVideoMessage() *VideoMessage {
	if m != nil {
		return m.VideoMessage
	}
	return nil
}

func (m *GroupMessage) GetFileMessage() *FileMessage {
	if m != nil {
		return m.FileMessage
	}
	return nil
}

func (m *GroupMessage) GetCardMessage() *CardMessage {
	if m != nil {
		return m.CardMessage
	}
	return nil
}

// A 向服务器发送一条群聊消息, 转发给群内所有成员
type C2SGroupChat struct {
	ChatMsg *GroupMessage `protobuf:"bytes,1,opt,name=chatMsg,proto3" json:"chatMsg,omitempty"`
	// 客户端时间戳, ( 系统当前时间的纳秒值 / 1000 ), 客户端填, 必须保证唯一, 用于跟客户端确认消息用
	CliTimeStamp         int64    `protobuf:"varint,2,opt,name=cliTimeStamp,proto3" json:"cliTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SGroupChat) Reset()         { *m = C2SGroupChat{} }
func (m *C2SGroupChat) String() string { return proto.CompactTextString(m) }
func (*C2SGroupChat) ProtoMessage()    {}
func (*C2SGroupChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{122}
}
func (m *C2SGroupChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SGroupChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SGroupChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SGroupChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SGroupChat.Merge(m, src)
}
func (m *C2SGroupChat) XXX_Size() int {
	return m.Size()
}
func (m *C2SGroupChat) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SGroupChat.DiscardUnknown(m)
}

var xxx_messageInfo_C2SGroupChat proto.InternalMessageInfo

func (m *C2SGroupChat) GetChatMsg() *GroupMessage {
	if m != nil {
		return m.ChatMsg
	}
	return nil
}

func (m *C2SGroupChat) GetCliTimeStamp() int64 {
	if m != nil {
		return m.CliTimeStamp
	}
	return 0
}

// 服务器把 A 发送的群聊消息,投递给 MQ
type MQGroupChat struct {
	ChatMsg              *GroupMessage `protobuf:"bytes,1,opt,name=chatMsg,proto3" json:"chatMsg,omitempty"`
	ReceiverId           int64         `protobuf:"varint,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MQGroupChat) Reset()         { *m = MQGroupChat{} }
func (m *MQGroupChat) String() string { return proto.CompactTextString(m) }
func (*MQGroupChat) ProtoMessage()    {}
func (*MQGroupChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{123}
}
func (m *MQGroupChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQGroupChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQGroupChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQGroupChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQGroupChat.Merge(m, src)
}
func (m *MQGroupChat) XXX_Size() int {
	return m.Size()
}
func (m *MQGroupChat) XXX_DiscardUnknown() {
	xxx_messageInfo_MQGroupChat.DiscardUnknown(m)
}

var xxx_messageInfo_MQGroupChat proto.InternalMessageInfo

func (m *MQGroupChat) GetChatMsg() *GroupMessage {
	if m != nil {
		return m.ChatMsg
	}
	return nil
}

func (m *MQGroupChat) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

// 服务器把群聊消息保存进 redis, 投递给 MQ 后, 向 A 回复确认消息
type S2CGroupChat struct {
	// 群 的 id
	ReceiverId int64 `protobuf:"varint,1,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	// 服务器的时间戳, 客户端转换后显示在界面上
	SrvTimeStamp int64 `protobuf:"varint,2,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	// 客户端时间戳, ( 系统当前时间的纳秒值 / 1000 ), 客户端填, 必须保证唯一, 用于跟客户端确认消息用
	AccoutIdCliTimeStamp string `protobuf:"bytes,3,opt,name=accoutIdCliTimeStamp,proto3" json:"accoutIdCliTimeStamp,omitempty"`
	// 这是 A 发来的时间戳, 用来向 A 确定某条聊天记录
	CliTimeStamp         int64    `protobuf:"varint,4,opt,name=cliTimeStamp,proto3" json:"cliTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CGroupChat) Reset()         { *m = S2CGroupChat{} }
func (m *S2CGroupChat) String() string { return proto.CompactTextString(m) }
func (*S2CGroupChat) ProtoMessage()    {}
func (*S2CGroupChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{124}
}
func (m *S2CGroupChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CGroupChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CGroupChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CGroupChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CGroupChat.Merge(m, src)
}
func (m *S2CGroupChat) XXX_Size() int {
	return m.Size()
}
func (m *S2CGroupChat) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CGroupChat.DiscardUnknown(m)
}

var xxx_messageInfo_S2CGroupChat proto.InternalMessageInfo

func (m *S2CGroupChat) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *S2CGroupChat) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

func (m *S2CGroupChat) GetAccoutIdCliTimeStamp() string {
	if m != nil {
		return m.AccoutIdCliTimeStamp
	}
	return ""
}

func (m *S2CGroupChat) GetCliTimeStamp() int64 {
	if m != nil {
		return m.CliTimeStamp
	}
	return 0
}

// 群成员 收到 A 发来的群消息
type S2CRecvGroupChat struct {
	ChatMsg              *GroupMessage `protobuf:"bytes,1,opt,name=chatMsg,proto3" json:"chatMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *S2CRecvGroupChat) Reset()         { *m = S2CRecvGroupChat{} }
func (m *S2CRecvGroupChat) String() string { return proto.CompactTextString(m) }
func (*S2CRecvGroupChat) ProtoMessage()    {}
func (*S2CRecvGroupChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{125}
}
func (m *S2CRecvGroupChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvGroupChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvGroupChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvGroupChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvGroupChat.Merge(m, src)
}
func (m *S2CRecvGroupChat) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvGroupChat) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvGroupChat.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvGroupChat proto.InternalMessageInfo

func (m *S2CRecvGroupChat) GetChatMsg() *GroupMessage {
	if m != nil {
		return m.ChatMsg
	}
	return nil
}

// A 告诉服务端,收到的最后一条消息的时间戳, 取值来自 S2CGroupChat.srvTimeStamp, S2CRecvGroupChat.chatMsg.srvTimeStamp
// A 发出的群聊消息, 算 A 的聊天记录, 所以取值来自 S2CGroupChat.srvTimeStamp
// 其他群用户发给 A 的消息, 算 A 的聊天记录, 所以取值来自 S2CRecvGroupChat.chatMsg.srvTimeStamp
type C2SChatGroupLastMsgTimeStamp struct {
	SrvTimeStamp int64 `protobuf:"varint,1,opt,name=srvTimeStamp,proto3" json:"srvTimeStamp,omitempty"`
	// 聊天群的 id
	ChatGroupId          int64    `protobuf:"varint,2,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SChatGroupLastMsgTimeStamp) Reset()         { *m = C2SChatGroupLastMsgTimeStamp{} }
func (m *C2SChatGroupLastMsgTimeStamp) String() string { return proto.CompactTextString(m) }
func (*C2SChatGroupLastMsgTimeStamp) ProtoMessage()    {}
func (*C2SChatGroupLastMsgTimeStamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{126}
}
func (m *C2SChatGroupLastMsgTimeStamp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SChatGroupLastMsgTimeStamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SChatGroupLastMsgTimeStamp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SChatGroupLastMsgTimeStamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SChatGroupLastMsgTimeStamp.Merge(m, src)
}
func (m *C2SChatGroupLastMsgTimeStamp) XXX_Size() int {
	return m.Size()
}
func (m *C2SChatGroupLastMsgTimeStamp) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SChatGroupLastMsgTimeStamp.DiscardUnknown(m)
}

var xxx_messageInfo_C2SChatGroupLastMsgTimeStamp proto.InternalMessageInfo

func (m *C2SChatGroupLastMsgTimeStamp) GetSrvTimeStamp() int64 {
	if m != nil {
		return m.SrvTimeStamp
	}
	return 0
}

func (m *C2SChatGroupLastMsgTimeStamp) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

// 群成员获取群离线消息
type C2SGetOfflineGroupChatMsg struct {
	// 群id
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 群最后一条消息时间戳
	ChatGroupLastMessageTimestamp int64 `protobuf:"varint,2,opt,name=chatGroupLastMessageTimestamp,proto3" json:"chatGroupLastMessageTimestamp,omitempty"`
	// 客户端时间戳，客户端用于消息识别
	MsgTimestamp         int64    `protobuf:"varint,3,opt,name=msgTimestamp,proto3" json:"msgTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SGetOfflineGroupChatMsg) Reset()         { *m = C2SGetOfflineGroupChatMsg{} }
func (m *C2SGetOfflineGroupChatMsg) String() string { return proto.CompactTextString(m) }
func (*C2SGetOfflineGroupChatMsg) ProtoMessage()    {}
func (*C2SGetOfflineGroupChatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{127}
}
func (m *C2SGetOfflineGroupChatMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SGetOfflineGroupChatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SGetOfflineGroupChatMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SGetOfflineGroupChatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SGetOfflineGroupChatMsg.Merge(m, src)
}
func (m *C2SGetOfflineGroupChatMsg) XXX_Size() int {
	return m.Size()
}
func (m *C2SGetOfflineGroupChatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SGetOfflineGroupChatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_C2SGetOfflineGroupChatMsg proto.InternalMessageInfo

func (m *C2SGetOfflineGroupChatMsg) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *C2SGetOfflineGroupChatMsg) GetChatGroupLastMessageTimestamp() int64 {
	if m != nil {
		return m.ChatGroupLastMessageTimestamp
	}
	return 0
}

func (m *C2SGetOfflineGroupChatMsg) GetMsgTimestamp() int64 {
	if m != nil {
		return m.MsgTimestamp
	}
	return 0
}

// 服务器回复客户端，群成员获取群离线消息
type S2CGetOfflineGroupChatMsg struct {
	// 群id
	ChatGroupId int64 `protobuf:"varint,1,opt,name=chatGroupId,proto3" json:"chatGroupId,omitempty"`
	// 群离线消息
	Msgs []*GroupMessage `protobuf:"bytes,2,rep,name=msgs,proto3" json:"msgs,omitempty"`
	// 客户端时间戳，客户端用于消息识别
	MsgTimestamp         int64    `protobuf:"varint,3,opt,name=msgTimestamp,proto3" json:"msgTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CGetOfflineGroupChatMsg) Reset()         { *m = S2CGetOfflineGroupChatMsg{} }
func (m *S2CGetOfflineGroupChatMsg) String() string { return proto.CompactTextString(m) }
func (*S2CGetOfflineGroupChatMsg) ProtoMessage()    {}
func (*S2CGetOfflineGroupChatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{128}
}
func (m *S2CGetOfflineGroupChatMsg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CGetOfflineGroupChatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CGetOfflineGroupChatMsg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CGetOfflineGroupChatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CGetOfflineGroupChatMsg.Merge(m, src)
}
func (m *S2CGetOfflineGroupChatMsg) XXX_Size() int {
	return m.Size()
}
func (m *S2CGetOfflineGroupChatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CGetOfflineGroupChatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_S2CGetOfflineGroupChatMsg proto.InternalMessageInfo

func (m *S2CGetOfflineGroupChatMsg) GetChatGroupId() int64 {
	if m != nil {
		return m.ChatGroupId
	}
	return 0
}

func (m *S2CGetOfflineGroupChatMsg) GetMsgs() []*GroupMessage {
	if m != nil {
		return m.Msgs
	}
	return nil
}

func (m *S2CGetOfflineGroupChatMsg) GetMsgTimestamp() int64 {
	if m != nil {
		return m.MsgTimestamp
	}
	return 0
}

// 撤回群聊消息
type C2SWithdrawGroupMessage struct {
	// 已发送消息的服务端时间戳, ( 系统当前时间的纳秒值 / 1000 )
	ServerTimeStamp      int64    `protobuf:"varint,1,opt,name=serverTimeStamp,proto3" json:"serverTimeStamp,omitempty"`
	GroupId              int64    `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SWithdrawGroupMessage) Reset()         { *m = C2SWithdrawGroupMessage{} }
func (m *C2SWithdrawGroupMessage) String() string { return proto.CompactTextString(m) }
func (*C2SWithdrawGroupMessage) ProtoMessage()    {}
func (*C2SWithdrawGroupMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{129}
}
func (m *C2SWithdrawGroupMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SWithdrawGroupMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SWithdrawGroupMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SWithdrawGroupMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SWithdrawGroupMessage.Merge(m, src)
}
func (m *C2SWithdrawGroupMessage) XXX_Size() int {
	return m.Size()
}
func (m *C2SWithdrawGroupMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SWithdrawGroupMessage.DiscardUnknown(m)
}

var xxx_messageInfo_C2SWithdrawGroupMessage proto.InternalMessageInfo

func (m *C2SWithdrawGroupMessage) GetServerTimeStamp() int64 {
	if m != nil {
		return m.ServerTimeStamp
	}
	return 0
}

func (m *C2SWithdrawGroupMessage) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

type S2CWithdrawGroupMessage struct {
	ServerTimeStamp      int64    `protobuf:"varint,1,opt,name=serverTimeStamp,proto3" json:"serverTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CWithdrawGroupMessage) Reset()         { *m = S2CWithdrawGroupMessage{} }
func (m *S2CWithdrawGroupMessage) String() string { return proto.CompactTextString(m) }
func (*S2CWithdrawGroupMessage) ProtoMessage()    {}
func (*S2CWithdrawGroupMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{130}
}
func (m *S2CWithdrawGroupMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CWithdrawGroupMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CWithdrawGroupMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CWithdrawGroupMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CWithdrawGroupMessage.Merge(m, src)
}
func (m *S2CWithdrawGroupMessage) XXX_Size() int {
	return m.Size()
}
func (m *S2CWithdrawGroupMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CWithdrawGroupMessage.DiscardUnknown(m)
}

var xxx_messageInfo_S2CWithdrawGroupMessage proto.InternalMessageInfo

func (m *S2CWithdrawGroupMessage) GetServerTimeStamp() int64 {
	if m != nil {
		return m.ServerTimeStamp
	}
	return 0
}

// 查找用户
type C2SFindUser struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SFindUser) Reset()         { *m = C2SFindUser{} }
func (m *C2SFindUser) String() string { return proto.CompactTextString(m) }
func (*C2SFindUser) ProtoMessage()    {}
func (*C2SFindUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{131}
}
func (m *C2SFindUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SFindUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SFindUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SFindUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SFindUser.Merge(m, src)
}
func (m *C2SFindUser) XXX_Size() int {
	return m.Size()
}
func (m *C2SFindUser) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SFindUser.DiscardUnknown(m)
}

var xxx_messageInfo_C2SFindUser proto.InternalMessageInfo

func (m *C2SFindUser) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type S2CFindUser struct {
	// 用户简略信息
	UserBriefInfo *UserBriefInfo `protobuf:"bytes,1,opt,name=userBriefInfo,proto3" json:"userBriefInfo,omitempty"`
	// 是否展示朋友圈
	BShow bool `protobuf:"varint,2,opt,name=bShow,proto3" json:"bShow,omitempty"`
	// 朋友圈图片或者视频Url地址(可以为空，最多4个）
	Url                  []string `protobuf:"bytes,3,rep,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CFindUser) Reset()         { *m = S2CFindUser{} }
func (m *S2CFindUser) String() string { return proto.CompactTextString(m) }
func (*S2CFindUser) ProtoMessage()    {}
func (*S2CFindUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{132}
}
func (m *S2CFindUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CFindUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CFindUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CFindUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CFindUser.Merge(m, src)
}
func (m *S2CFindUser) XXX_Size() int {
	return m.Size()
}
func (m *S2CFindUser) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CFindUser.DiscardUnknown(m)
}

var xxx_messageInfo_S2CFindUser proto.InternalMessageInfo

func (m *S2CFindUser) GetUserBriefInfo() *UserBriefInfo {
	if m != nil {
		return m.UserBriefInfo
	}
	return nil
}

func (m *S2CFindUser) GetBShow() bool {
	if m != nil {
		return m.BShow
	}
	return false
}

func (m *S2CFindUser) GetUrl() []string {
	if m != nil {
		return m.Url
	}
	return nil
}

// 好友拉入黑名单
type C2SAddBlackList struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SAddBlackList) Reset()         { *m = C2SAddBlackList{} }
func (m *C2SAddBlackList) String() string { return proto.CompactTextString(m) }
func (*C2SAddBlackList) ProtoMessage()    {}
func (*C2SAddBlackList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{133}
}
func (m *C2SAddBlackList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SAddBlackList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SAddBlackList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SAddBlackList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SAddBlackList.Merge(m, src)
}
func (m *C2SAddBlackList) XXX_Size() int {
	return m.Size()
}
func (m *C2SAddBlackList) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SAddBlackList.DiscardUnknown(m)
}

var xxx_messageInfo_C2SAddBlackList proto.InternalMessageInfo

func (m *C2SAddBlackList) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type S2CAddBlackList struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CAddBlackList) Reset()         { *m = S2CAddBlackList{} }
func (m *S2CAddBlackList) String() string { return proto.CompactTextString(m) }
func (*S2CAddBlackList) ProtoMessage()    {}
func (*S2CAddBlackList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{134}
}
func (m *S2CAddBlackList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CAddBlackList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CAddBlackList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CAddBlackList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CAddBlackList.Merge(m, src)
}
func (m *S2CAddBlackList) XXX_Size() int {
	return m.Size()
}
func (m *S2CAddBlackList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CAddBlackList.DiscardUnknown(m)
}

var xxx_messageInfo_S2CAddBlackList proto.InternalMessageInfo

func (m *S2CAddBlackList) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

// 黑名单好友移出黑名单
type C2SMoveOutFriendBlackList struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SMoveOutFriendBlackList) Reset()         { *m = C2SMoveOutFriendBlackList{} }
func (m *C2SMoveOutFriendBlackList) String() string { return proto.CompactTextString(m) }
func (*C2SMoveOutFriendBlackList) ProtoMessage()    {}
func (*C2SMoveOutFriendBlackList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{135}
}
func (m *C2SMoveOutFriendBlackList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SMoveOutFriendBlackList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SMoveOutFriendBlackList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SMoveOutFriendBlackList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SMoveOutFriendBlackList.Merge(m, src)
}
func (m *C2SMoveOutFriendBlackList) XXX_Size() int {
	return m.Size()
}
func (m *C2SMoveOutFriendBlackList) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SMoveOutFriendBlackList.DiscardUnknown(m)
}

var xxx_messageInfo_C2SMoveOutFriendBlackList proto.InternalMessageInfo

func (m *C2SMoveOutFriendBlackList) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type S2CMoveOutFriendBlackList struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CMoveOutFriendBlackList) Reset()         { *m = S2CMoveOutFriendBlackList{} }
func (m *S2CMoveOutFriendBlackList) String() string { return proto.CompactTextString(m) }
func (*S2CMoveOutFriendBlackList) ProtoMessage()    {}
func (*S2CMoveOutFriendBlackList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{136}
}
func (m *S2CMoveOutFriendBlackList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CMoveOutFriendBlackList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CMoveOutFriendBlackList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CMoveOutFriendBlackList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CMoveOutFriendBlackList.Merge(m, src)
}
func (m *S2CMoveOutFriendBlackList) XXX_Size() int {
	return m.Size()
}
func (m *S2CMoveOutFriendBlackList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CMoveOutFriendBlackList.DiscardUnknown(m)
}

var xxx_messageInfo_S2CMoveOutFriendBlackList proto.InternalMessageInfo

func (m *S2CMoveOutFriendBlackList) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

// 获取黑名单列表
type C2SGetFriendBlackList struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SGetFriendBlackList) Reset()         { *m = C2SGetFriendBlackList{} }
func (m *C2SGetFriendBlackList) String() string { return proto.CompactTextString(m) }
func (*C2SGetFriendBlackList) ProtoMessage()    {}
func (*C2SGetFriendBlackList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{137}
}
func (m *C2SGetFriendBlackList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SGetFriendBlackList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SGetFriendBlackList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SGetFriendBlackList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SGetFriendBlackList.Merge(m, src)
}
func (m *C2SGetFriendBlackList) XXX_Size() int {
	return m.Size()
}
func (m *C2SGetFriendBlackList) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SGetFriendBlackList.DiscardUnknown(m)
}

var xxx_messageInfo_C2SGetFriendBlackList proto.InternalMessageInfo

type S2CGetFriendBlackList struct {
	BlackListIds         []int64  `protobuf:"varint,1,rep,packed,name=blackListIds,proto3" json:"blackListIds,omitempty"`
	Ret                  string   `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CGetFriendBlackList) Reset()         { *m = S2CGetFriendBlackList{} }
func (m *S2CGetFriendBlackList) String() string { return proto.CompactTextString(m) }
func (*S2CGetFriendBlackList) ProtoMessage()    {}
func (*S2CGetFriendBlackList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{138}
}
func (m *S2CGetFriendBlackList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CGetFriendBlackList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CGetFriendBlackList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CGetFriendBlackList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CGetFriendBlackList.Merge(m, src)
}
func (m *S2CGetFriendBlackList) XXX_Size() int {
	return m.Size()
}
func (m *S2CGetFriendBlackList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CGetFriendBlackList.DiscardUnknown(m)
}

var xxx_messageInfo_S2CGetFriendBlackList proto.InternalMessageInfo

func (m *S2CGetFriendBlackList) GetBlackListIds() []int64 {
	if m != nil {
		return m.BlackListIds
	}
	return nil
}

func (m *S2CGetFriendBlackList) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 设置朋友圈相册封面图片
type C2SSetWeiboCover struct {
	WeiboCoverPic        string   `protobuf:"bytes,1,opt,name=weiboCoverPic,proto3" json:"weiboCoverPic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SSetWeiboCover) Reset()         { *m = C2SSetWeiboCover{} }
func (m *C2SSetWeiboCover) String() string { return proto.CompactTextString(m) }
func (*C2SSetWeiboCover) ProtoMessage()    {}
func (*C2SSetWeiboCover) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{139}
}
func (m *C2SSetWeiboCover) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SSetWeiboCover) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SSetWeiboCover.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SSetWeiboCover) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SSetWeiboCover.Merge(m, src)
}
func (m *C2SSetWeiboCover) XXX_Size() int {
	return m.Size()
}
func (m *C2SSetWeiboCover) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SSetWeiboCover.DiscardUnknown(m)
}

var xxx_messageInfo_C2SSetWeiboCover proto.InternalMessageInfo

func (m *C2SSetWeiboCover) GetWeiboCoverPic() string {
	if m != nil {
		return m.WeiboCoverPic
	}
	return ""
}

type S2CSetWeiboCover struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CSetWeiboCover) Reset()         { *m = S2CSetWeiboCover{} }
func (m *S2CSetWeiboCover) String() string { return proto.CompactTextString(m) }
func (*S2CSetWeiboCover) ProtoMessage()    {}
func (*S2CSetWeiboCover) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{140}
}
func (m *S2CSetWeiboCover) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CSetWeiboCover) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CSetWeiboCover.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CSetWeiboCover) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CSetWeiboCover.Merge(m, src)
}
func (m *S2CSetWeiboCover) XXX_Size() int {
	return m.Size()
}
func (m *S2CSetWeiboCover) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CSetWeiboCover.DiscardUnknown(m)
}

var xxx_messageInfo_S2CSetWeiboCover proto.InternalMessageInfo

func (m *S2CSetWeiboCover) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 获取朋友圈相册封面图片
type C2SGetWeiboCover struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SGetWeiboCover) Reset()         { *m = C2SGetWeiboCover{} }
func (m *C2SGetWeiboCover) String() string { return proto.CompactTextString(m) }
func (*C2SGetWeiboCover) ProtoMessage()    {}
func (*C2SGetWeiboCover) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{141}
}
func (m *C2SGetWeiboCover) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SGetWeiboCover) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SGetWeiboCover.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SGetWeiboCover) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SGetWeiboCover.Merge(m, src)
}
func (m *C2SGetWeiboCover) XXX_Size() int {
	return m.Size()
}
func (m *C2SGetWeiboCover) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SGetWeiboCover.DiscardUnknown(m)
}

var xxx_messageInfo_C2SGetWeiboCover proto.InternalMessageInfo

func (m *C2SGetWeiboCover) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type S2CGetWeiboCover struct {
	StrWeiboCoverPicUrl  string   `protobuf:"bytes,1,opt,name=strWeiboCoverPicUrl,proto3" json:"strWeiboCoverPicUrl,omitempty"`
	IsLikeWeiboCover     bool     `protobuf:"varint,2,opt,name=isLikeWeiboCover,proto3" json:"isLikeWeiboCover,omitempty"`
	Ret                  string   `protobuf:"bytes,3,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CGetWeiboCover) Reset()         { *m = S2CGetWeiboCover{} }
func (m *S2CGetWeiboCover) String() string { return proto.CompactTextString(m) }
func (*S2CGetWeiboCover) ProtoMessage()    {}
func (*S2CGetWeiboCover) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{142}
}
func (m *S2CGetWeiboCover) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CGetWeiboCover) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CGetWeiboCover.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CGetWeiboCover) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CGetWeiboCover.Merge(m, src)
}
func (m *S2CGetWeiboCover) XXX_Size() int {
	return m.Size()
}
func (m *S2CGetWeiboCover) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CGetWeiboCover.DiscardUnknown(m)
}

var xxx_messageInfo_S2CGetWeiboCover proto.InternalMessageInfo

func (m *S2CGetWeiboCover) GetStrWeiboCoverPicUrl() string {
	if m != nil {
		return m.StrWeiboCoverPicUrl
	}
	return ""
}

func (m *S2CGetWeiboCover) GetIsLikeWeiboCover() bool {
	if m != nil {
		return m.IsLikeWeiboCover
	}
	return false
}

func (m *S2CGetWeiboCover) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 用户点赞好友朋友圈相册封面图片
type C2SLikeFriendWeiboCover struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SLikeFriendWeiboCover) Reset()         { *m = C2SLikeFriendWeiboCover{} }
func (m *C2SLikeFriendWeiboCover) String() string { return proto.CompactTextString(m) }
func (*C2SLikeFriendWeiboCover) ProtoMessage()    {}
func (*C2SLikeFriendWeiboCover) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{143}
}
func (m *C2SLikeFriendWeiboCover) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SLikeFriendWeiboCover) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SLikeFriendWeiboCover.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SLikeFriendWeiboCover) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SLikeFriendWeiboCover.Merge(m, src)
}
func (m *C2SLikeFriendWeiboCover) XXX_Size() int {
	return m.Size()
}
func (m *C2SLikeFriendWeiboCover) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SLikeFriendWeiboCover.DiscardUnknown(m)
}

var xxx_messageInfo_C2SLikeFriendWeiboCover proto.InternalMessageInfo

func (m *C2SLikeFriendWeiboCover) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type S2CLikeFriendWeiboCover struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CLikeFriendWeiboCover) Reset()         { *m = S2CLikeFriendWeiboCover{} }
func (m *S2CLikeFriendWeiboCover) String() string { return proto.CompactTextString(m) }
func (*S2CLikeFriendWeiboCover) ProtoMessage()    {}
func (*S2CLikeFriendWeiboCover) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{144}
}
func (m *S2CLikeFriendWeiboCover) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CLikeFriendWeiboCover) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CLikeFriendWeiboCover.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CLikeFriendWeiboCover) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CLikeFriendWeiboCover.Merge(m, src)
}
func (m *S2CLikeFriendWeiboCover) XXX_Size() int {
	return m.Size()
}
func (m *S2CLikeFriendWeiboCover) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CLikeFriendWeiboCover.DiscardUnknown(m)
}

var xxx_messageInfo_S2CLikeFriendWeiboCover proto.InternalMessageInfo

func (m *S2CLikeFriendWeiboCover) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type Weibo struct {
	// 此条朋友圈Id
	WeiboId int64 `protobuf:"varint,1,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	// 发朋友圈的账户Id
	PublisherId int64 `protobuf:"varint,2,opt,name=publisherId,proto3" json:"publisherId,omitempty"`
	// 发朋友圈的账户昵称
	PublisherNickName string `protobuf:"bytes,3,opt,name=publisherNickName,proto3" json:"publisherNickName,omitempty"`
	// 朋友圈类型
	Type int64 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	// 朋友圈文字信息
	Text string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// 朋友圈图片、视频信息
	UrlBin []byte `protobuf:"bytes,6,opt,name=url_bin,json=urlBin,proto3" json:"url_bin,omitempty"`
	// 发朋友圈服务器时间
	SrvTimestamp int64 `protobuf:"varint,7,opt,name=srvTimestamp,proto3" json:"srvTimestamp,omitempty"`
	// 朋友圈状态
	BDelete              bool     `protobuf:"varint,8,opt,name=bDelete,proto3" json:"bDelete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Weibo) Reset()         { *m = Weibo{} }
func (m *Weibo) String() string { return proto.CompactTextString(m) }
func (*Weibo) ProtoMessage()    {}
func (*Weibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{145}
}
func (m *Weibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Weibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Weibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Weibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Weibo.Merge(m, src)
}
func (m *Weibo) XXX_Size() int {
	return m.Size()
}
func (m *Weibo) XXX_DiscardUnknown() {
	xxx_messageInfo_Weibo.DiscardUnknown(m)
}

var xxx_messageInfo_Weibo proto.InternalMessageInfo

func (m *Weibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

func (m *Weibo) GetPublisherId() int64 {
	if m != nil {
		return m.PublisherId
	}
	return 0
}

func (m *Weibo) GetPublisherNickName() string {
	if m != nil {
		return m.PublisherNickName
	}
	return ""
}

func (m *Weibo) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Weibo) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Weibo) GetUrlBin() []byte {
	if m != nil {
		return m.UrlBin
	}
	return nil
}

func (m *Weibo) GetSrvTimestamp() int64 {
	if m != nil {
		return m.SrvTimestamp
	}
	return 0
}

func (m *Weibo) GetBDelete() bool {
	if m != nil {
		return m.BDelete
	}
	return false
}

type WeiboUrl struct {
	Urls                 []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeiboUrl) Reset()         { *m = WeiboUrl{} }
func (m *WeiboUrl) String() string { return proto.CompactTextString(m) }
func (*WeiboUrl) ProtoMessage()    {}
func (*WeiboUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{146}
}
func (m *WeiboUrl) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WeiboUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WeiboUrl.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WeiboUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeiboUrl.Merge(m, src)
}
func (m *WeiboUrl) XXX_Size() int {
	return m.Size()
}
func (m *WeiboUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_WeiboUrl.DiscardUnknown(m)
}

var xxx_messageInfo_WeiboUrl proto.InternalMessageInfo

func (m *WeiboUrl) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

// 发朋友圈
type C2SPublishWeibo struct {
	// 朋友圈内容类型（msg_id.proto中 MsgWeibo 枚举的值）
	ContentType int64 `protobuf:"varint,1,opt,name=contentType,proto3" json:"contentType,omitempty"`
	// 朋友圈文字
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 朋友圈图片url地址
	Url []string `protobuf:"bytes,3,rep,name=url,proto3" json:"url,omitempty"`
	// 此条朋友圈id（服务器填入）
	WeiboId              int64    `protobuf:"varint,4,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SPublishWeibo) Reset()         { *m = C2SPublishWeibo{} }
func (m *C2SPublishWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SPublishWeibo) ProtoMessage()    {}
func (*C2SPublishWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{147}
}
func (m *C2SPublishWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SPublishWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SPublishWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SPublishWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SPublishWeibo.Merge(m, src)
}
func (m *C2SPublishWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SPublishWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SPublishWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SPublishWeibo proto.InternalMessageInfo

func (m *C2SPublishWeibo) GetContentType() int64 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *C2SPublishWeibo) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *C2SPublishWeibo) GetUrl() []string {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *C2SPublishWeibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

type MQPublishWeibo struct {
	// msg_weibo.proto中 message Weibo的json proto序列化字符串
	Weibo                *Weibo   `protobuf:"bytes,1,opt,name=weibo,proto3" json:"weibo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MQPublishWeibo) Reset()         { *m = MQPublishWeibo{} }
func (m *MQPublishWeibo) String() string { return proto.CompactTextString(m) }
func (*MQPublishWeibo) ProtoMessage()    {}
func (*MQPublishWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{148}
}
func (m *MQPublishWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQPublishWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQPublishWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQPublishWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQPublishWeibo.Merge(m, src)
}
func (m *MQPublishWeibo) XXX_Size() int {
	return m.Size()
}
func (m *MQPublishWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_MQPublishWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_MQPublishWeibo proto.InternalMessageInfo

func (m *MQPublishWeibo) GetWeibo() *Weibo {
	if m != nil {
		return m.Weibo
	}
	return nil
}

type S2CPublishWeibo struct {
	Weibo                *Weibo   `protobuf:"bytes,1,opt,name=weibo,proto3" json:"weibo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CPublishWeibo) Reset()         { *m = S2CPublishWeibo{} }
func (m *S2CPublishWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CPublishWeibo) ProtoMessage()    {}
func (*S2CPublishWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{149}
}
func (m *S2CPublishWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CPublishWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CPublishWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CPublishWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CPublishWeibo.Merge(m, src)
}
func (m *S2CPublishWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CPublishWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CPublishWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CPublishWeibo proto.InternalMessageInfo

func (m *S2CPublishWeibo) GetWeibo() *Weibo {
	if m != nil {
		return m.Weibo
	}
	return nil
}

type S2CRecvPublishWeibo struct {
	WeiboId              int64    `protobuf:"varint,1,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvPublishWeibo) Reset()         { *m = S2CRecvPublishWeibo{} }
func (m *S2CRecvPublishWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CRecvPublishWeibo) ProtoMessage()    {}
func (*S2CRecvPublishWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{150}
}
func (m *S2CRecvPublishWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvPublishWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvPublishWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvPublishWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvPublishWeibo.Merge(m, src)
}
func (m *S2CRecvPublishWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvPublishWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvPublishWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvPublishWeibo proto.InternalMessageInfo

func (m *S2CRecvPublishWeibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

type LikeWeibo struct {
	// 朋友圈id
	WeiboId int64 `protobuf:"varint,1,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	// 发朋友圈的用户id
	WeiboPublisherId int64 `protobuf:"varint,2,opt,name=weiboPublisherId,proto3" json:"weiboPublisherId,omitempty"`
	// 点赞的用户id
	LikerId int64 `protobuf:"varint,3,opt,name=likerId,proto3" json:"likerId,omitempty"`
	// 点赞的用户昵称
	LikerNickName        string   `protobuf:"bytes,4,opt,name=likerNickName,proto3" json:"likerNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeWeibo) Reset()         { *m = LikeWeibo{} }
func (m *LikeWeibo) String() string { return proto.CompactTextString(m) }
func (*LikeWeibo) ProtoMessage()    {}
func (*LikeWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{151}
}
func (m *LikeWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeWeibo.Merge(m, src)
}
func (m *LikeWeibo) XXX_Size() int {
	return m.Size()
}
func (m *LikeWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_LikeWeibo proto.InternalMessageInfo

func (m *LikeWeibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

func (m *LikeWeibo) GetWeiboPublisherId() int64 {
	if m != nil {
		return m.WeiboPublisherId
	}
	return 0
}

func (m *LikeWeibo) GetLikerId() int64 {
	if m != nil {
		return m.LikerId
	}
	return 0
}

func (m *LikeWeibo) GetLikerNickName() string {
	if m != nil {
		return m.LikerNickName
	}
	return ""
}

// 点赞朋友圈
type C2SLikeWeibo struct {
	// 发朋友圈的用户的id
	WeiboPublisherId int64 `protobuf:"varint,1,opt,name=weiboPublisherId,proto3" json:"weiboPublisherId,omitempty"`
	// 朋友圈id
	WeiboId              int64    `protobuf:"varint,2,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SLikeWeibo) Reset()         { *m = C2SLikeWeibo{} }
func (m *C2SLikeWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SLikeWeibo) ProtoMessage()    {}
func (*C2SLikeWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{152}
}
func (m *C2SLikeWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SLikeWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SLikeWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SLikeWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SLikeWeibo.Merge(m, src)
}
func (m *C2SLikeWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SLikeWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SLikeWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SLikeWeibo proto.InternalMessageInfo

func (m *C2SLikeWeibo) GetWeiboPublisherId() int64 {
	if m != nil {
		return m.WeiboPublisherId
	}
	return 0
}

func (m *C2SLikeWeibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

type MQLikeWeibo struct {
	LikeWeibo            *LikeWeibo `protobuf:"bytes,1,opt,name=likeWeibo,proto3" json:"likeWeibo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MQLikeWeibo) Reset()         { *m = MQLikeWeibo{} }
func (m *MQLikeWeibo) String() string { return proto.CompactTextString(m) }
func (*MQLikeWeibo) ProtoMessage()    {}
func (*MQLikeWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{153}
}
func (m *MQLikeWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQLikeWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQLikeWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQLikeWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQLikeWeibo.Merge(m, src)
}
func (m *MQLikeWeibo) XXX_Size() int {
	return m.Size()
}
func (m *MQLikeWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_MQLikeWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_MQLikeWeibo proto.InternalMessageInfo

func (m *MQLikeWeibo) GetLikeWeibo() *LikeWeibo {
	if m != nil {
		return m.LikeWeibo
	}
	return nil
}

type S2CLikeWeibo struct {
	LikeWeibo            *LikeWeibo `protobuf:"bytes,1,opt,name=likeWeibo,proto3" json:"likeWeibo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *S2CLikeWeibo) Reset()         { *m = S2CLikeWeibo{} }
func (m *S2CLikeWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CLikeWeibo) ProtoMessage()    {}
func (*S2CLikeWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{154}
}
func (m *S2CLikeWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CLikeWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CLikeWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CLikeWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CLikeWeibo.Merge(m, src)
}
func (m *S2CLikeWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CLikeWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CLikeWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CLikeWeibo proto.InternalMessageInfo

func (m *S2CLikeWeibo) GetLikeWeibo() *LikeWeibo {
	if m != nil {
		return m.LikeWeibo
	}
	return nil
}

type S2CRecvLikeWeibo struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvLikeWeibo) Reset()         { *m = S2CRecvLikeWeibo{} }
func (m *S2CRecvLikeWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CRecvLikeWeibo) ProtoMessage()    {}
func (*S2CRecvLikeWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{155}
}
func (m *S2CRecvLikeWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvLikeWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvLikeWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvLikeWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvLikeWeibo.Merge(m, src)
}
func (m *S2CRecvLikeWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvLikeWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvLikeWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvLikeWeibo proto.InternalMessageInfo

func (m *S2CRecvLikeWeibo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 取消点赞朋友圈
type C2SCancelLikeWeibo struct {
	// 发朋友圈的用户的id
	WeiboPublisherId int64 `protobuf:"varint,1,opt,name=weiboPublisherId,proto3" json:"weiboPublisherId,omitempty"`
	// 朋友圈id
	WeiboId              int64    `protobuf:"varint,2,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SCancelLikeWeibo) Reset()         { *m = C2SCancelLikeWeibo{} }
func (m *C2SCancelLikeWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SCancelLikeWeibo) ProtoMessage()    {}
func (*C2SCancelLikeWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{156}
}
func (m *C2SCancelLikeWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SCancelLikeWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SCancelLikeWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SCancelLikeWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SCancelLikeWeibo.Merge(m, src)
}
func (m *C2SCancelLikeWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SCancelLikeWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SCancelLikeWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SCancelLikeWeibo proto.InternalMessageInfo

func (m *C2SCancelLikeWeibo) GetWeiboPublisherId() int64 {
	if m != nil {
		return m.WeiboPublisherId
	}
	return 0
}

func (m *C2SCancelLikeWeibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

type S2CCancelLikeWeibo struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CCancelLikeWeibo) Reset()         { *m = S2CCancelLikeWeibo{} }
func (m *S2CCancelLikeWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CCancelLikeWeibo) ProtoMessage()    {}
func (*S2CCancelLikeWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{157}
}
func (m *S2CCancelLikeWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CCancelLikeWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CCancelLikeWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CCancelLikeWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CCancelLikeWeibo.Merge(m, src)
}
func (m *S2CCancelLikeWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CCancelLikeWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CCancelLikeWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CCancelLikeWeibo proto.InternalMessageInfo

func (m *S2CCancelLikeWeibo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type ReplyWeibo struct {
	// 朋友圈id(客户端填)
	WeiboId int64 `protobuf:"varint,1,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	// 发朋友圈的用户id(客户端填)
	WeiboPublisherId int64 `protobuf:"varint,2,opt,name=weiboPublisherId,proto3" json:"weiboPublisherId,omitempty"`
	// 此条朋友圈评论Id（服务器填）
	CommentedId int64 `protobuf:"varint,3,opt,name=commentedId,proto3" json:"commentedId,omitempty"`
	// 此条评论回复的评论Id（如果是评论朋友圈，则填0;如果是回复评论Id，客户端填被回复的评论Id）
	BeCommentedId int64 `protobuf:"varint,4,opt,name=beCommentedId,proto3" json:"beCommentedId,omitempty"`
	// 被评论者Id（如果是评论朋友圈，则填发朋友圈的用户Id;如果是回复评论Id，客户端填被回复评论的发布者Id）
	BeCommentatorId int64 `protobuf:"varint,5,opt,name=beCommentatorId,proto3" json:"beCommentatorId,omitempty"`
	// 评论者Id（服务器填）
	CommentatorId int64 `protobuf:"varint,6,opt,name=commentatorId,proto3" json:"commentatorId,omitempty"`
	// 评论内容(客户端填)
	CommentContent string `protobuf:"bytes,7,opt,name=commentContent,proto3" json:"commentContent,omitempty"`
	// 评论时间（服务器填）
	CommentTimeStamp     int64    `protobuf:"varint,8,opt,name=commentTimeStamp,proto3" json:"commentTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyWeibo) Reset()         { *m = ReplyWeibo{} }
func (m *ReplyWeibo) String() string { return proto.CompactTextString(m) }
func (*ReplyWeibo) ProtoMessage()    {}
func (*ReplyWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{158}
}
func (m *ReplyWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReplyWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReplyWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReplyWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyWeibo.Merge(m, src)
}
func (m *ReplyWeibo) XXX_Size() int {
	return m.Size()
}
func (m *ReplyWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyWeibo proto.InternalMessageInfo

func (m *ReplyWeibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

func (m *ReplyWeibo) GetWeiboPublisherId() int64 {
	if m != nil {
		return m.WeiboPublisherId
	}
	return 0
}

func (m *ReplyWeibo) GetCommentedId() int64 {
	if m != nil {
		return m.CommentedId
	}
	return 0
}

func (m *ReplyWeibo) GetBeCommentedId() int64 {
	if m != nil {
		return m.BeCommentedId
	}
	return 0
}

func (m *ReplyWeibo) GetBeCommentatorId() int64 {
	if m != nil {
		return m.BeCommentatorId
	}
	return 0
}

func (m *ReplyWeibo) GetCommentatorId() int64 {
	if m != nil {
		return m.CommentatorId
	}
	return 0
}

func (m *ReplyWeibo) GetCommentContent() string {
	if m != nil {
		return m.CommentContent
	}
	return ""
}

func (m *ReplyWeibo) GetCommentTimeStamp() int64 {
	if m != nil {
		return m.CommentTimeStamp
	}
	return 0
}

// 评论朋友圈
type C2SReplyWeibo struct {
	ReplyWeibo           *ReplyWeibo `protobuf:"bytes,1,opt,name=replyWeibo,proto3" json:"replyWeibo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *C2SReplyWeibo) Reset()         { *m = C2SReplyWeibo{} }
func (m *C2SReplyWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SReplyWeibo) ProtoMessage()    {}
func (*C2SReplyWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{159}
}
func (m *C2SReplyWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SReplyWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SReplyWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SReplyWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SReplyWeibo.Merge(m, src)
}
func (m *C2SReplyWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SReplyWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SReplyWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SReplyWeibo proto.InternalMessageInfo

func (m *C2SReplyWeibo) GetReplyWeibo() *ReplyWeibo {
	if m != nil {
		return m.ReplyWeibo
	}
	return nil
}

type MQReplyWeibo struct {
	ReplyWeibo           *ReplyWeibo `protobuf:"bytes,1,opt,name=replyWeibo,proto3" json:"replyWeibo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MQReplyWeibo) Reset()         { *m = MQReplyWeibo{} }
func (m *MQReplyWeibo) String() string { return proto.CompactTextString(m) }
func (*MQReplyWeibo) ProtoMessage()    {}
func (*MQReplyWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{160}
}
func (m *MQReplyWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQReplyWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQReplyWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQReplyWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQReplyWeibo.Merge(m, src)
}
func (m *MQReplyWeibo) XXX_Size() int {
	return m.Size()
}
func (m *MQReplyWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_MQReplyWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_MQReplyWeibo proto.InternalMessageInfo

func (m *MQReplyWeibo) GetReplyWeibo() *ReplyWeibo {
	if m != nil {
		return m.ReplyWeibo
	}
	return nil
}

type S2CReplyWeibo struct {
	ReplyWeibo           *ReplyWeibo `protobuf:"bytes,1,opt,name=replyWeibo,proto3" json:"replyWeibo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2CReplyWeibo) Reset()         { *m = S2CReplyWeibo{} }
func (m *S2CReplyWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CReplyWeibo) ProtoMessage()    {}
func (*S2CReplyWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{161}
}
func (m *S2CReplyWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CReplyWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CReplyWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CReplyWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CReplyWeibo.Merge(m, src)
}
func (m *S2CReplyWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CReplyWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CReplyWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CReplyWeibo proto.InternalMessageInfo

func (m *S2CReplyWeibo) GetReplyWeibo() *ReplyWeibo {
	if m != nil {
		return m.ReplyWeibo
	}
	return nil
}

type S2CRecvReplyWeibo struct {
	// 当前评论成功的评论Id
	CommentId            int64    `protobuf:"varint,1,opt,name=commentId,proto3" json:"commentId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvReplyWeibo) Reset()         { *m = S2CRecvReplyWeibo{} }
func (m *S2CRecvReplyWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CRecvReplyWeibo) ProtoMessage()    {}
func (*S2CRecvReplyWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{162}
}
func (m *S2CRecvReplyWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvReplyWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvReplyWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvReplyWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvReplyWeibo.Merge(m, src)
}
func (m *S2CRecvReplyWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvReplyWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvReplyWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvReplyWeibo proto.InternalMessageInfo

func (m *S2CRecvReplyWeibo) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

// 删除朋友圈评论
type C2SDeleteWeiboReply struct {
	// 朋友圈id
	WeiboId int64 `protobuf:"varint,1,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	// 发朋友圈的用户id
	WeiboPublisherId int64 `protobuf:"varint,2,opt,name=weiboPublisherId,proto3" json:"weiboPublisherId,omitempty"`
	// 评论id
	CommentId            int64    `protobuf:"varint,3,opt,name=commentId,proto3" json:"commentId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SDeleteWeiboReply) Reset()         { *m = C2SDeleteWeiboReply{} }
func (m *C2SDeleteWeiboReply) String() string { return proto.CompactTextString(m) }
func (*C2SDeleteWeiboReply) ProtoMessage()    {}
func (*C2SDeleteWeiboReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{163}
}
func (m *C2SDeleteWeiboReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SDeleteWeiboReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SDeleteWeiboReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SDeleteWeiboReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SDeleteWeiboReply.Merge(m, src)
}
func (m *C2SDeleteWeiboReply) XXX_Size() int {
	return m.Size()
}
func (m *C2SDeleteWeiboReply) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SDeleteWeiboReply.DiscardUnknown(m)
}

var xxx_messageInfo_C2SDeleteWeiboReply proto.InternalMessageInfo

func (m *C2SDeleteWeiboReply) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

func (m *C2SDeleteWeiboReply) GetWeiboPublisherId() int64 {
	if m != nil {
		return m.WeiboPublisherId
	}
	return 0
}

func (m *C2SDeleteWeiboReply) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

type S2CDeleteWeiboReply struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CDeleteWeiboReply) Reset()         { *m = S2CDeleteWeiboReply{} }
func (m *S2CDeleteWeiboReply) String() string { return proto.CompactTextString(m) }
func (*S2CDeleteWeiboReply) ProtoMessage()    {}
func (*S2CDeleteWeiboReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{164}
}
func (m *S2CDeleteWeiboReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CDeleteWeiboReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CDeleteWeiboReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CDeleteWeiboReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CDeleteWeiboReply.Merge(m, src)
}
func (m *S2CDeleteWeiboReply) XXX_Size() int {
	return m.Size()
}
func (m *S2CDeleteWeiboReply) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CDeleteWeiboReply.DiscardUnknown(m)
}

var xxx_messageInfo_S2CDeleteWeiboReply proto.InternalMessageInfo

func (m *S2CDeleteWeiboReply) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 删除朋友圈
type C2SDeleteWeibo struct {
	WeiboId              int64    `protobuf:"varint,1,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SDeleteWeibo) Reset()         { *m = C2SDeleteWeibo{} }
func (m *C2SDeleteWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SDeleteWeibo) ProtoMessage()    {}
func (*C2SDeleteWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{165}
}
func (m *C2SDeleteWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SDeleteWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SDeleteWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SDeleteWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SDeleteWeibo.Merge(m, src)
}
func (m *C2SDeleteWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SDeleteWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SDeleteWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SDeleteWeibo proto.InternalMessageInfo

func (m *C2SDeleteWeibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

type MQDeleteWeibo struct {
	// 发朋友圈的好友
	FriendId int64 `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	// 朋友圈id
	WeiboId              int64    `protobuf:"varint,2,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MQDeleteWeibo) Reset()         { *m = MQDeleteWeibo{} }
func (m *MQDeleteWeibo) String() string { return proto.CompactTextString(m) }
func (*MQDeleteWeibo) ProtoMessage()    {}
func (*MQDeleteWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{166}
}
func (m *MQDeleteWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MQDeleteWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MQDeleteWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MQDeleteWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MQDeleteWeibo.Merge(m, src)
}
func (m *MQDeleteWeibo) XXX_Size() int {
	return m.Size()
}
func (m *MQDeleteWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_MQDeleteWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_MQDeleteWeibo proto.InternalMessageInfo

func (m *MQDeleteWeibo) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *MQDeleteWeibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

type S2CDeleteWeibo struct {
	// 发朋友圈的好友
	FriendId int64 `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	// 朋友圈id
	WeiboId              int64    `protobuf:"varint,2,opt,name=weiboId,proto3" json:"weiboId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CDeleteWeibo) Reset()         { *m = S2CDeleteWeibo{} }
func (m *S2CDeleteWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CDeleteWeibo) ProtoMessage()    {}
func (*S2CDeleteWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{167}
}
func (m *S2CDeleteWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CDeleteWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CDeleteWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CDeleteWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CDeleteWeibo.Merge(m, src)
}
func (m *S2CDeleteWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CDeleteWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CDeleteWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CDeleteWeibo proto.InternalMessageInfo

func (m *S2CDeleteWeibo) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *S2CDeleteWeibo) GetWeiboId() int64 {
	if m != nil {
		return m.WeiboId
	}
	return 0
}

type S2CRecvDeleteWeibo struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRecvDeleteWeibo) Reset()         { *m = S2CRecvDeleteWeibo{} }
func (m *S2CRecvDeleteWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CRecvDeleteWeibo) ProtoMessage()    {}
func (*S2CRecvDeleteWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{168}
}
func (m *S2CRecvDeleteWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CRecvDeleteWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CRecvDeleteWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CRecvDeleteWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRecvDeleteWeibo.Merge(m, src)
}
func (m *S2CRecvDeleteWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CRecvDeleteWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRecvDeleteWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRecvDeleteWeibo proto.InternalMessageInfo

func (m *S2CRecvDeleteWeibo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type BrowseWeibo struct {
	// 朋友圈
	Weibo *Weibo `protobuf:"bytes,1,opt,name=weibo,proto3" json:"weibo,omitempty"`
	// 朋友圈点赞Id
	LikerId []int64 `protobuf:"varint,2,rep,packed,name=likerId,proto3" json:"likerId,omitempty"`
	// 朋友圈评论
	ReplayWeibo          []*ReplyWeibo `protobuf:"bytes,3,rep,name=replayWeibo,proto3" json:"replayWeibo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BrowseWeibo) Reset()         { *m = BrowseWeibo{} }
func (m *BrowseWeibo) String() string { return proto.CompactTextString(m) }
func (*BrowseWeibo) ProtoMessage()    {}
func (*BrowseWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{169}
}
func (m *BrowseWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BrowseWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BrowseWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BrowseWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrowseWeibo.Merge(m, src)
}
func (m *BrowseWeibo) XXX_Size() int {
	return m.Size()
}
func (m *BrowseWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_BrowseWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_BrowseWeibo proto.InternalMessageInfo

func (m *BrowseWeibo) GetWeibo() *Weibo {
	if m != nil {
		return m.Weibo
	}
	return nil
}

func (m *BrowseWeibo) GetLikerId() []int64 {
	if m != nil {
		return m.LikerId
	}
	return nil
}

func (m *BrowseWeibo) GetReplayWeibo() []*ReplyWeibo {
	if m != nil {
		return m.ReplayWeibo
	}
	return nil
}

// 浏览某人朋友圈(某人可以是自己，也可以是好友)
type C2SBrowseSomeoneWeibo struct {
	LastTimeStamp        int64    `protobuf:"varint,1,opt,name=lastTimeStamp,proto3" json:"lastTimeStamp,omitempty"`
	FriendId             int64    `protobuf:"varint,2,opt,name=friendId,proto3" json:"friendId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SBrowseSomeoneWeibo) Reset()         { *m = C2SBrowseSomeoneWeibo{} }
func (m *C2SBrowseSomeoneWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SBrowseSomeoneWeibo) ProtoMessage()    {}
func (*C2SBrowseSomeoneWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{170}
}
func (m *C2SBrowseSomeoneWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SBrowseSomeoneWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SBrowseSomeoneWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SBrowseSomeoneWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SBrowseSomeoneWeibo.Merge(m, src)
}
func (m *C2SBrowseSomeoneWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SBrowseSomeoneWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SBrowseSomeoneWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SBrowseSomeoneWeibo proto.InternalMessageInfo

func (m *C2SBrowseSomeoneWeibo) GetLastTimeStamp() int64 {
	if m != nil {
		return m.LastTimeStamp
	}
	return 0
}

func (m *C2SBrowseSomeoneWeibo) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type S2CBrowseSomeoneWeibo struct {
	BrowseWeibo          []*BrowseWeibo          `protobuf:"bytes,1,rep,name=browseWeibo,proto3" json:"browseWeibo,omitempty"`
	Strategy             FriendLookWeiboStrategy `protobuf:"varint,2,opt,name=strategy,proto3,enum=msg_struct.FriendLookWeiboStrategy" json:"strategy,omitempty"`
	Ret                  string                  `protobuf:"bytes,3,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *S2CBrowseSomeoneWeibo) Reset()         { *m = S2CBrowseSomeoneWeibo{} }
func (m *S2CBrowseSomeoneWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CBrowseSomeoneWeibo) ProtoMessage()    {}
func (*S2CBrowseSomeoneWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{171}
}
func (m *S2CBrowseSomeoneWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CBrowseSomeoneWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CBrowseSomeoneWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CBrowseSomeoneWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CBrowseSomeoneWeibo.Merge(m, src)
}
func (m *S2CBrowseSomeoneWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CBrowseSomeoneWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CBrowseSomeoneWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CBrowseSomeoneWeibo proto.InternalMessageInfo

func (m *S2CBrowseSomeoneWeibo) GetBrowseWeibo() []*BrowseWeibo {
	if m != nil {
		return m.BrowseWeibo
	}
	return nil
}

func (m *S2CBrowseSomeoneWeibo) GetStrategy() FriendLookWeiboStrategy {
	if m != nil {
		return m.Strategy
	}
	return FriendLookWeiboStrategy_undefined
}

func (m *S2CBrowseSomeoneWeibo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 浏览好友朋友圈
type C2SBrowseFriendWeibo struct {
	FriendId             int64    `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	LastTimeStamp        int64    `protobuf:"varint,2,opt,name=lastTimeStamp,proto3" json:"lastTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SBrowseFriendWeibo) Reset()         { *m = C2SBrowseFriendWeibo{} }
func (m *C2SBrowseFriendWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SBrowseFriendWeibo) ProtoMessage()    {}
func (*C2SBrowseFriendWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{172}
}
func (m *C2SBrowseFriendWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SBrowseFriendWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SBrowseFriendWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SBrowseFriendWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SBrowseFriendWeibo.Merge(m, src)
}
func (m *C2SBrowseFriendWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SBrowseFriendWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SBrowseFriendWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SBrowseFriendWeibo proto.InternalMessageInfo

func (m *C2SBrowseFriendWeibo) GetFriendId() int64 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *C2SBrowseFriendWeibo) GetLastTimeStamp() int64 {
	if m != nil {
		return m.LastTimeStamp
	}
	return 0
}

type S2CBrowseFriendWeibo struct {
	BrowseWeibo          []*BrowseWeibo `protobuf:"bytes,1,rep,name=browseWeibo,proto3" json:"browseWeibo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *S2CBrowseFriendWeibo) Reset()         { *m = S2CBrowseFriendWeibo{} }
func (m *S2CBrowseFriendWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CBrowseFriendWeibo) ProtoMessage()    {}
func (*S2CBrowseFriendWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{173}
}
func (m *S2CBrowseFriendWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CBrowseFriendWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CBrowseFriendWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CBrowseFriendWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CBrowseFriendWeibo.Merge(m, src)
}
func (m *S2CBrowseFriendWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CBrowseFriendWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CBrowseFriendWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CBrowseFriendWeibo proto.InternalMessageInfo

func (m *S2CBrowseFriendWeibo) GetBrowseWeibo() []*BrowseWeibo {
	if m != nil {
		return m.BrowseWeibo
	}
	return nil
}

type C2SBrowseAllWeibo struct {
	LastMsgTimestamp     int64    `protobuf:"varint,1,opt,name=lastMsgTimestamp,proto3" json:"lastMsgTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SBrowseAllWeibo) Reset()         { *m = C2SBrowseAllWeibo{} }
func (m *C2SBrowseAllWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SBrowseAllWeibo) ProtoMessage()    {}
func (*C2SBrowseAllWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{174}
}
func (m *C2SBrowseAllWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SBrowseAllWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SBrowseAllWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SBrowseAllWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SBrowseAllWeibo.Merge(m, src)
}
func (m *C2SBrowseAllWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SBrowseAllWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SBrowseAllWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SBrowseAllWeibo proto.InternalMessageInfo

func (m *C2SBrowseAllWeibo) GetLastMsgTimestamp() int64 {
	if m != nil {
		return m.LastMsgTimestamp
	}
	return 0
}

type S2CBrowseAllWeibo struct {
	BrowseWeibo []*BrowseWeibo `protobuf:"bytes,1,rep,name=browseWeibo,proto3" json:"browseWeibo,omitempty"`
	// 占位符,避免客户端解析出错
	Ret                  string   `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CBrowseAllWeibo) Reset()         { *m = S2CBrowseAllWeibo{} }
func (m *S2CBrowseAllWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CBrowseAllWeibo) ProtoMessage()    {}
func (*S2CBrowseAllWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{175}
}
func (m *S2CBrowseAllWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CBrowseAllWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CBrowseAllWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CBrowseAllWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CBrowseAllWeibo.Merge(m, src)
}
func (m *S2CBrowseAllWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CBrowseAllWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CBrowseAllWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CBrowseAllWeibo proto.InternalMessageInfo

func (m *S2CBrowseAllWeibo) GetBrowseWeibo() []*BrowseWeibo {
	if m != nil {
		return m.BrowseWeibo
	}
	return nil
}

func (m *S2CBrowseAllWeibo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 设置不看某好友朋友圈开关
type C2SDontLookFriendWeibo struct {
	FriendIds []int64 `protobuf:"varint,1,rep,packed,name=friendIds,proto3" json:"friendIds,omitempty"`
	// bNotLook = true表示不看某好友朋友圈，false表示看某好友朋友圈
	BNotLook             bool     `protobuf:"varint,2,opt,name=bNotLook,proto3" json:"bNotLook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SDontLookFriendWeibo) Reset()         { *m = C2SDontLookFriendWeibo{} }
func (m *C2SDontLookFriendWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SDontLookFriendWeibo) ProtoMessage()    {}
func (*C2SDontLookFriendWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{176}
}
func (m *C2SDontLookFriendWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SDontLookFriendWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SDontLookFriendWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SDontLookFriendWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SDontLookFriendWeibo.Merge(m, src)
}
func (m *C2SDontLookFriendWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SDontLookFriendWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SDontLookFriendWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SDontLookFriendWeibo proto.InternalMessageInfo

func (m *C2SDontLookFriendWeibo) GetFriendIds() []int64 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

func (m *C2SDontLookFriendWeibo) GetBNotLook() bool {
	if m != nil {
		return m.BNotLook
	}
	return false
}

type S2CDontLookFriendWeibo struct {
	// 服务端返回所有的好友简略信息, 我不看这些好友的朋友圈
	FriendBriefInfos     []*UserBriefInfo `protobuf:"bytes,1,rep,name=friendBriefInfos,proto3" json:"friendBriefInfos,omitempty"`
	Ret                  string           `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2CDontLookFriendWeibo) Reset()         { *m = S2CDontLookFriendWeibo{} }
func (m *S2CDontLookFriendWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CDontLookFriendWeibo) ProtoMessage()    {}
func (*S2CDontLookFriendWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{177}
}
func (m *S2CDontLookFriendWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CDontLookFriendWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CDontLookFriendWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CDontLookFriendWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CDontLookFriendWeibo.Merge(m, src)
}
func (m *S2CDontLookFriendWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CDontLookFriendWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CDontLookFriendWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CDontLookFriendWeibo proto.InternalMessageInfo

func (m *S2CDontLookFriendWeibo) GetFriendBriefInfos() []*UserBriefInfo {
	if m != nil {
		return m.FriendBriefInfos
	}
	return nil
}

func (m *S2CDontLookFriendWeibo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 设置不允许某好友看自己朋友圈开关
type C2SForbiddenFriendLookWeibo struct {
	FriendIds []int64 `protobuf:"varint,1,rep,packed,name=friendIds,proto3" json:"friendIds,omitempty"`
	// bForbidden = true表示不允许某好友看自己朋友圈，false表示允许某好友看自己朋友圈
	BForbidden           bool     `protobuf:"varint,2,opt,name=bForbidden,proto3" json:"bForbidden,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SForbiddenFriendLookWeibo) Reset()         { *m = C2SForbiddenFriendLookWeibo{} }
func (m *C2SForbiddenFriendLookWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SForbiddenFriendLookWeibo) ProtoMessage()    {}
func (*C2SForbiddenFriendLookWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{178}
}
func (m *C2SForbiddenFriendLookWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SForbiddenFriendLookWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SForbiddenFriendLookWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SForbiddenFriendLookWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SForbiddenFriendLookWeibo.Merge(m, src)
}
func (m *C2SForbiddenFriendLookWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SForbiddenFriendLookWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SForbiddenFriendLookWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SForbiddenFriendLookWeibo proto.InternalMessageInfo

func (m *C2SForbiddenFriendLookWeibo) GetFriendIds() []int64 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

func (m *C2SForbiddenFriendLookWeibo) GetBForbidden() bool {
	if m != nil {
		return m.BForbidden
	}
	return false
}

type S2CForbiddenFriendLookWeibo struct {
	// 服务端返回所有的好友 id 集合, 这些好友不能看我的朋友圈
	FriendBriefInfos     []*UserBriefInfo `protobuf:"bytes,1,rep,name=friendBriefInfos,proto3" json:"friendBriefInfos,omitempty"`
	Ret                  string           `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2CForbiddenFriendLookWeibo) Reset()         { *m = S2CForbiddenFriendLookWeibo{} }
func (m *S2CForbiddenFriendLookWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CForbiddenFriendLookWeibo) ProtoMessage()    {}
func (*S2CForbiddenFriendLookWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{179}
}
func (m *S2CForbiddenFriendLookWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CForbiddenFriendLookWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CForbiddenFriendLookWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CForbiddenFriendLookWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CForbiddenFriendLookWeibo.Merge(m, src)
}
func (m *S2CForbiddenFriendLookWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CForbiddenFriendLookWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CForbiddenFriendLookWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CForbiddenFriendLookWeibo proto.InternalMessageInfo

func (m *S2CForbiddenFriendLookWeibo) GetFriendBriefInfos() []*UserBriefInfo {
	if m != nil {
		return m.FriendBriefInfos
	}
	return nil
}

func (m *S2CForbiddenFriendLookWeibo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 设置是否允许陌生人查看自己的10条朋友圈
type C2SAllowStrangerLookWeibo struct {
	// allow = true 表示允许陌生人查看自己朋友圈，反之，不允许
	Allow                bool     `protobuf:"varint,1,opt,name=allow,proto3" json:"allow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SAllowStrangerLookWeibo) Reset()         { *m = C2SAllowStrangerLookWeibo{} }
func (m *C2SAllowStrangerLookWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SAllowStrangerLookWeibo) ProtoMessage()    {}
func (*C2SAllowStrangerLookWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{180}
}
func (m *C2SAllowStrangerLookWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SAllowStrangerLookWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SAllowStrangerLookWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SAllowStrangerLookWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SAllowStrangerLookWeibo.Merge(m, src)
}
func (m *C2SAllowStrangerLookWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SAllowStrangerLookWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SAllowStrangerLookWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SAllowStrangerLookWeibo proto.InternalMessageInfo

func (m *C2SAllowStrangerLookWeibo) GetAllow() bool {
	if m != nil {
		return m.Allow
	}
	return false
}

type S2CAllowStrangerLookWeibo struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CAllowStrangerLookWeibo) Reset()         { *m = S2CAllowStrangerLookWeibo{} }
func (m *S2CAllowStrangerLookWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CAllowStrangerLookWeibo) ProtoMessage()    {}
func (*S2CAllowStrangerLookWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{181}
}
func (m *S2CAllowStrangerLookWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CAllowStrangerLookWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CAllowStrangerLookWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CAllowStrangerLookWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CAllowStrangerLookWeibo.Merge(m, src)
}
func (m *S2CAllowStrangerLookWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CAllowStrangerLookWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CAllowStrangerLookWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CAllowStrangerLookWeibo proto.InternalMessageInfo

func (m *S2CAllowStrangerLookWeibo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 获取是否允许陌生人查看朋友圈开关
type C2SIsAllowStrangerLookWeibo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SIsAllowStrangerLookWeibo) Reset()         { *m = C2SIsAllowStrangerLookWeibo{} }
func (m *C2SIsAllowStrangerLookWeibo) String() string { return proto.CompactTextString(m) }
func (*C2SIsAllowStrangerLookWeibo) ProtoMessage()    {}
func (*C2SIsAllowStrangerLookWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{182}
}
func (m *C2SIsAllowStrangerLookWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SIsAllowStrangerLookWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SIsAllowStrangerLookWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SIsAllowStrangerLookWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SIsAllowStrangerLookWeibo.Merge(m, src)
}
func (m *C2SIsAllowStrangerLookWeibo) XXX_Size() int {
	return m.Size()
}
func (m *C2SIsAllowStrangerLookWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SIsAllowStrangerLookWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SIsAllowStrangerLookWeibo proto.InternalMessageInfo

type S2CIsAllowStrangerLookWeibo struct {
	// true表示允许
	BAllow               bool     `protobuf:"varint,1,opt,name=bAllow,proto3" json:"bAllow,omitempty"`
	Ret                  string   `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CIsAllowStrangerLookWeibo) Reset()         { *m = S2CIsAllowStrangerLookWeibo{} }
func (m *S2CIsAllowStrangerLookWeibo) String() string { return proto.CompactTextString(m) }
func (*S2CIsAllowStrangerLookWeibo) ProtoMessage()    {}
func (*S2CIsAllowStrangerLookWeibo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{183}
}
func (m *S2CIsAllowStrangerLookWeibo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CIsAllowStrangerLookWeibo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CIsAllowStrangerLookWeibo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CIsAllowStrangerLookWeibo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CIsAllowStrangerLookWeibo.Merge(m, src)
}
func (m *S2CIsAllowStrangerLookWeibo) XXX_Size() int {
	return m.Size()
}
func (m *S2CIsAllowStrangerLookWeibo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CIsAllowStrangerLookWeibo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CIsAllowStrangerLookWeibo proto.InternalMessageInfo

func (m *S2CIsAllowStrangerLookWeibo) GetBAllow() bool {
	if m != nil {
		return m.BAllow
	}
	return false
}

func (m *S2CIsAllowStrangerLookWeibo) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 获取允许好友查看朋友圈时间范围
type C2SGetFriendLookWeiboStrategy struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SGetFriendLookWeiboStrategy) Reset()         { *m = C2SGetFriendLookWeiboStrategy{} }
func (m *C2SGetFriendLookWeiboStrategy) String() string { return proto.CompactTextString(m) }
func (*C2SGetFriendLookWeiboStrategy) ProtoMessage()    {}
func (*C2SGetFriendLookWeiboStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{184}
}
func (m *C2SGetFriendLookWeiboStrategy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SGetFriendLookWeiboStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SGetFriendLookWeiboStrategy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SGetFriendLookWeiboStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SGetFriendLookWeiboStrategy.Merge(m, src)
}
func (m *C2SGetFriendLookWeiboStrategy) XXX_Size() int {
	return m.Size()
}
func (m *C2SGetFriendLookWeiboStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SGetFriendLookWeiboStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_C2SGetFriendLookWeiboStrategy proto.InternalMessageInfo

type S2CGetFriendLookWeiboStrategy struct {
	Strategy             FriendLookWeiboStrategy `protobuf:"varint,1,opt,name=strategy,proto3,enum=msg_struct.FriendLookWeiboStrategy" json:"strategy,omitempty"`
	Ret                  string                  `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *S2CGetFriendLookWeiboStrategy) Reset()         { *m = S2CGetFriendLookWeiboStrategy{} }
func (m *S2CGetFriendLookWeiboStrategy) String() string { return proto.CompactTextString(m) }
func (*S2CGetFriendLookWeiboStrategy) ProtoMessage()    {}
func (*S2CGetFriendLookWeiboStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{185}
}
func (m *S2CGetFriendLookWeiboStrategy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CGetFriendLookWeiboStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CGetFriendLookWeiboStrategy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CGetFriendLookWeiboStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CGetFriendLookWeiboStrategy.Merge(m, src)
}
func (m *S2CGetFriendLookWeiboStrategy) XXX_Size() int {
	return m.Size()
}
func (m *S2CGetFriendLookWeiboStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CGetFriendLookWeiboStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_S2CGetFriendLookWeiboStrategy proto.InternalMessageInfo

func (m *S2CGetFriendLookWeiboStrategy) GetStrategy() FriendLookWeiboStrategy {
	if m != nil {
		return m.Strategy
	}
	return FriendLookWeiboStrategy_undefined
}

func (m *S2CGetFriendLookWeiboStrategy) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 设置允许朋友查看自己朋友圈的范围
type C2SFriendLookWeiboStrategy struct {
	Strategy             FriendLookWeiboStrategy `protobuf:"varint,1,opt,name=strategy,proto3,enum=msg_struct.FriendLookWeiboStrategy" json:"strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *C2SFriendLookWeiboStrategy) Reset()         { *m = C2SFriendLookWeiboStrategy{} }
func (m *C2SFriendLookWeiboStrategy) String() string { return proto.CompactTextString(m) }
func (*C2SFriendLookWeiboStrategy) ProtoMessage()    {}
func (*C2SFriendLookWeiboStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{186}
}
func (m *C2SFriendLookWeiboStrategy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SFriendLookWeiboStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SFriendLookWeiboStrategy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SFriendLookWeiboStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SFriendLookWeiboStrategy.Merge(m, src)
}
func (m *C2SFriendLookWeiboStrategy) XXX_Size() int {
	return m.Size()
}
func (m *C2SFriendLookWeiboStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SFriendLookWeiboStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_C2SFriendLookWeiboStrategy proto.InternalMessageInfo

func (m *C2SFriendLookWeiboStrategy) GetStrategy() FriendLookWeiboStrategy {
	if m != nil {
		return m.Strategy
	}
	return FriendLookWeiboStrategy_undefined
}

type S2CFriendLookWeiboStrategy struct {
	Ret                  string   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CFriendLookWeiboStrategy) Reset()         { *m = S2CFriendLookWeiboStrategy{} }
func (m *S2CFriendLookWeiboStrategy) String() string { return proto.CompactTextString(m) }
func (*S2CFriendLookWeiboStrategy) ProtoMessage()    {}
func (*S2CFriendLookWeiboStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{187}
}
func (m *S2CFriendLookWeiboStrategy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CFriendLookWeiboStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CFriendLookWeiboStrategy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CFriendLookWeiboStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CFriendLookWeiboStrategy.Merge(m, src)
}
func (m *S2CFriendLookWeiboStrategy) XXX_Size() int {
	return m.Size()
}
func (m *S2CFriendLookWeiboStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CFriendLookWeiboStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_S2CFriendLookWeiboStrategy proto.InternalMessageInfo

func (m *S2CFriendLookWeiboStrategy) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 获取不看好友朋友圈的好友列表
type C2SGetDontLookFriendWeiboList struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SGetDontLookFriendWeiboList) Reset()         { *m = C2SGetDontLookFriendWeiboList{} }
func (m *C2SGetDontLookFriendWeiboList) String() string { return proto.CompactTextString(m) }
func (*C2SGetDontLookFriendWeiboList) ProtoMessage()    {}
func (*C2SGetDontLookFriendWeiboList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{188}
}
func (m *C2SGetDontLookFriendWeiboList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SGetDontLookFriendWeiboList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SGetDontLookFriendWeiboList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SGetDontLookFriendWeiboList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SGetDontLookFriendWeiboList.Merge(m, src)
}
func (m *C2SGetDontLookFriendWeiboList) XXX_Size() int {
	return m.Size()
}
func (m *C2SGetDontLookFriendWeiboList) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SGetDontLookFriendWeiboList.DiscardUnknown(m)
}

var xxx_messageInfo_C2SGetDontLookFriendWeiboList proto.InternalMessageInfo

type S2CGetDontLookFriendWeiboList struct {
	FriendBriefInfo      []*UserBriefInfo `protobuf:"bytes,1,rep,name=friendBriefInfo,proto3" json:"friendBriefInfo,omitempty"`
	Ret                  string           `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2CGetDontLookFriendWeiboList) Reset()         { *m = S2CGetDontLookFriendWeiboList{} }
func (m *S2CGetDontLookFriendWeiboList) String() string { return proto.CompactTextString(m) }
func (*S2CGetDontLookFriendWeiboList) ProtoMessage()    {}
func (*S2CGetDontLookFriendWeiboList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{189}
}
func (m *S2CGetDontLookFriendWeiboList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CGetDontLookFriendWeiboList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CGetDontLookFriendWeiboList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CGetDontLookFriendWeiboList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CGetDontLookFriendWeiboList.Merge(m, src)
}
func (m *S2CGetDontLookFriendWeiboList) XXX_Size() int {
	return m.Size()
}
func (m *S2CGetDontLookFriendWeiboList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CGetDontLookFriendWeiboList.DiscardUnknown(m)
}

var xxx_messageInfo_S2CGetDontLookFriendWeiboList proto.InternalMessageInfo

func (m *S2CGetDontLookFriendWeiboList) GetFriendBriefInfo() []*UserBriefInfo {
	if m != nil {
		return m.FriendBriefInfo
	}
	return nil
}

func (m *S2CGetDontLookFriendWeiboList) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

// 获取禁止好友看我朋友圈的好友列表
type C2SGetForbiddenFriendLookWeiboList struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SGetForbiddenFriendLookWeiboList) Reset()         { *m = C2SGetForbiddenFriendLookWeiboList{} }
func (m *C2SGetForbiddenFriendLookWeiboList) String() string { return proto.CompactTextString(m) }
func (*C2SGetForbiddenFriendLookWeiboList) ProtoMessage()    {}
func (*C2SGetForbiddenFriendLookWeiboList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{190}
}
func (m *C2SGetForbiddenFriendLookWeiboList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SGetForbiddenFriendLookWeiboList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SGetForbiddenFriendLookWeiboList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SGetForbiddenFriendLookWeiboList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SGetForbiddenFriendLookWeiboList.Merge(m, src)
}
func (m *C2SGetForbiddenFriendLookWeiboList) XXX_Size() int {
	return m.Size()
}
func (m *C2SGetForbiddenFriendLookWeiboList) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SGetForbiddenFriendLookWeiboList.DiscardUnknown(m)
}

var xxx_messageInfo_C2SGetForbiddenFriendLookWeiboList proto.InternalMessageInfo

type S2CGetForbiddenFriendLookWeiboList struct {
	FriendBriefInfo      []*UserBriefInfo `protobuf:"bytes,1,rep,name=friendBriefInfo,proto3" json:"friendBriefInfo,omitempty"`
	Ret                  string           `protobuf:"bytes,2,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2CGetForbiddenFriendLookWeiboList) Reset()         { *m = S2CGetForbiddenFriendLookWeiboList{} }
func (m *S2CGetForbiddenFriendLookWeiboList) String() string { return proto.CompactTextString(m) }
func (*S2CGetForbiddenFriendLookWeiboList) ProtoMessage()    {}
func (*S2CGetForbiddenFriendLookWeiboList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{191}
}
func (m *S2CGetForbiddenFriendLookWeiboList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CGetForbiddenFriendLookWeiboList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CGetForbiddenFriendLookWeiboList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CGetForbiddenFriendLookWeiboList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CGetForbiddenFriendLookWeiboList.Merge(m, src)
}
func (m *S2CGetForbiddenFriendLookWeiboList) XXX_Size() int {
	return m.Size()
}
func (m *S2CGetForbiddenFriendLookWeiboList) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CGetForbiddenFriendLookWeiboList.DiscardUnknown(m)
}

var xxx_messageInfo_S2CGetForbiddenFriendLookWeiboList proto.InternalMessageInfo

func (m *S2CGetForbiddenFriendLookWeiboList) GetFriendBriefInfo() []*UserBriefInfo {
	if m != nil {
		return m.FriendBriefInfo
	}
	return nil
}

func (m *S2CGetForbiddenFriendLookWeiboList) GetRet() string {
	if m != nil {
		return m.Ret
	}
	return ""
}

type C2SWithdrawMessage struct {
	// 已发送消息的服务端时间戳, ( 系统当前时间的纳秒值 / 1000 )
	ServerTimeStamp      int64    `protobuf:"varint,1,opt,name=serverTimeStamp,proto3" json:"serverTimeStamp,omitempty"`
	ReceiverId           int64    `protobuf:"varint,2,opt,name=receiverId,proto3" json:"receiverId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SWithdrawMessage) Reset()         { *m = C2SWithdrawMessage{} }
func (m *C2SWithdrawMessage) String() string { return proto.CompactTextString(m) }
func (*C2SWithdrawMessage) ProtoMessage()    {}
func (*C2SWithdrawMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{192}
}
func (m *C2SWithdrawMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SWithdrawMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SWithdrawMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SWithdrawMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SWithdrawMessage.Merge(m, src)
}
func (m *C2SWithdrawMessage) XXX_Size() int {
	return m.Size()
}
func (m *C2SWithdrawMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SWithdrawMessage.DiscardUnknown(m)
}

var xxx_messageInfo_C2SWithdrawMessage proto.InternalMessageInfo

func (m *C2SWithdrawMessage) GetServerTimeStamp() int64 {
	if m != nil {
		return m.ServerTimeStamp
	}
	return 0
}

func (m *C2SWithdrawMessage) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

type S2CWithdrawMessage struct {
	ServerTimeStamp      int64    `protobuf:"varint,1,opt,name=serverTimeStamp,proto3" json:"serverTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CWithdrawMessage) Reset()         { *m = S2CWithdrawMessage{} }
func (m *S2CWithdrawMessage) String() string { return proto.CompactTextString(m) }
func (*S2CWithdrawMessage) ProtoMessage()    {}
func (*S2CWithdrawMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{193}
}
func (m *S2CWithdrawMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CWithdrawMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CWithdrawMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CWithdrawMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CWithdrawMessage.Merge(m, src)
}
func (m *S2CWithdrawMessage) XXX_Size() int {
	return m.Size()
}
func (m *S2CWithdrawMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CWithdrawMessage.DiscardUnknown(m)
}

var xxx_messageInfo_S2CWithdrawMessage proto.InternalMessageInfo

func (m *S2CWithdrawMessage) GetServerTimeStamp() int64 {
	if m != nil {
		return m.ServerTimeStamp
	}
	return 0
}

type C2SThirdPlatformAccountLogin struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	TerminalType         int32    `protobuf:"varint,2,opt,name=terminalType,proto3" json:"terminalType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SThirdPlatformAccountLogin) Reset()         { *m = C2SThirdPlatformAccountLogin{} }
func (m *C2SThirdPlatformAccountLogin) String() string { return proto.CompactTextString(m) }
func (*C2SThirdPlatformAccountLogin) ProtoMessage()    {}
func (*C2SThirdPlatformAccountLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{194}
}
func (m *C2SThirdPlatformAccountLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2SThirdPlatformAccountLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2SThirdPlatformAccountLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2SThirdPlatformAccountLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SThirdPlatformAccountLogin.Merge(m, src)
}
func (m *C2SThirdPlatformAccountLogin) XXX_Size() int {
	return m.Size()
}
func (m *C2SThirdPlatformAccountLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SThirdPlatformAccountLogin.DiscardUnknown(m)
}

var xxx_messageInfo_C2SThirdPlatformAccountLogin proto.InternalMessageInfo

func (m *C2SThirdPlatformAccountLogin) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2SThirdPlatformAccountLogin) GetTerminalType() int32 {
	if m != nil {
		return m.TerminalType
	}
	return 0
}

type S2CThirdPlatformAccountLogin struct {
	AccountId int64 `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// 角色名
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 收到的最后一条私聊消息的时间戳
	LastMsgTimestamp     int64    `protobuf:"varint,3,opt,name=lastMsgTimestamp,proto3" json:"lastMsgTimestamp,omitempty"`
	AgentId              int64    `protobuf:"varint,4,opt,name=agentId,proto3" json:"agentId,omitempty"`
	AgentNickname        string   `protobuf:"bytes,5,opt,name=agentNickname,proto3" json:"agentNickname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CThirdPlatformAccountLogin) Reset()         { *m = S2CThirdPlatformAccountLogin{} }
func (m *S2CThirdPlatformAccountLogin) String() string { return proto.CompactTextString(m) }
func (*S2CThirdPlatformAccountLogin) ProtoMessage()    {}
func (*S2CThirdPlatformAccountLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062bba53607901, []int{195}
}
func (m *S2CThirdPlatformAccountLogin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2CThirdPlatformAccountLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2CThirdPlatformAccountLogin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2CThirdPlatformAccountLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CThirdPlatformAccountLogin.Merge(m, src)
}
func (m *S2CThirdPlatformAccountLogin) XXX_Size() int {
	return m.Size()
}
func (m *S2CThirdPlatformAccountLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CThirdPlatformAccountLogin.DiscardUnknown(m)
}

var xxx_messageInfo_S2CThirdPlatformAccountLogin proto.InternalMessageInfo

func (m *S2CThirdPlatformAccountLogin) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *S2CThirdPlatformAccountLogin) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *S2CThirdPlatformAccountLogin) GetLastMsgTimestamp() int64 {
	if m != nil {
		return m.LastMsgTimestamp
	}
	return 0
}

func (m *S2CThirdPlatformAccountLogin) GetAgentId() int64 {
	if m != nil {
		return m.AgentId
	}
	return 0
}

func (m *S2CThirdPlatformAccountLogin) GetAgentNickname() string {
	if m != nil {
		return m.AgentNickname
	}
	return ""
}

func init() {
	proto.RegisterEnum("msg_struct.VerificationCodeAction", VerificationCodeAction_name, VerificationCodeAction_value)
	proto.RegisterEnum("msg_struct.FriendLookWeiboStrategy", FriendLookWeiboStrategy_name, FriendLookWeiboStrategy_value)
	proto.RegisterType((*WebSocketMessage)(nil), "msg_struct.WebSocketMessage")
	proto.RegisterType((*S2CErrorCode)(nil), "msg_struct.S2CErrorCode")
	proto.RegisterType((*C2LGateAddr)(nil), "msg_struct.C2l_gate_addr")
	proto.RegisterType((*L2CGateAddr)(nil), "msg_struct.L2c_gate_addr")
	proto.RegisterType((*C2SRegisterAccount)(nil), "msg_struct.C2SRegisterAccount")
	proto.RegisterType((*S2CRegisterAccount)(nil), "msg_struct.S2CRegisterAccount")
	proto.RegisterType((*C2SLogin)(nil), "msg_struct.C2SLogin")
	proto.RegisterType((*C2SUsernameLogin)(nil), "msg_struct.C2SUsernameLogin")
	proto.RegisterType((*UserBriefInfo)(nil), "msg_struct.UserBriefInfo")
	proto.RegisterType((*FriendRequest)(nil), "msg_struct.FriendRequest")
	proto.RegisterType((*FriendVerification)(nil), "msg_struct.FriendVerification")
	proto.RegisterType((*ChatGroupMember)(nil), "msg_struct.ChatGroupMember")
	proto.RegisterType((*FriendInfo)(nil), "msg_struct.FriendInfo")
	proto.RegisterType((*ChatGroup)(nil), "msg_struct.ChatGroup")
	proto.RegisterType((*PersonChatGroup)(nil), "msg_struct.PersonChatGroup")
	proto.RegisterType((*HuanXinAccount)(nil), "msg_struct.HuanXinAccount")
	proto.RegisterType((*S2CLogin)(nil), "msg_struct.S2CLogin")
	proto.RegisterType((*S2CUsernameLogin)(nil), "msg_struct.S2CUsernameLogin")
	proto.RegisterType((*AgentInfo)(nil), "msg_struct.AgentInfo")
	proto.RegisterType((*C2SLogout)(nil), "msg_struct.C2SLogout")
	proto.RegisterType((*S2CLogout)(nil), "msg_struct.S2CLogout")
	proto.RegisterType((*C2SHeartbeat)(nil), "msg_struct.C2SHeartbeat")
	proto.RegisterType((*S2CHeartbeat)(nil), "msg_struct.S2CHeartbeat")
	proto.RegisterType((*S2CKick)(nil), "msg_struct.S2CKick")
	proto.RegisterType((*S2CRepeatLogin)(nil), "msg_struct.S2CRepeatLogin")
	proto.RegisterType((*C2SRename)(nil), "msg_struct.C2SRename")
	proto.RegisterType((*S2CRename)(nil), "msg_struct.S2CRename")
	proto.RegisterType((*DeviceInfo)(nil), "msg_struct.DeviceInfo")
	proto.RegisterType((*C2SDeviceInfo)(nil), "msg_struct.C2SDeviceInfo")
	proto.RegisterType((*S2CDeviceInfo)(nil), "msg_struct.S2CDeviceInfo")
	proto.RegisterType((*C2SSetUserName)(nil), "msg_struct.C2SSetUserName")
	proto.RegisterType((*S2CSetUserName)(nil), "msg_struct.S2CSetUserName")
	proto.RegisterType((*C2SSetHeadPortrait)(nil), "msg_struct.C2SSetHeadPortrait")
	proto.RegisterType((*S2CSetHeadPortrait)(nil), "msg_struct.S2CSetHeadPortrait")
	proto.RegisterType((*C2SChangePassword)(nil), "msg_struct.C2SChangePassword")
	proto.RegisterType((*S2CChangePassword)(nil), "msg_struct.S2CChangePassword")
	proto.RegisterType((*C2SForgetPassword)(nil), "msg_struct.C2SForgetPassword")
	proto.RegisterType((*S2CForgetPassword)(nil), "msg_struct.S2CForgetPassword")
	proto.RegisterType((*C2SSetFriendRemarkName)(nil), "msg_struct.C2SSetFriendRemarkName")
	proto.RegisterType((*S2CSetFriendRemarkName)(nil), "msg_struct.S2CSetFriendRemarkName")
	proto.RegisterType((*C2SGetVerificationCode)(nil), "msg_struct.C2SGetVerificationCode")
	proto.RegisterType((*S2CGetVerificationCode)(nil), "msg_struct.S2CGetVerificationCode")
	proto.RegisterType((*VoiceMessage)(nil), "msg_struct.VoiceMessage")
	proto.RegisterType((*VideoMessage)(nil), "msg_struct.VideoMessage")
	proto.RegisterType((*FileMessage)(nil), "msg_struct.FileMessage")
	proto.RegisterType((*CardMessage)(nil), "msg_struct.CardMessage")
	proto.RegisterType((*ChatMessage)(nil), "msg_struct.ChatMessage")
	proto.RegisterType((*C2SPrivateChat)(nil), "msg_struct.C2SPrivateChat")
	proto.RegisterType((*MQPrivateChat)(nil), "msg_struct.MQPrivateChat")
	proto.RegisterType((*S2CPrivateChat)(nil), "msg_struct.S2CPrivateChat")
	proto.RegisterType((*S2CRecvPrivateChat)(nil), "msg_struct.S2CRecvPrivateChat")
	proto.RegisterType((*S2COtherTerminalPrivateChat)(nil), "msg_struct.S2COtherTerminalPrivateChat")
	proto.RegisterType((*S2CLoginSomewhereElse)(nil), "msg_struct.S2CLoginSomewhereElse")
	proto.RegisterType((*C2SLastMsgTimeStamp)(nil), "msg_struct.C2SLastMsgTimeStamp")
	proto.RegisterType((*C2SGetOfflinePrivateChatMsg)(nil), "msg_struct.C2SGetOfflinePrivateChatMsg")
	proto.RegisterType((*S2CGetOfflinePrivateChatMsg)(nil), "msg_struct.S2CGetOfflinePrivateChatMsg")
	proto.RegisterType((*C2SHuanXinPush)(nil), "msg_struct.C2SHuanXinPush")
	proto.RegisterType((*S2CHuanXinPush)(nil), "msg_struct.S2CHuanXinPush")
	proto.RegisterType((*C2SPicWillBeSend)(nil), "msg_struct.C2SPicWillBeSend")
	proto.RegisterType((*S2CPicWillBeSend)(nil), "msg_struct.S2CPicWillBeSend")
	proto.RegisterType((*C2SAddFriend)(nil), "msg_struct.C2SAddFriend")
	proto.RegisterType((*MQAddFriend)(nil), "msg_struct.MQAddFriend")
	proto.RegisterType((*S2CAddFriend)(nil), "msg_struct.S2CAddFriend")
	proto.RegisterType((*S2CRecvAddFriend)(nil), "msg_struct.S2CRecvAddFriend")
	proto.RegisterType((*C2SAgreeBecomeFriend)(nil), "msg_struct.C2SAgreeBecomeFriend")
	proto.RegisterType((*S2CAgreeBecomeFriend)(nil), "msg_struct.S2CAgreeBecomeFriend")
	proto.RegisterType((*S2CRecvAgreeBecomeFriend)(nil), "msg_struct.S2CRecvAgreeBecomeFriend")
	proto.RegisterType((*MQAgreeBecomeFriend)(nil), "msg_struct.MQAgreeBecomeFriend")
	proto.RegisterType((*S2COtherTerminalAgreeBecomeFriend)(nil), "msg_struct.S2COtherTerminalAgreeBecomeFriend")
	proto.RegisterType((*C2SReadFriendReq)(nil), "msg_struct.C2SReadFriendReq")
	proto.RegisterType((*S2CReadFriendReq)(nil), "msg_struct.S2CReadFriendReq")
	proto.RegisterType((*C2SDeleteFriend)(nil), "msg_struct.C2SDeleteFriend")
	proto.RegisterType((*MQDeleteFriend)(nil), "msg_struct.MQDeleteFriend")
	proto.RegisterType((*S2CDeleteFriend)(nil), "msg_struct.S2CDeleteFriend")
	proto.RegisterType((*S2CRecvDeleteFriend)(nil), "msg_struct.S2CRecvDeleteFriend")
	proto.RegisterType((*C2SConfirmDeleteFriend)(nil), "msg_struct.C2SConfirmDeleteFriend")
	proto.RegisterType((*S2CConfirmDeleteFriend)(nil), "msg_struct.S2CConfirmDeleteFriend")
	proto.RegisterType((*C2SCreateChatGroup)(nil), "msg_struct.C2SCreateChatGroup")
	proto.RegisterType((*CreateChatGroup)(nil), "msg_struct.CreateChatGroup")
	proto.RegisterType((*S2CCreateChatGroup)(nil), "msg_struct.S2CCreateChatGroup")
	proto.RegisterType((*MQCreateChatGroup)(nil), "msg_struct.MQCreateChatGroup")
	proto.RegisterType((*S2CRecvCreateChatGroup)(nil), "msg_struct.S2CRecvCreateChatGroup")
	proto.RegisterType((*ReqJoinChatGroup)(nil), "msg_struct.ReqJoinChatGroup")
	proto.RegisterType((*C2SReqJoinChatGroup)(nil), "msg_struct.C2SReqJoinChatGroup")
	proto.RegisterType((*S2CRecvReqJoinChatGroup)(nil), "msg_struct.S2CRecvReqJoinChatGroup")
	proto.RegisterType((*MQReqJoinChatGroup)(nil), "msg_struct.MQReqJoinChatGroup")
	proto.RegisterType((*S2CSomeOneReqJoinChatGroup)(nil), "msg_struct.S2CSomeOneReqJoinChatGroup")
	proto.RegisterType((*C2SAgreeSomeOneReqJoinChatGroup)(nil), "msg_struct.C2SAgreeSomeOneReqJoinChatGroup")
	proto.RegisterType((*MQAgreeSomeOneReqJoinChatGroup)(nil), "msg_struct.MQAgreeSomeOneReqJoinChatGroup")
	proto.RegisterType((*MQManagerAgreeSomeOneReqJoinChatGroup)(nil), "msg_struct.MQManagerAgreeSomeOneReqJoinChatGroup")
	proto.RegisterType((*S2CManagerAgreeJoinChatGroup)(nil), "msg_struct.S2CManagerAgreeJoinChatGroup")
	proto.RegisterType((*S2CManagerAgreeSomeOneReqJoinChatGroup)(nil), "msg_struct.S2CManagerAgreeSomeOneReqJoinChatGroup")
	proto.RegisterType((*S2CRecvManagerAgreeSomeOneReqJoinChatGroup)(nil), "msg_struct.S2CRecvManagerAgreeSomeOneReqJoinChatGroup")
	proto.RegisterType((*C2SRefuseSomeOneReqJoinChatGroup)(nil), "msg_struct.C2SRefuseSomeOneReqJoinChatGroup")
	proto.RegisterType((*MQRefuseSomeOneReqJoinChatGroup)(nil), "msg_struct.MQRefuseSomeOneReqJoinChatGroup")
	proto.RegisterType((*S2CManagerRefuseJoinChatGroup)(nil), "msg_struct.S2CManagerRefuseJoinChatGroup")
	proto.RegisterType((*ChatGroupMemberRds)(nil), "msg_struct.ChatGroupMemberRds")
	proto.RegisterType((*C2SChatGroupInfo)(nil), "msg_struct.C2SChatGroupInfo")
	proto.RegisterType((*S2CChatGroupInfo)(nil), "msg_struct.S2CChatGroupInfo")
	proto.RegisterType((*InviteJoinChatGroup)(nil), "msg_struct.InviteJoinChatGroup")
	proto.RegisterType((*C2SInviteJoinChatGroup)(nil), "msg_struct.C2SInviteJoinChatGroup")
	proto.RegisterType((*MQInviteJoinChatGroup)(nil), "msg_struct.MQInviteJoinChatGroup")
	proto.RegisterType((*S2CInviteYouJoinChatGroup)(nil), "msg_struct.S2CInviteYouJoinChatGroup")
	proto.RegisterType((*S2CRecvInviteJoinChatGroup)(nil), "msg_struct.S2CRecvInviteJoinChatGroup")
	proto.RegisterType((*C2SCancelChatGroup)(nil), "msg_struct.C2SCancelChatGroup")
	proto.RegisterType((*CancelChatGroup)(nil), "msg_struct.CancelChatGroup")
	proto.RegisterType((*MQCancelChatGroup)(nil), "msg_struct.MQCancelChatGroup")
	proto.RegisterType((*S2CSomeOneCancelChatGroup)(nil), "msg_struct.S2CSomeOneCancelChatGroup")
	proto.RegisterType((*S2CRecvCancelChatGroup)(nil), "msg_struct.S2CRecvCancelChatGroup")
	proto.RegisterType((*C2SUnChatGroup)(nil), "msg_struct.C2SUnChatGroup")
	proto.RegisterType((*MQUnChatGroup)(nil), "msg_struct.MQUnChatGroup")
	proto.RegisterType((*S2CUnChatGroup)(nil), "msg_struct.S2CUnChatGroup")
	proto.RegisterType((*S2CRecvUnChatGroup)(nil), "msg_struct.S2CRecvUnChatGroup")
	proto.RegisterType((*ChatGroupKick)(nil), "msg_struct.ChatGroupKick")
	proto.RegisterType((*C2SChatGroupKick)(nil), "msg_struct.C2SChatGroupKick")
	proto.RegisterType((*MQChatGroupKick)(nil), "msg_struct.MQChatGroupKick")
	proto.RegisterType((*S2CKickedByChatGroupManager)(nil), "msg_struct.S2CKickedByChatGroupManager")
	proto.RegisterType((*S2CManagerKickSomeOne)(nil), "msg_struct.S2CManagerKickSomeOne")
	proto.RegisterType((*S2CRecvChatGroupKick)(nil), "msg_struct.S2CRecvChatGroupKick")
	proto.RegisterType((*C2SChatGroupList)(nil), "msg_struct.C2SChatGroupList")
	proto.RegisterType((*S2CChatGroupList)(nil), "msg_struct.S2CChatGroupList")
	proto.RegisterType((*GroupMessage)(nil), "msg_struct.GroupMessage")
	proto.RegisterType((*C2SGroupChat)(nil), "msg_struct.C2SGroupChat")
	proto.RegisterType((*MQGroupChat)(nil), "msg_struct.MQGroupChat")
	proto.RegisterType((*S2CGroupChat)(nil), "msg_struct.S2CGroupChat")
	proto.RegisterType((*S2CRecvGroupChat)(nil), "msg_struct.S2CRecvGroupChat")
	proto.RegisterType((*C2SChatGroupLastMsgTimeStamp)(nil), "msg_struct.C2SChatGroupLastMsgTimeStamp")
	proto.RegisterType((*C2SGetOfflineGroupChatMsg)(nil), "msg_struct.C2SGetOfflineGroupChatMsg")
	proto.RegisterType((*S2CGetOfflineGroupChatMsg)(nil), "msg_struct.S2CGetOfflineGroupChatMsg")
	proto.RegisterType((*C2SWithdrawGroupMessage)(nil), "msg_struct.C2SWithdrawGroupMessage")
	proto.RegisterType((*S2CWithdrawGroupMessage)(nil), "msg_struct.S2CWithdrawGroupMessage")
	proto.RegisterType((*C2SFindUser)(nil), "msg_struct.C2SFindUser")
	proto.RegisterType((*S2CFindUser)(nil), "msg_struct.S2CFindUser")
	proto.RegisterType((*C2SAddBlackList)(nil), "msg_struct.C2SAddBlackList")
	proto.RegisterType((*S2CAddBlackList)(nil), "msg_struct.S2CAddBlackList")
	proto.RegisterType((*C2SMoveOutFriendBlackList)(nil), "msg_struct.C2SMoveOutFriendBlackList")
	proto.RegisterType((*S2CMoveOutFriendBlackList)(nil), "msg_struct.S2CMoveOutFriendBlackList")
	proto.RegisterType((*C2SGetFriendBlackList)(nil), "msg_struct.C2SGetFriendBlackList")
	proto.RegisterType((*S2CGetFriendBlackList)(nil), "msg_struct.S2CGetFriendBlackList")
	proto.RegisterType((*C2SSetWeiboCover)(nil), "msg_struct.C2SSetWeiboCover")
	proto.RegisterType((*S2CSetWeiboCover)(nil), "msg_struct.S2CSetWeiboCover")
	proto.RegisterType((*C2SGetWeiboCover)(nil), "msg_struct.C2SGetWeiboCover")
	proto.RegisterType((*S2CGetWeiboCover)(nil), "msg_struct.S2CGetWeiboCover")
	proto.RegisterType((*C2SLikeFriendWeiboCover)(nil), "msg_struct.C2SLikeFriendWeiboCover")
	proto.RegisterType((*S2CLikeFriendWeiboCover)(nil), "msg_struct.S2CLikeFriendWeiboCover")
	proto.RegisterType((*Weibo)(nil), "msg_struct.Weibo")
	proto.RegisterType((*WeiboUrl)(nil), "msg_struct.WeiboUrl")
	proto.RegisterType((*C2SPublishWeibo)(nil), "msg_struct.C2SPublishWeibo")
	proto.RegisterType((*MQPublishWeibo)(nil), "msg_struct.MQPublishWeibo")
	proto.RegisterType((*S2CPublishWeibo)(nil), "msg_struct.S2CPublishWeibo")
	proto.RegisterType((*S2CRecvPublishWeibo)(nil), "msg_struct.S2CRecvPublishWeibo")
	proto.RegisterType((*LikeWeibo)(nil), "msg_struct.LikeWeibo")
	proto.RegisterType((*C2SLikeWeibo)(nil), "msg_struct.C2SLikeWeibo")
	proto.RegisterType((*MQLikeWeibo)(nil), "msg_struct.MQLikeWeibo")
	proto.RegisterType((*S2CLikeWeibo)(nil), "msg_struct.S2CLikeWeibo")
	proto.RegisterType((*S2CRecvLikeWeibo)(nil), "msg_struct.S2CRecvLikeWeibo")
	proto.RegisterType((*C2SCancelLikeWeibo)(nil), "msg_struct.C2SCancelLikeWeibo")
	proto.RegisterType((*S2CCancelLikeWeibo)(nil), "msg_struct.S2CCancelLikeWeibo")
	proto.RegisterType((*ReplyWeibo)(nil), "msg_struct.ReplyWeibo")
	proto.RegisterType((*C2SReplyWeibo)(nil), "msg_struct.C2SReplyWeibo")
	proto.RegisterType((*MQReplyWeibo)(nil), "msg_struct.MQReplyWeibo")
	proto.RegisterType((*S2CReplyWeibo)(nil), "msg_struct.S2CReplyWeibo")
	proto.RegisterType((*S2CRecvReplyWeibo)(nil), "msg_struct.S2CRecvReplyWeibo")
	proto.RegisterType((*C2SDeleteWeiboReply)(nil), "msg_struct.C2SDeleteWeiboReply")
	proto.RegisterType((*S2CDeleteWeiboReply)(nil), "msg_struct.S2CDeleteWeiboReply")
	proto.RegisterType((*C2SDeleteWeibo)(nil), "msg_struct.C2SDeleteWeibo")
	proto.RegisterType((*MQDeleteWeibo)(nil), "msg_struct.MQDeleteWeibo")
	proto.RegisterType((*S2CDeleteWeibo)(nil), "msg_struct.S2CDeleteWeibo")
	proto.RegisterType((*S2CRecvDeleteWeibo)(nil), "msg_struct.S2CRecvDeleteWeibo")
	proto.RegisterType((*BrowseWeibo)(nil), "msg_struct.BrowseWeibo")
	proto.RegisterType((*C2SBrowseSomeoneWeibo)(nil), "msg_struct.C2SBrowseSomeoneWeibo")
	proto.RegisterType((*S2CBrowseSomeoneWeibo)(nil), "msg_struct.S2CBrowseSomeoneWeibo")
	proto.RegisterType((*C2SBrowseFriendWeibo)(nil), "msg_struct.C2SBrowseFriendWeibo")
	proto.RegisterType((*S2CBrowseFriendWeibo)(nil), "msg_struct.S2CBrowseFriendWeibo")
	proto.RegisterType((*C2SBrowseAllWeibo)(nil), "msg_struct.C2SBrowseAllWeibo")
	proto.RegisterType((*S2CBrowseAllWeibo)(nil), "msg_struct.S2CBrowseAllWeibo")
	proto.RegisterType((*C2SDontLookFriendWeibo)(nil), "msg_struct.C2SDontLookFriendWeibo")
	proto.RegisterType((*S2CDontLookFriendWeibo)(nil), "msg_struct.S2CDontLookFriendWeibo")
	proto.RegisterType((*C2SForbiddenFriendLookWeibo)(nil), "msg_struct.C2SForbiddenFriendLookWeibo")
	proto.RegisterType((*S2CForbiddenFriendLookWeibo)(nil), "msg_struct.S2CForbiddenFriendLookWeibo")
	proto.RegisterType((*C2SAllowStrangerLookWeibo)(nil), "msg_struct.C2SAllowStrangerLookWeibo")
	proto.RegisterType((*S2CAllowStrangerLookWeibo)(nil), "msg_struct.S2CAllowStrangerLookWeibo")
	proto.RegisterType((*C2SIsAllowStrangerLookWeibo)(nil), "msg_struct.C2SIsAllowStrangerLookWeibo")
	proto.RegisterType((*S2CIsAllowStrangerLookWeibo)(nil), "msg_struct.S2CIsAllowStrangerLookWeibo")
	proto.RegisterType((*C2SGetFriendLookWeiboStrategy)(nil), "msg_struct.C2SGetFriendLookWeiboStrategy")
	proto.RegisterType((*S2CGetFriendLookWeiboStrategy)(nil), "msg_struct.S2CGetFriendLookWeiboStrategy")
	proto.RegisterType((*C2SFriendLookWeiboStrategy)(nil), "msg_struct.C2SFriendLookWeiboStrategy")
	proto.RegisterType((*S2CFriendLookWeiboStrategy)(nil), "msg_struct.S2CFriendLookWeiboStrategy")
	proto.RegisterType((*C2SGetDontLookFriendWeiboList)(nil), "msg_struct.C2SGetDontLookFriendWeiboList")
	proto.RegisterType((*S2CGetDontLookFriendWeiboList)(nil), "msg_struct.S2CGetDontLookFriendWeiboList")
	proto.RegisterType((*C2SGetForbiddenFriendLookWeiboList)(nil), "msg_struct.C2SGetForbiddenFriendLookWeiboList")
	proto.RegisterType((*S2CGetForbiddenFriendLookWeiboList)(nil), "msg_struct.S2CGetForbiddenFriendLookWeiboList")
	proto.RegisterType((*C2SWithdrawMessage)(nil), "msg_struct.C2SWithdrawMessage")
	proto.RegisterType((*S2CWithdrawMessage)(nil), "msg_struct.S2CWithdrawMessage")
	proto.RegisterType((*C2SThirdPlatformAccountLogin)(nil), "msg_struct.C2SThirdPlatformAccountLogin")
	proto.RegisterType((*S2CThirdPlatformAccountLogin)(nil), "msg_struct.S2CThirdPlatformAccountLogin")
}

func init() { proto.RegisterFile("msg_struct.proto", fileDescriptor_f9062bba53607901) }

var fileDescriptor_f9062bba53607901 = []byte{
	// 4475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7c, 0x5f, 0x6f, 0xdc, 0x48,
	0x72, 0xf8, 0x72, 0x46, 0xb2, 0x35, 0x35, 0x1a, 0x69, 0x4c, 0xff, 0x9b, 0xf5, 0xda, 0xb2, 0xae,
	0x7f, 0x5e, 0x9f, 0xa1, 0xb3, 0xfd, 0x5b, 0xcf, 0x6e, 0x9c, 0xf5, 0x6e, 0xb0, 0x1b, 0x89, 0xb6,
	0x65, 0xe7, 0x3c, 0xb6, 0x44, 0xfa, 0xdf, 0x5e, 0x72, 0xeb, 0xe3, 0x0c, 0x7b, 0x46, 0x5c, 0xcd,
	0x90, 0x32, 0xc9, 0x91, 0xe2, 0x24, 0x4f, 0x07, 0x24, 0x77, 0x08, 0x02, 0x04, 0x87, 0x00, 0x49,
	0x5e, 0x13, 0xe0, 0x70, 0x48, 0x3e, 0xc0, 0x3d, 0x04, 0x87, 0x7d, 0x3a, 0x20, 0x41, 0x9e, 0xf2,
	0x98, 0xbc, 0x05, 0x9b, 0x7c, 0x80, 0x7c, 0x84, 0xa0, 0xab, 0x9b, 0x64, 0x37, 0xc9, 0x19, 0xcd,
	0x78, 0xa4, 0x4b, 0x02, 0xdc, 0x1b, 0xbb, 0xba, 0xaa, 0xba, 0xaa, 0xba, 0xba, 0xbb, 0xba, 0x8a,
	0x24, 0xd4, 0x07, 0x61, 0xef, 0x55, 0x18, 0x05, 0xc3, 0x4e, 0x74, 0x73, 0x2f, 0xf0, 0x23, 0x5f,
	0x87, 0x14, 0x42, 0x7e, 0x0f, 0xea, 0x2f, 0x68, 0xdb, 0xf2, 0x3b, 0xbb, 0x34, 0x6a, 0xd1, 0x30,
	0xb4, 0x7b, 0x54, 0x3f, 0x03, 0xf3, 0x83, 0xb0, 0xf7, 0xd0, 0x69, 0x68, 0xab, 0xda, 0xb5, 0x79,
	0x93, 0x37, 0xf4, 0x0b, 0xb0, 0x80, 0x0f, 0x56, 0x14, 0x34, 0x4a, 0xab, 0xda, 0xb5, 0x8a, 0x99,
	0xb4, 0xf5, 0x73, 0x70, 0xa2, 0xed, 0x7a, 0xad, 0xb0, 0xd7, 0x28, 0xaf, 0x6a, 0xd7, 0x16, 0x4d,
	0xd1, 0x22, 0x5f, 0xc1, 0xa2, 0xd5, 0x34, 0xee, 0x05, 0x81, 0x1f, 0x18, 0xbe, 0x43, 0xf5, 0x06,
	0x9c, 0xa4, 0x01, 0x3e, 0x22, 0xef, 0xb2, 0x19, 0x37, 0x75, 0x02, 0x8b, 0x83, 0xb0, 0xf7, 0xd4,
	0x1d, 0x50, 0x2b, 0xb2, 0x07, 0x7b, 0x38, 0x42, 0xd9, 0x54, 0x60, 0xfa, 0x45, 0xa8, 0xd0, 0x20,
	0x78, 0xec, 0x47, 0x6e, 0x87, 0xe2, 0x40, 0x15, 0x33, 0x05, 0x90, 0x1b, 0x50, 0x33, 0x9a, 0xfd,
	0x57, 0x3d, 0x3b, 0xa2, 0xaf, 0x6c, 0xc7, 0x09, 0x18, 0xba, 0xdd, 0xe9, 0xf8, 0x43, 0x2f, 0x12,
	0xaa, 0x94, 0xcd, 0x14, 0x40, 0x2e, 0x43, 0xed, 0x51, 0xb3, 0x23, 0xa1, 0x2f, 0x41, 0xc9, 0xdd,
	0x13, 0x6c, 0x4b, 0xee, 0x1e, 0xf9, 0x57, 0x0d, 0x74, 0xa3, 0x69, 0x99, 0xb4, 0xe7, 0x86, 0x11,
	0x0d, 0xd6, 0x39, 0xe5, 0x78, 0xae, 0x7a, 0x1d, 0xca, 0x7b, 0x07, 0x8e, 0xb0, 0x0f, 0x7b, 0x64,
	0x8a, 0x75, 0xfa, 0x6e, 0xaa, 0x58, 0x99, 0x2b, 0x26, 0xc3, 0x18, 0x4e, 0x44, 0x83, 0x81, 0xeb,
	0xd9, 0xfd, 0xa7, 0x6f, 0xf6, 0x68, 0x63, 0x0e, 0xed, 0xae, 0xc0, 0xf4, 0x35, 0xa8, 0xef, 0xd3,
	0xc0, 0xed, 0xba, 0x1d, 0x3b, 0x72, 0x7d, 0x0f, 0x6d, 0x38, 0x8f, 0xc3, 0xe4, 0xe0, 0xfa, 0x0a,
	0x40, 0x40, 0x7b, 0x31, 0xd6, 0x09, 0xc4, 0x92, 0x20, 0xe4, 0x6b, 0x0d, 0x74, 0xab, 0x69, 0x4c,
	0xa7, 0xda, 0x05, 0x58, 0xf0, 0xdc, 0xce, 0xae, 0x67, 0x0f, 0x68, 0x3c, 0xff, 0x71, 0x9b, 0x09,
	0xd7, 0xb7, 0xc3, 0xa8, 0xc5, 0x67, 0x2b, 0x94, 0x14, 0xcd, 0xc1, 0xf5, 0x0d, 0x58, 0xda, 0x19,
	0xda, 0xde, 0x4b, 0xd7, 0x13, 0xe3, 0xa2, 0xba, 0xd5, 0xe6, 0x85, 0x9b, 0x92, 0xa3, 0x3e, 0x50,
	0x30, 0xcc, 0x0c, 0x05, 0xf9, 0xa1, 0x06, 0x0b, 0x46, 0xd3, 0x7a, 0xe4, 0xf7, 0x5c, 0xef, 0x10,
	0xb1, 0xb3, 0xf6, 0x2f, 0x15, 0xd8, 0x5f, 0xcc, 0x5a, 0x59, 0x99, 0xb5, 0xc3, 0x66, 0x84, 0xfc,
	0x58, 0x83, 0xba, 0xd1, 0xb4, 0x9e, 0x85, 0x34, 0x60, 0x46, 0xe0, 0xc2, 0x5c, 0x80, 0x85, 0xa1,
	0x00, 0xa0, 0x2c, 0x15, 0x33, 0x69, 0x1f, 0x9f, 0x73, 0x90, 0x9f, 0x69, 0x50, 0x63, 0x72, 0x6c,
	0x04, 0x2e, 0xed, 0x3e, 0xf4, 0xba, 0xfe, 0x0c, 0x73, 0x29, 0x34, 0x78, 0xcc, 0xfa, 0xca, 0xa9,
	0x06, 0xac, 0xcd, 0x64, 0xd9, 0xa1, 0xb6, 0xb3, 0xe5, 0x07, 0x51, 0x60, 0xbb, 0x7c, 0xe6, 0x2a,
	0xa6, 0x02, 0x63, 0x23, 0x87, 0x6e, 0xcf, 0xb3, 0xa3, 0x61, 0x10, 0x7b, 0x68, 0x0a, 0x20, 0x3f,
	0xd5, 0xa0, 0x76, 0x3f, 0x70, 0xa9, 0xe7, 0x98, 0xf4, 0xf5, 0x90, 0x86, 0x11, 0x1b, 0x2f, 0xa4,
	0x9e, 0x43, 0x83, 0x44, 0xd0, 0xa4, 0xad, 0xaf, 0x42, 0x35, 0xa0, 0xaf, 0xef, 0xda, 0x11, 0x65,
	0xf6, 0x10, 0x73, 0x27, 0x83, 0xf4, 0xab, 0xb0, 0xc4, 0xb1, 0x1f, 0xbb, 0x9d, 0x5d, 0x49, 0xe6,
	0x0c, 0x54, 0xbf, 0x09, 0x3a, 0x87, 0x3c, 0xc8, 0xcb, 0x5f, 0xd0, 0x43, 0x7e, 0xa1, 0x81, 0xce,
	0xe5, 0x7c, 0x2e, 0xad, 0x2e, 0x26, 0x6c, 0x17, 0xa1, 0xa9, 0xb0, 0x71, 0x5b, 0x6f, 0xc2, 0x99,
	0x36, 0xed, 0xf8, 0x03, 0xca, 0xe9, 0x32, 0x52, 0x17, 0xf6, 0x31, 0xf1, 0x39, 0x7d, 0x56, 0x7c,
	0x15, 0xca, 0xc4, 0xe7, 0x90, 0x22, 0xf1, 0xf3, 0x3d, 0x64, 0x1b, 0x96, 0x8d, 0x1d, 0x3b, 0xda,
	0x0c, 0xfc, 0xe1, 0x5e, 0x8b, 0x0e, 0xda, 0xf4, 0x90, 0xed, 0x90, 0x59, 0xba, 0x13, 0x13, 0x3c,
	0x74, 0x62, 0x4b, 0x4b, 0x20, 0xe6, 0xee, 0xc0, 0xa5, 0x9f, 0xdc, 0xc1, 0x1e, 0x67, 0x1c, 0x0c,
	0x75, 0xc1, 0xdd, 0x69, 0x60, 0x07, 0xb2, 0xbe, 0x12, 0x84, 0x89, 0xb2, 0x27, 0xf4, 0x78, 0x16,
	0xf4, 0x85, 0x92, 0x32, 0x88, 0x0c, 0xa0, 0x92, 0x68, 0xc7, 0xd0, 0x0d, 0x49, 0x72, 0x2e, 0x8a,
	0x0c, 0x62, 0xa7, 0x8e, 0x11, 0x50, 0x3b, 0xf2, 0x03, 0xa1, 0x57, 0xdc, 0xd4, 0x75, 0x98, 0x93,
	0x84, 0xc0, 0x67, 0xb6, 0x4a, 0xb7, 0xdc, 0x8e, 0x18, 0x96, 0x3d, 0x92, 0x00, 0x96, 0xb7, 0x68,
	0x10, 0xfa, 0x5e, 0x3a, 0xe8, 0x87, 0x50, 0x49, 0x6c, 0x83, 0x43, 0x56, 0x9b, 0x67, 0xe5, 0xfd,
	0x2b, 0xc1, 0x34, 0x53, 0xbc, 0xc2, 0x5d, 0xb2, 0x54, 0xbc, 0x4b, 0x92, 0xeb, 0xb0, 0xa4, 0xee,
	0x81, 0xcc, 0xa4, 0x7b, 0x76, 0x18, 0x1e, 0xf8, 0x81, 0x13, 0xef, 0x2c, 0x71, 0x9b, 0xfc, 0x7c,
	0x1e, 0x16, 0xac, 0xa6, 0x31, 0xc9, 0x7e, 0x38, 0x6e, 0xe9, 0x67, 0x2c, 0x5f, 0xce, 0x59, 0xbe,
	0x50, 0x85, 0xb9, 0x11, 0x1b, 0xfd, 0x1d, 0x80, 0x6e, 0xbc, 0xd2, 0xc3, 0xc6, 0xfc, 0x6a, 0xf9,
	0x5a, 0xb5, 0xf9, 0xae, 0x6c, 0x24, 0x65, 0x1f, 0x30, 0x25, 0x64, 0xfd, 0xb3, 0x98, 0xf4, 0x39,
	0x0d, 0xc2, 0xc6, 0x09, 0x24, 0x5d, 0xc9, 0x93, 0xca, 0x4b, 0xd3, 0x94, 0x28, 0xf4, 0x4d, 0xa8,
	0x77, 0x54, 0xf7, 0x0f, 0x1b, 0x27, 0x91, 0xcb, 0x7b, 0x85, 0xb3, 0xc4, 0x71, 0xcc, 0x1c, 0x91,
	0xfe, 0x00, 0xea, 0x01, 0x7d, 0xfd, 0x3b, 0xbe, 0x9b, 0xce, 0x7d, 0x63, 0x01, 0x19, 0x5d, 0x94,
	0x19, 0x99, 0x19, 0x1c, 0x33, 0x47, 0xa5, 0xdf, 0x8e, 0x55, 0x62, 0xab, 0xa7, 0x51, 0x41, 0x1e,
	0xe7, 0xf2, 0x2a, 0xb1, 0x5e, 0x53, 0xc2, 0xd4, 0x3f, 0x05, 0x48, 0xa4, 0x0a, 0x1b, 0x90, 0x57,
	0x22, 0xe3, 0x9a, 0xa6, 0x84, 0xce, 0xb6, 0x17, 0x87, 0xf6, 0x69, 0x24, 0xb6, 0x9d, 0x87, 0x4e,
	0xa3, 0xba, 0x5a, 0xbe, 0x56, 0x36, 0x33, 0xd0, 0x82, 0x33, 0x79, 0x71, 0xda, 0x33, 0x99, 0x2d,
	0x09, 0xbb, 0x47, 0xbd, 0x08, 0xf5, 0xab, 0xa1, 0x9c, 0xca, 0x92, 0x58, 0x8f, 0x3b, 0xcd, 0x14,
	0x8f, 0x7c, 0x3d, 0x0f, 0x75, 0xab, 0x69, 0xa8, 0x67, 0xe8, 0xaf, 0x1d, 0xf8, 0xd7, 0x0e, 0xfc,
	0x7f, 0xc5, 0x81, 0x0f, 0xa0, 0x92, 0xc0, 0xd9, 0x41, 0xc3, 0x7b, 0x62, 0xb7, 0x8d, 0x9b, 0xfa,
	0x15, 0xa8, 0xe1, 0x63, 0xec, 0xe8, 0xc2, 0x73, 0x55, 0x20, 0x73, 0x4e, 0x04, 0xe4, 0x7d, 0x38,
	0x07, 0x27, 0x55, 0xa8, 0xf0, 0x08, 0xd8, 0x1f, 0x46, 0xe4, 0x12, 0x54, 0xf8, 0xf6, 0xef, 0x0f,
	0x23, 0x76, 0x80, 0x85, 0x51, 0x20, 0xce, 0x08, 0xf6, 0x48, 0xae, 0xc3, 0xa2, 0xd1, 0xb4, 0x1e,
	0x50, 0x3b, 0x88, 0xda, 0xd4, 0xc6, 0x10, 0x2d, 0x4a, 0x62, 0x4e, 0xb1, 0xc0, 0x12, 0x00, 0xc3,
	0xb6, 0x9a, 0xc6, 0xa4, 0xd8, 0xef, 0xc1, 0x49, 0xab, 0x69, 0x7c, 0xd7, 0xed, 0xec, 0xb2, 0x81,
	0x07, 0x61, 0x2f, 0x1e, 0x78, 0x10, 0xf6, 0x48, 0x1d, 0x96, 0xf0, 0x9e, 0xb1, 0x47, 0xed, 0x08,
	0xd7, 0x36, 0x79, 0x1f, 0xc5, 0x36, 0x29, 0xea, 0xdb, 0x80, 0x93, 0x1e, 0x3d, 0x90, 0x62, 0xe5,
	0xb8, 0xc9, 0xd0, 0x90, 0xf0, 0x10, 0xb4, 0xe7, 0x00, 0x77, 0xe9, 0xbe, 0xdb, 0xa1, 0x68, 0xfe,
	0x15, 0xb9, 0x25, 0x50, 0xe5, 0xfe, 0x6b, 0xb0, 0xcc, 0x5b, 0x5b, 0x81, 0xef, 0x0c, 0x3b, 0x11,
	0x8d, 0x2f, 0xb2, 0x59, 0x30, 0xd9, 0x64, 0x77, 0x49, 0x4b, 0x22, 0xbd, 0x0d, 0xe0, 0xa8, 0xac,
	0x33, 0xce, 0x9f, 0xe2, 0x9a, 0x12, 0x26, 0xf9, 0x16, 0xd4, 0xac, 0xa6, 0x21, 0x31, 0xaa, 0x43,
	0x39, 0xa0, 0x51, 0x6c, 0xa3, 0x80, 0x46, 0xec, 0xa4, 0x37, 0x9a, 0x96, 0x45, 0xd1, 0x0d, 0x1e,
	0x67, 0x23, 0x70, 0x4d, 0x8d, 0xc0, 0x09, 0x41, 0x8b, 0xca, 0xd8, 0x79, 0x8e, 0x9f, 0xe1, 0xc5,
	0xd5, 0xa2, 0x91, 0x1c, 0x12, 0x32, 0xed, 0xe5, 0x38, 0x9d, 0xf9, 0x16, 0xa7, 0xc9, 0x82, 0xc9,
	0x55, 0xbc, 0x1d, 0x66, 0xe9, 0xf3, 0xe3, 0xfc, 0x06, 0x9c, 0x32, 0x9a, 0x96, 0xb1, 0x63, 0x7b,
	0x3d, 0xba, 0x25, 0x42, 0x11, 0xb6, 0x05, 0x87, 0x51, 0xb0, 0xa5, 0x46, 0x2a, 0x32, 0x88, 0xbc,
	0x0f, 0xa7, 0xac, 0xa6, 0x91, 0x21, 0xcb, 0x73, 0xff, 0x2b, 0x0d, 0xd9, 0xdf, 0xf7, 0x83, 0x1e,
	0x8d, 0x12, 0x3c, 0x16, 0x05, 0xed, 0xf8, 0x1e, 0x7d, 0x3c, 0x1c, 0xc4, 0x01, 0x78, 0xdc, 0x56,
	0x22, 0xa4, 0x92, 0x1a, 0x21, 0x15, 0x5e, 0x9f, 0xcb, 0x13, 0x5d, 0x9f, 0xe7, 0x72, 0xd7, 0x67,
	0xae, 0x40, 0x46, 0xb0, 0xbc, 0x02, 0x3f, 0x80, 0x73, 0x7c, 0x1a, 0xe2, 0x63, 0x22, 0x89, 0x70,
	0xc7, 0xdd, 0x22, 0xd6, 0xa0, 0xde, 0xcd, 0xe0, 0x0b, 0x65, 0x72, 0x70, 0x36, 0x02, 0x9f, 0xa8,
	0x63, 0x1b, 0xe1, 0xc7, 0x1a, 0x2a, 0xb1, 0x49, 0xa3, 0xe7, 0x59, 0x2b, 0x8d, 0x9b, 0x89, 0x73,
	0x70, 0x82, 0xdb, 0x4b, 0x30, 0x16, 0x2d, 0xfd, 0x13, 0x38, 0x61, 0x77, 0x18, 0x07, 0xb4, 0xfd,
	0x52, 0x93, 0xc8, 0x4b, 0x28, 0x3b, 0xc2, 0x3a, 0x62, 0x9a, 0x82, 0x82, 0xac, 0xa1, 0xb2, 0x45,
	0x92, 0xe4, 0x4d, 0xff, 0x08, 0x16, 0x9f, 0xfb, 0x6e, 0x87, 0xc6, 0x19, 0xad, 0x55, 0xa8, 0xda,
	0x43, 0xc7, 0xf5, 0x2d, 0xda, 0xf1, 0xbd, 0xe4, 0x8e, 0x20, 0x81, 0x98, 0x36, 0xd8, 0x64, 0xcb,
	0x42, 0xf8, 0x4e, 0xdc, 0x26, 0x11, 0x2c, 0x3e, 0x77, 0x1d, 0xea, 0x4b, 0xdc, 0xf6, 0x59, 0x5b,
	0xe5, 0x26, 0x81, 0x18, 0x37, 0x6c, 0x4a, 0xdc, 0xe2, 0x36, 0x3b, 0xd2, 0xf0, 0xf9, 0xe9, 0xce,
	0x70, 0xd0, 0xf6, 0x6c, 0x37, 0xde, 0xe2, 0x33, 0x50, 0xe2, 0x42, 0xf5, 0xbe, 0xdb, 0x4f, 0x54,
	0x60, 0x33, 0xea, 0xf6, 0xa9, 0xe5, 0xfe, 0x01, 0x4d, 0x66, 0x54, 0xb4, 0xd9, 0x06, 0xc9, 0x9e,
	0xd3, 0xd1, 0xe2, 0x26, 0x3b, 0x77, 0xd8, 0x63, 0x76, 0x2c, 0x15, 0x48, 0x9e, 0x41, 0xd5, 0xb0,
	0x03, 0x27, 0x1e, 0x6a, 0x09, 0x4a, 0x6e, 0xac, 0x56, 0xc9, 0x1d, 0x7f, 0x99, 0x63, 0x5e, 0x10,
	0x5f, 0x47, 0x45, 0xb6, 0x20, 0x6e, 0x93, 0x1f, 0xcd, 0xf3, 0xab, 0x59, 0xcc, 0x17, 0xd7, 0x55,
	0x87, 0xba, 0xfb, 0xd2, 0x5d, 0x5f, 0x82, 0x28, 0x99, 0x80, 0x52, 0x26, 0x13, 0xa0, 0xc3, 0x5c,
	0x44, 0x7f, 0x3f, 0x1e, 0x03, 0x9f, 0x75, 0x02, 0x8b, 0x61, 0xb0, 0x9f, 0x66, 0x4f, 0x78, 0x1c,
	0xa7, 0xc0, 0x98, 0x69, 0x06, 0x61, 0x0f, 0x13, 0x27, 0x3c, 0x17, 0x11, 0x37, 0x99, 0x34, 0x22,
	0x47, 0xc0, 0xf4, 0x12, 0x49, 0xb2, 0x14, 0xa2, 0x7f, 0x04, 0x67, 0xe3, 0xa0, 0xf3, 0xae, 0x21,
	0x27, 0x69, 0x4e, 0x22, 0x6a, 0x71, 0x27, 0xa3, 0xe2, 0x3c, 0xb2, 0x7b, 0xed, 0x02, 0xa7, 0x2a,
	0xec, 0x64, 0x9a, 0x1f, 0xb8, 0xd1, 0xce, 0xdd, 0xc0, 0x3e, 0x68, 0x54, 0x56, 0xb5, 0x6b, 0x0b,
	0x66, 0xd2, 0x66, 0xcb, 0x95, 0x13, 0x49, 0xcb, 0x15, 0xf8, 0x72, 0xcd, 0xc2, 0xf5, 0xdf, 0x82,
	0xc5, 0x7d, 0xc9, 0xef, 0x1b, 0x55, 0x3c, 0xa8, 0x1a, 0xca, 0x2a, 0x93, 0xfa, 0x4d, 0x05, 0x1b,
	0xa9, 0x25, 0x3f, 0x17, 0x21, 0x94, 0x4a, 0x2d, 0xf5, 0x9b, 0x0a, 0xb6, 0x7e, 0x07, 0xaa, 0xdd,
	0xd4, 0x5f, 0x1b, 0x35, 0x24, 0x3e, 0xaf, 0x04, 0x88, 0x69, 0xb7, 0x29, 0xe3, 0x32, 0xd2, 0x4e,
	0xea, 0x7f, 0x8d, 0xa5, 0x3c, 0xa9, 0xe4, 0x9e, 0xa6, 0x8c, 0xcb, 0x1c, 0x9c, 0x5b, 0x61, 0x5d,
	0x04, 0x5e, 0xcb, 0xe8, 0x04, 0x2a, 0x90, 0xf4, 0xf0, 0x8c, 0xdd, 0x0a, 0xdc, 0x7d, 0x3b, 0xa2,
	0xcc, 0x25, 0xf5, 0x5b, 0x70, 0x92, 0x85, 0x99, 0x2d, 0x11, 0xaf, 0x64, 0x87, 0x4b, 0xbd, 0xd6,
	0x8c, 0xf1, 0x26, 0xc9, 0x24, 0x92, 0x0d, 0xa8, 0xb5, 0xb6, 0x67, 0x1b, 0x87, 0xfc, 0xa7, 0x86,
	0x67, 0xbc, 0xcc, 0xe5, 0xb0, 0x95, 0x33, 0xd2, 0xeb, 0x4a, 0xe3, 0xbc, 0x2e, 0xbb, 0x7e, 0xca,
	0x05, 0xeb, 0x27, 0xab, 0xf4, 0x5c, 0x41, 0x86, 0x72, 0xe4, 0x4a, 0x99, 0x1f, 0xb3, 0x52, 0xc8,
	0xa6, 0xc8, 0x41, 0x77, 0xf6, 0x67, 0xb4, 0xd7, 0x16, 0xbc, 0x67, 0x35, 0x8d, 0x27, 0xd1, 0x0e,
	0x0d, 0x9e, 0x8a, 0xa4, 0xe8, 0x8c, 0x1c, 0x3f, 0x85, 0xb3, 0x71, 0x36, 0xc5, 0xf2, 0x07, 0xf4,
	0x60, 0x87, 0x06, 0xf4, 0x5e, 0x3f, 0xa4, 0x39, 0x8b, 0x69, 0x79, 0x8b, 0x91, 0x3b, 0x70, 0x9a,
	0x05, 0xe6, 0xe9, 0x65, 0x32, 0x31, 0xa4, 0x42, 0x5a, 0x2a, 0x20, 0xfd, 0x14, 0xde, 0xe3, 0x87,
	0xed, 0x93, 0x6e, 0xb7, 0xef, 0x7a, 0x54, 0x52, 0x83, 0x39, 0xe0, 0x45, 0xa8, 0xb8, 0xe1, 0x0b,
	0xda, 0xb6, 0x5c, 0x51, 0x3f, 0x59, 0x30, 0x53, 0x00, 0xf1, 0xd0, 0x0c, 0x23, 0x89, 0xbf, 0x03,
	0x73, 0x83, 0xb0, 0x17, 0x36, 0x34, 0xbc, 0xd8, 0x8c, 0xb4, 0x01, 0x22, 0x4d, 0x24, 0x2c, 0x8f,
	0x5b, 0xc5, 0x9d, 0x6a, 0x6b, 0x18, 0xee, 0x8c, 0x0b, 0x3a, 0x44, 0xdc, 0x2a, 0x63, 0xe7, 0x4f,
	0x6d, 0x1d, 0xf3, 0xe9, 0x5b, 0x6e, 0xe7, 0x85, 0xdb, 0xef, 0x6f, 0x50, 0x8b, 0x7a, 0x0e, 0xb9,
	0x82, 0xf9, 0x01, 0x05, 0xc6, 0x28, 0x87, 0xc9, 0x01, 0xc5, 0x1e, 0x89, 0x87, 0x17, 0x9c, 0x75,
	0xc7, 0xe1, 0x81, 0xd0, 0xd8, 0x9c, 0xb2, 0xba, 0x96, 0x4a, 0xb9, 0xb5, 0x94, 0x56, 0xa2, 0xe4,
	0x3a, 0x86, 0x02, 0x23, 0x3f, 0xd1, 0xa0, 0xda, 0xda, 0x4e, 0xc7, 0xbb, 0x0d, 0x15, 0x3b, 0x6e,
	0x08, 0x2f, 0x53, 0xb6, 0x4d, 0x59, 0x38, 0x33, 0x45, 0x9d, 0xc4, 0xce, 0x93, 0x66, 0xb8, 0x99,
	0x0d, 0xac, 0xa6, 0x71, 0x64, 0x36, 0x38, 0x6c, 0x67, 0x20, 0xff, 0xac, 0xe1, 0xd4, 0xb0, 0x05,
	0xfc, 0x2b, 0x1b, 0xb4, 0xc0, 0x18, 0x73, 0x53, 0xa4, 0xfb, 0xe7, 0x47, 0xa6, 0xfb, 0xf7, 0xe1,
	0x0c, 0x9b, 0xa3, 0x5e, 0x40, 0xe9, 0x86, 0x94, 0xa7, 0x3f, 0x76, 0x47, 0xfa, 0xa5, 0x06, 0x67,
	0xd8, 0xac, 0x4d, 0x35, 0x70, 0x96, 0x71, 0x29, 0xcf, 0x78, 0xe2, 0xba, 0xc8, 0x5d, 0xb8, 0x64,
	0x67, 0x07, 0x2f, 0xa8, 0x31, 0x8c, 0x47, 0x22, 0x3f, 0xd7, 0xa0, 0x11, 0xfb, 0xc2, 0x91, 0xda,
	0x70, 0x0d, 0xea, 0x71, 0x2b, 0xa3, 0x48, 0x0e, 0xae, 0x37, 0xe1, 0x4c, 0x0c, 0x2b, 0xd0, 0xa0,
	0xb0, 0x8f, 0xfc, 0x9d, 0x06, 0xa7, 0x5b, 0xdb, 0x79, 0x99, 0xef, 0x43, 0x4d, 0x68, 0xac, 0x2c,
	0xea, 0xd5, 0xec, 0xa2, 0xce, 0x12, 0x9a, 0x2a, 0xd9, 0xa4, 0x53, 0x35, 0x49, 0x0d, 0x88, 0xf4,
	0xe0, 0x5b, 0xd9, 0x73, 0x6e, 0x3a, 0x63, 0x4f, 0xba, 0x93, 0xdc, 0xc4, 0x7d, 0xd8, 0xa4, 0xb6,
	0x93, 0x24, 0x38, 0xc7, 0xf1, 0x65, 0xf8, 0x38, 0xf9, 0x93, 0xe2, 0xdf, 0x80, 0x65, 0xcc, 0xae,
	0xa4, 0x19, 0xbc, 0xb1, 0x47, 0xc7, 0x75, 0x58, 0x6a, 0x6d, 0x4f, 0x8c, 0x7d, 0x03, 0x96, 0x31,
	0xe3, 0x32, 0x21, 0xfa, 0x2d, 0x38, 0x2d, 0x1c, 0x77, 0x62, 0x92, 0x8f, 0xf0, 0x4a, 0x6c, 0xf8,
	0x5e, 0xd7, 0x0d, 0x06, 0xd3, 0x50, 0x59, 0x4d, 0x63, 0x5a, 0xaa, 0x3f, 0xc2, 0x54, 0x0e, 0x96,
	0xab, 0x68, 0x9a, 0x8a, 0xbd, 0x02, 0xb5, 0x24, 0x47, 0x2a, 0x65, 0x89, 0x54, 0x20, 0xf3, 0xbd,
	0x3d, 0xb7, 0x93, 0xa6, 0x7d, 0x79, 0x2c, 0xa8, 0xc0, 0x58, 0x48, 0xd1, 0x75, 0x03, 0x1c, 0x2b,
	0x6c, 0x94, 0x31, 0xb5, 0x9a, 0x02, 0xc8, 0xbf, 0x69, 0xb0, 0x7c, 0x7c, 0x63, 0xb3, 0xab, 0x99,
	0x48, 0x6d, 0xf3, 0x91, 0xe3, 0x66, 0xb6, 0x18, 0x39, 0x97, 0x2b, 0x46, 0xb2, 0x7d, 0x21, 0x69,
	0xae, 0x3b, 0x03, 0xd7, 0x7b, 0xe8, 0xe0, 0xee, 0x5e, 0x36, 0x73, 0x70, 0xfd, 0x0c, 0xcc, 0x47,
	0xfe, 0x9e, 0xdb, 0x11, 0x77, 0x3c, 0xde, 0x20, 0x06, 0x86, 0x9f, 0x59, 0xed, 0x6e, 0x40, 0xb9,
	0xd3, 0x89, 0x03, 0x45, 0x35, 0xd5, 0xae, 0x62, 0x9a, 0x0c, 0x8f, 0x6c, 0xc0, 0xa9, 0xd6, 0xf6,
	0x8c, 0x3c, 0x36, 0xd1, 0x31, 0x98, 0x07, 0xce, 0xc8, 0xe8, 0x6f, 0x35, 0xa8, 0x67, 0xf3, 0xf8,
	0x59, 0x53, 0x6a, 0x79, 0x53, 0x9e, 0x83, 0x13, 0xc3, 0x50, 0xda, 0x7e, 0x45, 0x4b, 0xff, 0x00,
	0x4e, 0x27, 0x68, 0x26, 0x7d, 0x1d, 0x5f, 0xce, 0xf8, 0x96, 0x51, 0xd4, 0xc5, 0x26, 0x1d, 0xf3,
	0x94, 0xea, 0xd1, 0xac, 0xc0, 0xc8, 0x26, 0x46, 0xc7, 0x39, 0x31, 0x3f, 0x80, 0xb9, 0xe0, 0xab,
	0x44, 0xd7, 0xf1, 0xa5, 0x09, 0xc4, 0x24, 0xdf, 0x85, 0xf3, 0xc2, 0x6c, 0x47, 0xc0, 0xec, 0x4b,
	0xd0, 0x5b, 0xdb, 0xb3, 0xf3, 0xe1, 0x79, 0xaf, 0xd7, 0xcf, 0xdc, 0xc4, 0x96, 0xbc, 0x45, 0xba,
	0x70, 0xc1, 0x6a, 0x1a, 0xec, 0x2e, 0xf1, 0xc4, 0xa3, 0xc7, 0x38, 0xce, 0x5f, 0x68, 0x70, 0x39,
	0x3e, 0x96, 0x46, 0x8d, 0x36, 0x91, 0x47, 0x14, 0x71, 0x67, 0x0b, 0x29, 0xa0, 0xaf, 0x1f, 0x3a,
	0x22, 0x92, 0xe1, 0x0d, 0xf1, 0x8e, 0x46, 0x66, 0xd2, 0x65, 0x10, 0xd9, 0x80, 0x15, 0x71, 0xc6,
	0xbe, 0xb5, 0x4c, 0xe4, 0x8f, 0x35, 0x78, 0xbf, 0xb5, 0xdd, 0xb2, 0x3d, 0xbb, 0xc7, 0xae, 0xf5,
	0xb3, 0xea, 0x57, 0xe8, 0xf1, 0x59, 0xff, 0x2d, 0x17, 0xf8, 0xef, 0x6f, 0xc3, 0x45, 0xab, 0x69,
	0xc8, 0x72, 0x4c, 0xab, 0xc9, 0x9f, 0x68, 0x70, 0x35, 0xc3, 0xe2, 0x7f, 0x46, 0x95, 0x2e, 0xac,
	0x89, 0x15, 0x74, 0xac, 0xb2, 0x90, 0x7f, 0xd0, 0x60, 0x15, 0xd7, 0x7c, 0x77, 0x18, 0x1e, 0x83,
	0xaa, 0xa9, 0xb7, 0x96, 0x15, 0x6f, 0xbd, 0x0b, 0x97, 0x02, 0x1c, 0x32, 0x3b, 0x56, 0xbc, 0x93,
	0x89, 0xc8, 0x76, 0x2c, 0x12, 0xf9, 0x1b, 0x0d, 0x2e, 0xb3, 0xad, 0x61, 0x66, 0xd9, 0x0b, 0x57,
	0xd4, 0xa1, 0x32, 0x96, 0x27, 0x91, 0xf1, 0x47, 0x1a, 0x5c, 0x4a, 0x3d, 0x8a, 0xcb, 0x3a, 0xad,
	0x84, 0x87, 0x4a, 0x52, 0x9a, 0x44, 0x92, 0xbf, 0xd4, 0x40, 0xcf, 0xd6, 0xa4, 0x9d, 0x50, 0x9a,
	0x3a, 0x6d, 0xac, 0x97, 0x96, 0xf2, 0x5e, 0xaa, 0xeb, 0x30, 0xd7, 0xed, 0xdb, 0x3d, 0x31, 0xb9,
	0xf8, 0xcc, 0x8e, 0x26, 0x86, 0xf3, 0x20, 0x93, 0xec, 0xe2, 0x13, 0x5a, 0xd4, 0x45, 0x3e, 0xc2,
	0x90, 0x36, 0x7d, 0x29, 0xc8, 0xeb, 0xfa, 0x13, 0x2c, 0xd5, 0x3f, 0x2b, 0x61, 0x64, 0x3b, 0x25,
	0x59, 0x3e, 0x44, 0x2a, 0x15, 0x85, 0x48, 0x1f, 0xc1, 0xd9, 0x04, 0xa0, 0xdc, 0x57, 0xf8, 0x9c,
	0x17, 0x77, 0x2a, 0x81, 0xcf, 0x93, 0x03, 0x0f, 0x8d, 0x3a, 0x97, 0x09, 0x7c, 0x04, 0x5c, 0x7f,
	0x0c, 0x7a, 0x27, 0x37, 0x19, 0xe2, 0x3d, 0x86, 0x95, 0x71, 0xaf, 0x11, 0x38, 0xa1, 0x59, 0x40,
	0x49, 0xfe, 0x51, 0x83, 0xd3, 0x0f, 0xbd, 0x7d, 0x37, 0x9a, 0xda, 0xbb, 0x2e, 0x42, 0x85, 0x13,
	0xa6, 0xcb, 0x37, 0x05, 0xe8, 0xd7, 0x60, 0x59, 0x34, 0x32, 0xfb, 0x55, 0x16, 0x9c, 0xf2, 0xa1,
	0x89, 0xda, 0x29, 0x20, 0xe5, 0x43, 0x13, 0x3e, 0xf3, 0x32, 0x9f, 0x04, 0x4c, 0x5e, 0x62, 0x08,
	0xff, 0xd6, 0xba, 0xc4, 0xe1, 0x79, 0xd8, 0x28, 0x89, 0x90, 0x39, 0x06, 0x90, 0xaf, 0xe0, 0x6c,
	0x6b, 0xbb, 0x88, 0xf1, 0x36, 0x9c, 0x76, 0xf3, 0x60, 0x71, 0xe6, 0x5f, 0x96, 0x67, 0xa3, 0x80,
	0xda, 0x2c, 0xa2, 0x25, 0x1e, 0xbc, 0x6b, 0x35, 0x0d, 0x8e, 0xfe, 0x85, 0x3f, 0x3c, 0xf6, 0xf1,
	0x3e, 0xc3, 0x28, 0x86, 0x1d, 0x18, 0x6f, 0x65, 0x39, 0x72, 0x9b, 0x5f, 0x66, 0x6c, 0xaf, 0x43,
	0xfb, 0xd3, 0xd0, 0xf9, 0xb0, 0x3c, 0x35, 0xd1, 0x4c, 0x27, 0xe3, 0xf7, 0x30, 0xac, 0xcf, 0x0c,
	0x79, 0x0f, 0x96, 0x3b, 0x2a, 0xa8, 0x30, 0x32, 0x57, 0x51, 0xcc, 0x2c, 0x0d, 0x69, 0xe3, 0xa4,
	0x89, 0xa3, 0xe4, 0x98, 0xc6, 0xf8, 0x24, 0xbd, 0x52, 0x4c, 0x6d, 0xec, 0x26, 0xa6, 0x75, 0x9f,
	0x4d, 0x35, 0xb1, 0xb7, 0xa0, 0xd6, 0xda, 0x9e, 0x8e, 0xa4, 0x89, 0xf9, 0xe0, 0x67, 0xd3, 0xfa,
	0x8f, 0x50, 0x6b, 0x3a, 0xba, 0x01, 0xd4, 0x12, 0x74, 0x7c, 0x51, 0xe5, 0x78, 0xbd, 0xc7, 0x52,
	0xcf, 0x1a, 0x1c, 0xf1, 0x73, 0xe9, 0x48, 0x60, 0x00, 0x31, 0xad, 0xef, 0x16, 0xee, 0xc2, 0x0c,
	0xc1, 0x54, 0xf1, 0x89, 0x09, 0xcb, 0xad, 0xed, 0x23, 0xe6, 0xf9, 0x25, 0x56, 0x0c, 0xd8, 0x23,
	0x75, 0x36, 0xde, 0xa4, 0x87, 0x00, 0x8f, 0x23, 0x66, 0xe7, 0xff, 0x12, 0xcb, 0x28, 0x82, 0x1d,
	0x83, 0x08, 0xaf, 0x9f, 0x9d, 0xf3, 0xc7, 0x98, 0x35, 0x45, 0x07, 0x9f, 0x6e, 0x62, 0x45, 0x8d,
	0x21, 0xa1, 0x7a, 0xe4, 0x86, 0x11, 0x0b, 0x0e, 0xe4, 0x53, 0x9e, 0xc1, 0xf2, 0x9c, 0xca, 0x59,
	0x4e, 0xbf, 0x98, 0x83, 0x45, 0x39, 0xf8, 0xd1, 0xaf, 0xc2, 0x92, 0xc8, 0x31, 0xaa, 0xe3, 0x67,
	0xa0, 0xff, 0xcb, 0xca, 0xdc, 0x4d, 0x38, 0x83, 0xf5, 0xb9, 0xe8, 0xa1, 0x53, 0x50, 0xe5, 0x2e,
	0xec, 0x3b, 0x86, 0x22, 0x77, 0xb6, 0x70, 0x0d, 0x33, 0x15, 0xae, 0xab, 0xb3, 0x14, 0xae, 0x17,
	0xdf, 0xbe, 0x70, 0x5d, 0x9b, 0xbc, 0x70, 0x4d, 0xba, 0x58, 0xb2, 0x42, 0x9f, 0xc0, 0x32, 0x65,
	0x33, 0x5b, 0xa6, 0x54, 0xc4, 0x97, 0x1d, 0x6d, 0xba, 0x8a, 0xb4, 0x0d, 0xd5, 0xd6, 0xf6, 0x6c,
	0xc3, 0x1c, 0x92, 0xa4, 0x27, 0x7f, 0xaf, 0x61, 0xe9, 0x29, 0x1d, 0xe4, 0xb0, 0x72, 0xf5, 0x24,
	0x65, 0xaf, 0x51, 0x7e, 0x59, 0x1e, 0xe3, 0x97, 0x13, 0x14, 0xab, 0xc9, 0xfd, 0xa4, 0x6a, 0x35,
	0x93, 0x51, 0x88, 0x03, 0x17, 0x95, 0x8d, 0xe4, 0xb0, 0x7a, 0x6f, 0x41, 0xa9, 0x78, 0x82, 0x8f,
	0x2e, 0x7e, 0xa6, 0xc1, 0xbb, 0x4a, 0x49, 0x38, 0x11, 0x9a, 0x4d, 0xcc, 0x44, 0xd7, 0xba, 0x8e,
	0x22, 0x22, 0x57, 0x23, 0x5b, 0x90, 0x18, 0x8f, 0x34, 0x51, 0x25, 0xeb, 0xcf, 0x35, 0x0c, 0x6c,
	0xde, 0x5a, 0xd2, 0xeb, 0xa2, 0x3e, 0x5d, 0xc2, 0xeb, 0xc9, 0xe8, 0x09, 0x48, 0x0a, 0xd4, 0x87,
	0x4a, 0xf4, 0x7d, 0x38, 0x6f, 0x34, 0xad, 0x17, 0x6e, 0xb4, 0xe3, 0x04, 0xf6, 0x81, 0xb2, 0x55,
	0x5f, 0x83, 0xe5, 0x90, 0x06, 0xfb, 0x34, 0xc8, 0xce, 0x4f, 0x16, 0xcc, 0x36, 0xd6, 0x9e, 0x32,
	0x3d, 0x71, 0x93, 0x18, 0x98, 0x80, 0x9c, 0x8d, 0x3d, 0xb9, 0x0c, 0x55, 0xa3, 0x69, 0xdd, 0x77,
	0x3d, 0xe7, 0x59, 0x48, 0x03, 0xbd, 0x0e, 0xe5, 0x5d, 0xfa, 0x26, 0xae, 0x89, 0xef, 0xd2, 0x37,
	0x64, 0x1f, 0xaa, 0x56, 0xd3, 0x48, 0x10, 0x3e, 0x87, 0xda, 0x50, 0xfe, 0xce, 0xab, 0xe8, 0xe4,
	0x54, 0x3e, 0x04, 0x33, 0x55, 0x7c, 0xfd, 0x0c, 0xcc, 0xb7, 0xad, 0x1d, 0xff, 0x00, 0xb5, 0x59,
	0x30, 0x79, 0x03, 0x2b, 0xea, 0xf8, 0xae, 0x71, 0x99, 0x8d, 0x3b, 0x0c, 0xfa, 0xa2, 0x46, 0xb3,
	0xee, 0x38, 0x1b, 0x7d, 0xbb, 0xb3, 0x8b, 0x47, 0xe2, 0xe1, 0x55, 0x97, 0x89, 0xd1, 0x7f, 0x13,
	0xbd, 0xba, 0xe5, 0xef, 0xd3, 0x27, 0x43, 0xf1, 0xf2, 0xe2, 0xc4, 0x84, 0x2c, 0xa4, 0x98, 0x9e,
	0xf0, 0x3c, 0x9c, 0xe5, 0xeb, 0x28, 0x43, 0x44, 0x5a, 0x18, 0xa4, 0xe4, 0x3b, 0x98, 0x8b, 0xb5,
	0xe3, 0x06, 0xbb, 0xea, 0xf1, 0x10, 0x40, 0x81, 0xc5, 0xef, 0x30, 0x94, 0xd2, 0x77, 0x18, 0x3e,
	0xc6, 0xf8, 0xc2, 0xa2, 0xd1, 0x0b, 0xea, 0xb6, 0x7d, 0xc3, 0xdf, 0xa7, 0x81, 0x7e, 0x05, 0x6a,
	0x07, 0x49, 0x6b, 0xcb, 0xed, 0xc4, 0x25, 0x13, 0x05, 0x28, 0xde, 0x74, 0x50, 0x29, 0xf3, 0xef,
	0x48, 0xac, 0x21, 0xff, 0x4d, 0x05, 0x6b, 0x44, 0x7a, 0x85, 0xfc, 0x90, 0x57, 0xe8, 0x55, 0xe4,
	0x0f, 0xe0, 0x74, 0x18, 0x05, 0x2f, 0xe4, 0xa1, 0xd3, 0x57, 0x81, 0x8b, 0xba, 0xf4, 0x35, 0xa8,
	0xbb, 0xe1, 0x23, 0x77, 0x97, 0xa6, 0x3d, 0xc2, 0x7b, 0x72, 0xf0, 0x58, 0xe0, 0xb2, 0xfc, 0x92,
	0x30, 0x5b, 0x85, 0x0c, 0x8d, 0x1b, 0x58, 0x42, 0x1e, 0x37, 0x5f, 0xdf, 0xc1, 0xd5, 0x55, 0x48,
	0x96, 0x37, 0xca, 0x7f, 0x69, 0x30, 0x8f, 0x08, 0x6c, 0xb9, 0xa2, 0x55, 0xd3, 0x37, 0xf0, 0x45,
	0x13, 0x3f, 0x0d, 0x19, 0xb6, 0xfb, 0x6e, 0xb8, 0x23, 0x9d, 0x62, 0x32, 0x48, 0xbf, 0x0e, 0xa7,
	0x92, 0x66, 0x26, 0xc0, 0xcf, 0x77, 0x60, 0xa4, 0x16, 0x7f, 0x8e, 0x59, 0x36, 0xf1, 0x39, 0x89,
	0xde, 0xe6, 0xa5, 0xe8, 0xed, 0x3c, 0x9c, 0x1c, 0x06, 0xfd, 0x57, 0x6d, 0xd7, 0xc3, 0xe0, 0x6b,
	0xd1, 0x3c, 0x31, 0x0c, 0xfa, 0x1b, 0xae, 0x27, 0x1d, 0x10, 0x61, 0x12, 0x70, 0xa5, 0x07, 0x44,
	0x18, 0xef, 0x3e, 0x6d, 0x5e, 0x2b, 0xc4, 0xd0, 0x6a, 0xc1, 0x8c, 0x9b, 0x64, 0x05, 0x16, 0x50,
	0x63, 0x36, 0x41, 0x3a, 0xcc, 0x0d, 0x83, 0x3e, 0xf7, 0xd0, 0x8a, 0x89, 0xcf, 0x24, 0xc4, 0xf5,
	0xbb, 0xc5, 0xc5, 0xe6, 0xb6, 0x61, 0x7b, 0xb0, 0xef, 0x45, 0xd4, 0x8b, 0x30, 0x4e, 0x8c, 0xf7,
	0xe0, 0x14, 0x94, 0xc8, 0x5f, 0x92, 0xe4, 0xcf, 0x6d, 0x0d, 0xb2, 0x8d, 0xe7, 0x14, 0x1b, 0x93,
	0x3b, 0xb0, 0xd4, 0xda, 0x56, 0xc6, 0xfc, 0x36, 0xcc, 0x63, 0xa7, 0xd8, 0xa7, 0x4e, 0xc9, 0xfb,
	0x14, 0x62, 0x98, 0xbc, 0x9f, 0x7c, 0x82, 0x1b, 0xc8, 0xdb, 0xd1, 0xfe, 0xff, 0xa4, 0x86, 0xab,
	0xd0, 0x8f, 0xf4, 0x05, 0xf2, 0x13, 0x0d, 0x2a, 0x89, 0xe3, 0x8e, 0xf1, 0x99, 0x35, 0xa8, 0xe3,
	0xe3, 0x56, 0xce, 0x71, 0x72, 0x70, 0xc6, 0xa5, 0xef, 0xee, 0x22, 0x0a, 0x3f, 0x8c, 0xe2, 0x26,
	0x5b, 0xfe, 0xf8, 0x98, 0x29, 0x91, 0xa8, 0x40, 0xf2, 0x14, 0xe3, 0xc1, 0x54, 0xaa, 0xa2, 0xb1,
	0xb5, 0xd1, 0x63, 0xc7, 0x1a, 0x94, 0x54, 0x4d, 0x37, 0x58, 0xf4, 0x97, 0x32, 0xfd, 0x10, 0x2a,
	0xfd, 0xb8, 0x51, 0xf4, 0xd9, 0x62, 0x82, 0x69, 0xa6, 0x78, 0xc4, 0xc0, 0xe8, 0x6e, 0x46, 0x26,
	0x57, 0x92, 0xb0, 0x2b, 0x65, 0x94, 0x5f, 0xc8, 0xdf, 0x93, 0x32, 0x44, 0x47, 0x6d, 0x0a, 0xfe,
	0x55, 0x43, 0x96, 0x77, 0x5e, 0x86, 0xaf, 0x4b, 0x00, 0x26, 0xdd, 0xeb, 0xbf, 0x39, 0x4a, 0xef,
	0xc0, 0xb5, 0x37, 0x18, 0x50, 0x2f, 0xa2, 0x4e, 0xe2, 0x21, 0x32, 0x88, 0x79, 0x49, 0x9b, 0x1a,
	0x12, 0x0e, 0x5f, 0x5b, 0x2a, 0x90, 0x45, 0x16, 0x09, 0xc0, 0x8e, 0xfc, 0x20, 0x29, 0x7b, 0x67,
	0xc1, 0x98, 0x84, 0x56, 0xf0, 0x4e, 0x70, 0x7e, 0x0a, 0x90, 0xdd, 0x59, 0x05, 0xc0, 0xe0, 0xfb,
	0x80, 0xb8, 0xf7, 0x65, 0xa0, 0x98, 0x76, 0xe6, 0x90, 0x34, 0xa4, 0x59, 0x10, 0x69, 0xe7, 0x0c,
	0x5c, 0x7c, 0x3c, 0x23, 0x99, 0xf0, 0x36, 0xbb, 0x0e, 0xc4, 0xad, 0xa2, 0x8f, 0x67, 0x52, 0x5c,
	0x53, 0xc2, 0x24, 0xf7, 0x61, 0xb1, 0xb5, 0x7d, 0x04, 0x7c, 0x36, 0xf1, 0x23, 0x9c, 0x23, 0x60,
	0x74, 0x0b, 0x3f, 0xfc, 0xe0, 0x35, 0xe7, 0x84, 0xd9, 0x45, 0xa8, 0x08, 0x13, 0xa4, 0x5f, 0x2b,
	0x26, 0x00, 0xf2, 0x06, 0xeb, 0xdd, 0x7c, 0xd3, 0xe6, 0x0c, 0x19, 0xe5, 0x11, 0x79, 0x95, 0x32,
	0x74, 0x39, 0x3b, 0xf4, 0xb7, 0x71, 0x5b, 0xcc, 0x0d, 0x5d, 0x14, 0x53, 0x2c, 0xa9, 0x32, 0x8e,
	0xd9, 0x3a, 0xef, 0x41, 0x2d, 0x7e, 0x19, 0x87, 0xa3, 0x8e, 0xfb, 0xd2, 0x64, 0xf4, 0x62, 0xbc,
	0x8f, 0xe9, 0xbf, 0xd9, 0xf9, 0x5c, 0x4d, 0x52, 0x82, 0x32, 0xaf, 0xbc, 0x8a, 0x7f, 0xaa, 0x41,
	0x75, 0x23, 0xf0, 0x0f, 0x42, 0x3a, 0xdd, 0xd9, 0x22, 0x6f, 0xeb, 0x3c, 0xd7, 0x9f, 0x6c, 0xeb,
	0x1f, 0x43, 0x95, 0xb9, 0x86, 0x2d, 0xbc, 0xa8, 0x9c, 0xff, 0x20, 0x52, 0xf2, 0x22, 0x19, 0x95,
	0x7c, 0x81, 0xb1, 0x28, 0x17, 0xc7, 0xf2, 0x07, 0xd4, 0xf7, 0x84, 0x54, 0xec, 0xa4, 0xb0, 0xc3,
	0x28, 0x7b, 0x6b, 0x50, 0x81, 0x8a, 0xa5, 0x4a, 0x99, 0xb0, 0xe9, 0xa7, 0x1a, 0x86, 0xb3, 0x05,
	0xbc, 0xef, 0x40, 0xb5, 0x9d, 0x1a, 0xa0, 0xe8, 0x35, 0x60, 0xc9, 0x3e, 0xa6, 0x8c, 0xab, 0x7f,
	0x0e, 0x0b, 0x61, 0x14, 0xd8, 0x11, 0xed, 0xbd, 0xc1, 0x01, 0x97, 0x9a, 0xff, 0x2f, 0xff, 0xdd,
	0xe7, 0x23, 0xdf, 0xdf, 0x45, 0x74, 0x4b, 0xa0, 0x9a, 0x09, 0x51, 0x41, 0x54, 0xf8, 0x12, 0xdf,
	0xb7, 0xe4, 0x23, 0x4a, 0x01, 0xde, 0x58, 0x2f, 0xc8, 0x59, 0xa7, 0x54, 0x60, 0x1d, 0xb2, 0x8d,
	0xa9, 0xc1, 0x3c, 0xe7, 0xb7, 0xd7, 0x9f, 0x7c, 0x8e, 0x1f, 0xa2, 0xf1, 0xee, 0xf5, 0x7e, 0x3f,
	0x39, 0x94, 0x72, 0x1f, 0x12, 0x6b, 0x23, 0x3e, 0xe6, 0xff, 0x01, 0xee, 0x1b, 0x19, 0x06, 0x33,
	0x4c, 0x48, 0xfe, 0xda, 0x61, 0x62, 0x41, 0xeb, 0xae, 0xef, 0x45, 0x6c, 0x1e, 0x64, 0xbd, 0x95,
	0x72, 0x95, 0x96, 0x29, 0x57, 0x31, 0x7b, 0xb7, 0x1f, 0xfb, 0x48, 0x24, 0x62, 0xfa, 0xa4, 0x4d,
	0x5e, 0x63, 0x15, 0xa1, 0x88, 0xe7, 0xbd, 0xf8, 0x0b, 0xb2, 0xe4, 0x5e, 0x19, 0xbf, 0x57, 0x3e,
	0xe6, 0x22, 0x9a, 0x23, 0x29, 0x50, 0xe3, 0x77, 0xf1, 0x05, 0xf8, 0xfb, 0x7e, 0xd0, 0x76, 0x1d,
	0x87, 0x7a, 0x19, 0xcf, 0x3a, 0x44, 0x97, 0x15, 0x80, 0x76, 0x42, 0x2a, 0xb4, 0x91, 0x20, 0x64,
	0x1f, 0xd3, 0xdd, 0x23, 0x99, 0x1f, 0x9b, 0x52, 0xb7, 0xf0, 0xb2, 0xbb, 0xde, 0xef, 0xfb, 0x07,
	0x6c, 0x6d, 0x78, 0x3d, 0x1a, 0xa4, 0xa3, 0x9e, 0x81, 0x79, 0x9b, 0xf5, 0x88, 0xf7, 0xf9, 0x79,
	0x83, 0xdc, 0xc0, 0x6b, 0xee, 0x08, 0x92, 0xfc, 0xee, 0x76, 0x09, 0xcd, 0xf6, 0x30, 0x2c, 0x26,
	0x20, 0x9b, 0xa8, 0xf8, 0xa8, 0x6e, 0xfc, 0x79, 0xd3, 0xba, 0x24, 0x83, 0x68, 0x15, 0x68, 0x72,
	0x19, 0x2e, 0xc9, 0x97, 0xe8, 0xdc, 0x92, 0x27, 0x01, 0xbe, 0x88, 0x30, 0x1a, 0x41, 0xd9, 0x4a,
	0xb4, 0x19, 0xb6, 0x12, 0x49, 0xa8, 0xef, 0xc3, 0x05, 0xe6, 0x33, 0xc7, 0x34, 0x20, 0xb9, 0x89,
	0x45, 0xcf, 0x51, 0xec, 0xf3, 0x73, 0x91, 0xd8, 0xa8, 0x60, 0xe1, 0x60, 0xc2, 0x61, 0x3f, 0xb6,
	0xd1, 0x08, 0x04, 0xdd, 0x80, 0xe5, 0x8c, 0x57, 0x1d, 0xee, 0x87, 0x59, 0x8a, 0x02, 0x3b, 0x5d,
	0x01, 0x22, 0x26, 0x6f, 0xc4, 0x0a, 0x40, 0xe9, 0xfe, 0x10, 0x88, 0x98, 0xc1, 0x31, 0x58, 0xc7,
	0x25, 0xe2, 0x97, 0x18, 0xfe, 0xc7, 0x29, 0xb5, 0xe9, 0x93, 0x75, 0x87, 0x25, 0xaa, 0x3f, 0xc3,
	0x68, 0xe1, 0xad, 0xf9, 0x93, 0x97, 0x98, 0xf3, 0x7d, 0xba, 0xe3, 0x06, 0xce, 0x56, 0xdf, 0x8e,
	0xba, 0x7e, 0x30, 0x10, 0x3f, 0x0f, 0xe0, 0x3f, 0xae, 0xc0, 0x37, 0x4d, 0x77, 0xa9, 0x27, 0xfc,
	0x81, 0x37, 0x72, 0x3f, 0x70, 0x2a, 0x15, 0xfc, 0xc0, 0xe9, 0x97, 0x1a, 0xbe, 0x57, 0x36, 0x9a,
	0xf5, 0xaf, 0xe6, 0xdf, 0x5c, 0xd2, 0x0f, 0x0c, 0xe6, 0x8a, 0x7f, 0x60, 0xf0, 0x38, 0x1e, 0x66,
	0x5e, 0xfa, 0x81, 0x41, 0x0c, 0x5c, 0xfb, 0x14, 0xce, 0x15, 0x7f, 0xc5, 0xab, 0x2f, 0xc2, 0x42,
	0x20, 0x7e, 0x37, 0x56, 0x7f, 0x47, 0x3f, 0x0d, 0xcb, 0x5d, 0xfc, 0x7c, 0xfa, 0x55, 0xfc, 0x81,
	0x76, 0x5d, 0x5b, 0xb3, 0xe0, 0xfc, 0xa8, 0x65, 0x56, 0x83, 0xca, 0xd0, 0x73, 0x68, 0xd7, 0xf5,
	0xa8, 0x53, 0x7f, 0x87, 0x31, 0xdb, 0xb1, 0xfb, 0xdd, 0x2f, 0xa8, 0x1d, 0xd4, 0x35, 0xd6, 0xf2,
	0x3d, 0xda, 0xf2, 0xbd, 0x68, 0xa7, 0x5e, 0x62, 0xa8, 0xd1, 0x4e, 0x40, 0xe9, 0x5d, 0xfb, 0x4d,
	0x58, 0x2f, 0x6f, 0xd4, 0xff, 0xe9, 0x9b, 0x15, 0xed, 0x5f, 0xbe, 0x59, 0xd1, 0xfe, 0xfd, 0x9b,
	0x15, 0xed, 0xaf, 0xff, 0x63, 0xe5, 0x9d, 0xf6, 0x09, 0xfc, 0x09, 0xde, 0x87, 0xff, 0x1d, 0x00,
	0x00, 0xff, 0xff, 0xb1, 0x75, 0x71, 0x07, 0x18, 0x4f, 0x00, 0x00,
}

func (m *WebSocketMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebSocketMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WebSocketMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BinMsg) > 0 {
		i -= len(m.BinMsg)
		copy(dAtA[i:], m.BinMsg)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.BinMsg)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MsgIdStr) > 0 {
		i -= len(m.MsgIdStr)
		copy(dAtA[i:], m.MsgIdStr)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.MsgIdStr)))
		i--
		dAtA[i] = 0x12
	}
	if m.MsgId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CErrorCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CErrorCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CErrorCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ErrNotice) > 0 {
		i -= len(m.ErrNotice)
		copy(dAtA[i:], m.ErrNotice)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.ErrNotice)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MsgTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.MsgTimeStamp))
		i--
		dAtA[i] = 0x10
	}
	if m.ErrCode != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ErrCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2LGateAddr) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2LGateAddr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2LGateAddr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *L2CGateAddr) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *L2CGateAddr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *L2CGateAddr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ip) > 0 {
		i -= len(m.Ip)
		copy(dAtA[i:], m.Ip)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ip)))
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}

func (m *C2SRegisterAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SRegisterAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SRegisterAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RegionCode) > 0 {
		i -= len(m.RegionCode)
		copy(dAtA[i:], m.RegionCode)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.RegionCode)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.VerificationCode) > 0 {
		i -= len(m.VerificationCode)
		copy(dAtA[i:], m.VerificationCode)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.VerificationCode)))
		i--
		dAtA[i] = 0x2a
	}
	if m.TerminalType != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.TerminalType))
		i--
		dAtA[i] = 0x20
	}
	if m.CliTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CliTimeStamp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Pwd) > 0 {
		i -= len(m.Pwd)
		copy(dAtA[i:], m.Pwd)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Pwd)))
		i--
		dAtA[i] = 0x12
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CRegisterAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRegisterAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRegisterAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HuanXinAccount != nil {
		{
			size, err := m.HuanXinAccount.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.LastMsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.LastMsgTimestamp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x12
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TerminalType != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.TerminalType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Pwd) > 0 {
		i -= len(m.Pwd)
		copy(dAtA[i:], m.Pwd)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Pwd)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CliTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CliTimeStamp))
		i--
		dAtA[i] = 0x10
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SUsernameLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SUsernameLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SUsernameLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TerminalType != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.TerminalType))
		i--
		dAtA[i] = 0x20
	}
	if m.CliTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CliTimeStamp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Pwd) > 0 {
		i -= len(m.Pwd)
		copy(dAtA[i:], m.Pwd)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Pwd)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserBriefInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserBriefInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserBriefInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Signature) > 0 {
		i -= len(m.Signature)
		copy(dAtA[i:], m.Signature)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Signature)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.HeadPortrait) > 0 {
		i -= len(m.HeadPortrait)
		copy(dAtA[i:], m.HeadPortrait)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.HeadPortrait)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x12
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FriendRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FriendRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FriendRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SenderHeadPortrait) > 0 {
		i -= len(m.SenderHeadPortrait)
		copy(dAtA[i:], m.SenderHeadPortrait)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderHeadPortrait)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SenderNickName) > 0 {
		i -= len(m.SenderNickName)
		copy(dAtA[i:], m.SenderNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ReqDateTime != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReqDateTime))
		i--
		dAtA[i] = 0x10
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FriendVerification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FriendVerification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FriendVerification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FriendHeadPortrait) > 0 {
		i -= len(m.FriendHeadPortrait)
		copy(dAtA[i:], m.FriendHeadPortrait)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.FriendHeadPortrait)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FriendNickName) > 0 {
		i -= len(m.FriendNickName)
		copy(dAtA[i:], m.FriendNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.FriendNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.BecomeFriendDateTime != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.BecomeFriendDateTime))
		i--
		dAtA[i] = 0x10
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ChatGroupMember) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChatGroupMember) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChatGroupMember) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x10
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FriendInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FriendInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FriendInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PortraitUrl) > 0 {
		i -= len(m.PortraitUrl)
		copy(dAtA[i:], m.PortraitUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.PortraitUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RemarkName) > 0 {
		i -= len(m.RemarkName)
		copy(dAtA[i:], m.RemarkName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.RemarkName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x12
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Pic) > 0 {
		i -= len(m.Pic)
		copy(dAtA[i:], m.Pic)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Pic)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Creator != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.Creator))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PersonChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PersonChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PersonChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastMsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.LastMsgTimestamp))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroup != nil {
		{
			size, err := m.ChatGroup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HuanXinAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HuanXinAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HuanXinAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AgentInfo) > 0 {
		for iNdEx := len(m.AgentInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AgentInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6a
		}
	}
	if m.HuanXinAccount != nil {
		{
			size, err := m.HuanXinAccount.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if len(m.DeleteFriendId) > 0 {
		dAtA5 := make([]byte, len(m.DeleteFriendId)*10)
		var j4 int
		for _, num1 := range m.DeleteFriendId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA5[j4] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j4++
			}
			dAtA5[j4] = uint8(num)
			j4++
		}
		i -= j4
		copy(dAtA[i:], dAtA5[:j4])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j4))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.ChatGroups) > 0 {
		for iNdEx := len(m.ChatGroups) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ChatGroups[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if len(m.FriendInfo) > 0 {
		for iNdEx := len(m.FriendInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.ReqJoinChatGroup) > 0 {
		for iNdEx := len(m.ReqJoinChatGroup) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ReqJoinChatGroup[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.ChatGroupMembers) > 0 {
		for iNdEx := len(m.ChatGroupMembers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ChatGroupMembers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.FriendVers) > 0 {
		for iNdEx := len(m.FriendVers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendVers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.FriendReqs) > 0 {
		for iNdEx := len(m.FriendReqs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendReqs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.LastMsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.LastMsgTimestamp))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PortraitUrl) > 0 {
		i -= len(m.PortraitUrl)
		copy(dAtA[i:], m.PortraitUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.PortraitUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x12
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CUsernameLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CUsernameLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CUsernameLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AgentInfo) > 0 {
		for iNdEx := len(m.AgentInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AgentInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6a
		}
	}
	if m.HuanXinAccount != nil {
		{
			size, err := m.HuanXinAccount.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if len(m.DeleteFriendId) > 0 {
		dAtA8 := make([]byte, len(m.DeleteFriendId)*10)
		var j7 int
		for _, num1 := range m.DeleteFriendId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA8[j7] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j7++
			}
			dAtA8[j7] = uint8(num)
			j7++
		}
		i -= j7
		copy(dAtA[i:], dAtA8[:j7])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j7))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.ChatGroups) > 0 {
		for iNdEx := len(m.ChatGroups) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ChatGroups[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if len(m.FriendInfo) > 0 {
		for iNdEx := len(m.FriendInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.ReqJoinChatGroup) > 0 {
		for iNdEx := len(m.ReqJoinChatGroup) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ReqJoinChatGroup[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.ChatGroupMembers) > 0 {
		for iNdEx := len(m.ChatGroupMembers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ChatGroupMembers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.FriendVers) > 0 {
		for iNdEx := len(m.FriendVers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendVers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.FriendReqs) > 0 {
		for iNdEx := len(m.FriendReqs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendReqs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.LastMsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.LastMsgTimestamp))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PortraitUrl) > 0 {
		i -= len(m.PortraitUrl)
		copy(dAtA[i:], m.PortraitUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.PortraitUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x12
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AgentInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AgentInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AgentInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AgentportraitUrl) > 0 {
		i -= len(m.AgentportraitUrl)
		copy(dAtA[i:], m.AgentportraitUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.AgentportraitUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AgentUsername) > 0 {
		i -= len(m.AgentUsername)
		copy(dAtA[i:], m.AgentUsername)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.AgentUsername)))
		i--
		dAtA[i] = 0x12
	}
	if m.AgentId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AgentId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SLogout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SLogout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SLogout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2CLogout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CLogout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CLogout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Str) > 0 {
		i -= len(m.Str)
		copy(dAtA[i:], m.Str)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Str)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SHeartbeat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SHeartbeat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SHeartbeat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.TimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CHeartbeat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CHeartbeat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CHeartbeat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.TimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CKick) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CKick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CKick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRepeatLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRepeatLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRepeatLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *C2SRename) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SRename) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SRename) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Newname) > 0 {
		i -= len(m.Newname)
		copy(dAtA[i:], m.Newname)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Newname)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRename) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRename) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRename) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Newname) > 0 {
		i -= len(m.Newname)
		copy(dAtA[i:], m.Newname)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Newname)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeviceInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeviceInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeviceInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DeviceProducter) > 0 {
		i -= len(m.DeviceProducter)
		copy(dAtA[i:], m.DeviceProducter)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.DeviceProducter)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DeviceInfo) > 0 {
		i -= len(m.DeviceInfo)
		copy(dAtA[i:], m.DeviceInfo)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.DeviceInfo)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SDeviceInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SDeviceInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SDeviceInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DeviceInfo != nil {
		{
			size, err := m.DeviceInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CDeviceInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CDeviceInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CDeviceInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SSetUserName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SSetUserName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SSetUserName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CSetUserName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CSetUserName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CSetUserName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SSetHeadPortrait) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SSetHeadPortrait) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SSetHeadPortrait) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.HeadPortraitUrl) > 0 {
		i -= len(m.HeadPortraitUrl)
		copy(dAtA[i:], m.HeadPortraitUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.HeadPortraitUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CSetHeadPortrait) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CSetHeadPortrait) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CSetHeadPortrait) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SChangePassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SChangePassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SChangePassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.StrPassword) > 0 {
		i -= len(m.StrPassword)
		copy(dAtA[i:], m.StrPassword)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.StrPassword)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CChangePassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CChangePassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CChangePassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SForgetPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SForgetPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SForgetPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RegionCode) > 0 {
		i -= len(m.RegionCode)
		copy(dAtA[i:], m.RegionCode)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.RegionCode)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.VerificationCode) > 0 {
		i -= len(m.VerificationCode)
		copy(dAtA[i:], m.VerificationCode)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.VerificationCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0x12
	}
	if m.PhoneNum != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.PhoneNum))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CForgetPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CForgetPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CForgetPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SSetFriendRemarkName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SSetFriendRemarkName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SSetFriendRemarkName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FriendRemarkName) > 0 {
		i -= len(m.FriendRemarkName)
		copy(dAtA[i:], m.FriendRemarkName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.FriendRemarkName)))
		i--
		dAtA[i] = 0x12
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CSetFriendRemarkName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CSetFriendRemarkName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CSetFriendRemarkName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FriendRemarkName) > 0 {
		i -= len(m.FriendRemarkName)
		copy(dAtA[i:], m.FriendRemarkName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.FriendRemarkName)))
		i--
		dAtA[i] = 0x12
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SGetVerificationCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SGetVerificationCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SGetVerificationCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Action != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Region) > 0 {
		i -= len(m.Region)
		copy(dAtA[i:], m.Region)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Region)))
		i--
		dAtA[i] = 0x12
	}
	if m.PhoneNum != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.PhoneNum))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CGetVerificationCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CGetVerificationCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CGetVerificationCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VoiceMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoiceMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoiceMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AudioUrl) > 0 {
		i -= len(m.AudioUrl)
		copy(dAtA[i:], m.AudioUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.AudioUrl)))
		i--
		dAtA[i] = 0x12
	}
	if m.AudioSecond != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AudioSecond))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *VideoMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.VideoThumbnail) > 0 {
		i -= len(m.VideoThumbnail)
		copy(dAtA[i:], m.VideoThumbnail)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.VideoThumbnail)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.VideoUrl) > 0 {
		i -= len(m.VideoUrl)
		copy(dAtA[i:], m.VideoUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.VideoUrl)))
		i--
		dAtA[i] = 0x12
	}
	if m.VideoSecond != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.VideoSecond))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FileMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FileMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FileThumbnail) > 0 {
		i -= len(m.FileThumbnail)
		copy(dAtA[i:], m.FileThumbnail)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.FileThumbnail)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FileUrl) > 0 {
		i -= len(m.FileUrl)
		copy(dAtA[i:], m.FileUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.FileUrl)))
		i--
		dAtA[i] = 0x12
	}
	if m.FileSize != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FileSize))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CardMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CardMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CardMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Portrait) > 0 {
		i -= len(m.Portrait)
		copy(dAtA[i:], m.Portrait)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Portrait)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ChatMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChatMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChatMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SenderAgentId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderAgentId))
		i--
		dAtA[i] = 0x78
	}
	if m.CardMessage != nil {
		{
			size, err := m.CardMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if m.FileMessage != nil {
		{
			size, err := m.FileMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.VideoMessage != nil {
		{
			size, err := m.VideoMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.VoiceMessage != nil {
		{
			size, err := m.VoiceMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if len(m.SenderRemarkName) > 0 {
		i -= len(m.SenderRemarkName)
		copy(dAtA[i:], m.SenderRemarkName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderRemarkName)))
		i--
		dAtA[i] = 0x52
	}
	if m.WithDraw {
		i--
		if m.WithDraw {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.SenderheadPortraitUrl) > 0 {
		i -= len(m.SenderheadPortraitUrl)
		copy(dAtA[i:], m.SenderheadPortraitUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderheadPortraitUrl)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.AccountIDCliTimeStamp) > 0 {
		i -= len(m.AccountIDCliTimeStamp)
		copy(dAtA[i:], m.AccountIDCliTimeStamp)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.AccountIDCliTimeStamp)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SenderName) > 0 {
		i -= len(m.SenderName)
		copy(dAtA[i:], m.SenderName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.MsgType) > 0 {
		i -= len(m.MsgType)
		copy(dAtA[i:], m.MsgType)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.MsgType)))
		i--
		dAtA[i] = 0x2a
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x10
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SPrivateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SPrivateChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SPrivateChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CliTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CliTimeStamp))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatMsg != nil {
		{
			size, err := m.ChatMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MQPrivateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQPrivateChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQPrivateChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatMsg != nil {
		{
			size, err := m.ChatMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CPrivateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CPrivateChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CPrivateChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AccountIDCliTimeStamp) > 0 {
		i -= len(m.AccountIDCliTimeStamp)
		copy(dAtA[i:], m.AccountIDCliTimeStamp)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.AccountIDCliTimeStamp)))
		i--
		dAtA[i] = 0x2a
	}
	if m.CliTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CliTimeStamp))
		i--
		dAtA[i] = 0x20
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.SenderheadPortraitUrl) > 0 {
		i -= len(m.SenderheadPortraitUrl)
		copy(dAtA[i:], m.SenderheadPortraitUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderheadPortraitUrl)))
		i--
		dAtA[i] = 0x12
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvPrivateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvPrivateChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvPrivateChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatMsg != nil {
		{
			size, err := m.ChatMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2COtherTerminalPrivateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2COtherTerminalPrivateChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2COtherTerminalPrivateChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatMsg != nil {
		{
			size, err := m.ChatMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CLoginSomewhereElse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CLoginSomewhereElse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CLoginSomewhereElse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SLastMsgTimeStamp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SLastMsgTimeStamp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SLastMsgTimeStamp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *C2SGetOfflinePrivateChatMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SGetOfflinePrivateChatMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SGetOfflinePrivateChatMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsWebSide {
		i--
		if m.IsWebSide {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CGetOfflinePrivateChatMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CGetOfflinePrivateChatMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CGetOfflinePrivateChatMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Msgs) > 0 {
		for iNdEx := len(m.Msgs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Msgs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2SHuanXinPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SHuanXinPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SHuanXinPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CHuanXinPush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CHuanXinPush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CHuanXinPush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SPicWillBeSend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SPicWillBeSend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SPicWillBeSend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2CPicWillBeSend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CPicWillBeSend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CPicWillBeSend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Uid != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SAddFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SAddFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SAddFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.MsgTimestamp))
		i--
		dAtA[i] = 0x18
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x10
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQAddFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQAddFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQAddFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SenderNickName) > 0 {
		i -= len(m.SenderNickName)
		copy(dAtA[i:], m.SenderNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x10
	}
	if m.AddFriend != nil {
		{
			size, err := m.AddFriend.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CAddFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CAddFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CAddFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x18
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x10
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvAddFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvAddFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvAddFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SenderHeadPortrait) > 0 {
		i -= len(m.SenderHeadPortrait)
		copy(dAtA[i:], m.SenderHeadPortrait)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderHeadPortrait)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SenderNickName) > 0 {
		i -= len(m.SenderNickName)
		copy(dAtA[i:], m.SenderNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderNickName)))
		i--
		dAtA[i] = 0x22
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x18
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x10
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SAgreeBecomeFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SAgreeBecomeFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SAgreeBecomeFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.MsgTimestamp))
		i--
		dAtA[i] = 0x18
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x10
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CAgreeBecomeFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CAgreeBecomeFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CAgreeBecomeFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AgreeBecomeFriendHeadPortrait) > 0 {
		i -= len(m.AgreeBecomeFriendHeadPortrait)
		copy(dAtA[i:], m.AgreeBecomeFriendHeadPortrait)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.AgreeBecomeFriendHeadPortrait)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SenderNickName) > 0 {
		i -= len(m.SenderNickName)
		copy(dAtA[i:], m.SenderNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.MsgTimestamp))
		i--
		dAtA[i] = 0x10
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvAgreeBecomeFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvAgreeBecomeFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvAgreeBecomeFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ReceiverHeadPortrait) > 0 {
		i -= len(m.ReceiverHeadPortrait)
		copy(dAtA[i:], m.ReceiverHeadPortrait)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.ReceiverHeadPortrait)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ReceiverNickName) > 0 {
		i -= len(m.ReceiverNickName)
		copy(dAtA[i:], m.ReceiverNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.ReceiverNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x10
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQAgreeBecomeFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQAgreeBecomeFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQAgreeBecomeFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FriendNickName) > 0 {
		i -= len(m.FriendNickName)
		copy(dAtA[i:], m.FriendNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.FriendNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.MsgTimestamp))
		i--
		dAtA[i] = 0x10
	}
	if m.AgreeBeFriend != nil {
		{
			size, err := m.AgreeBeFriend.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2COtherTerminalAgreeBecomeFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2COtherTerminalAgreeBecomeFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2COtherTerminalAgreeBecomeFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SenderNickName) > 0 {
		i -= len(m.SenderNickName)
		copy(dAtA[i:], m.SenderNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SReadFriendReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SReadFriendReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SReadFriendReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CReadFriendReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CReadFriendReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CReadFriendReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SDeleteFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SDeleteFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SDeleteFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQDeleteFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQDeleteFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQDeleteFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CDeleteFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CDeleteFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CDeleteFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvDeleteFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvDeleteFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvDeleteFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SConfirmDeleteFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SConfirmDeleteFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SConfirmDeleteFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CConfirmDeleteFriend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CConfirmDeleteFriend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CConfirmDeleteFriend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SCreateChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SCreateChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SCreateChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FirendIds) > 0 {
		dAtA21 := make([]byte, len(m.FirendIds)*10)
		var j20 int
		for _, num1 := range m.FirendIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA21[j20] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j20++
			}
			dAtA21[j20] = uint8(num)
			j20++
		}
		i -= j20
		copy(dAtA[i:], dAtA21[:j20])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j20))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PicChatGroup) > 0 {
		i -= len(m.PicChatGroup)
		copy(dAtA[i:], m.PicChatGroup)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.PicChatGroup)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChatGroupName) > 0 {
		i -= len(m.ChatGroupName)
		copy(dAtA[i:], m.ChatGroupName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.ChatGroupName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Topic) > 0 {
		i -= len(m.Topic)
		copy(dAtA[i:], m.Topic)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Topic)))
		i--
		dAtA[i] = 0x32
	}
	if m.ChatGroupAdminId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupAdminId))
		i--
		dAtA[i] = 0x28
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Members) > 0 {
		dAtA23 := make([]byte, len(m.Members)*10)
		var j22 int
		for _, num1 := range m.Members {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA23[j22] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j22++
			}
			dAtA23[j22] = uint8(num)
			j22++
		}
		i -= j22
		copy(dAtA[i:], dAtA23[:j22])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j22))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PicChatGroup) > 0 {
		i -= len(m.PicChatGroup)
		copy(dAtA[i:], m.PicChatGroup)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.PicChatGroup)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChatGroupName) > 0 {
		i -= len(m.ChatGroupName)
		copy(dAtA[i:], m.ChatGroupName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.ChatGroupName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CCreateChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CCreateChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CCreateChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ccg != nil {
		{
			size, err := m.Ccg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MQCreateChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQCreateChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQCreateChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ccg != nil {
		{
			size, err := m.Ccg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvCreateChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvCreateChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvCreateChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ccg != nil {
		{
			size, err := m.Ccg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserNickName) > 0 {
		i -= len(m.UserNickName)
		copy(dAtA[i:], m.UserNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UserNickName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ChatGroupReqMessage) > 0 {
		i -= len(m.ChatGroupReqMessage)
		copy(dAtA[i:], m.ChatGroupReqMessage)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.ChatGroupReqMessage)))
		i--
		dAtA[i] = 0x1a
	}
	if m.UserId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Rjcg != nil {
		{
			size, err := m.Rjcg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Rjcg != nil {
		{
			size, err := m.Rjcg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MQReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReqUid != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReqUid))
		i--
		dAtA[i] = 0x10
	}
	if m.Rjcg != nil {
		{
			size, err := m.Rjcg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CSomeOneReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CSomeOneReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CSomeOneReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReqUid != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReqUid))
		i--
		dAtA[i] = 0x10
	}
	if m.Rjcg != nil {
		{
			size, err := m.Rjcg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SAgreeSomeOneReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SAgreeSomeOneReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SAgreeSomeOneReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ReqNickName) > 0 {
		i -= len(m.ReqNickName)
		copy(dAtA[i:], m.ReqNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.ReqNickName)))
		i--
		dAtA[i] = 0x22
	}
	if m.ReqId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReqId))
		i--
		dAtA[i] = 0x18
	}
	if m.ReqUid != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReqUid))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQAgreeSomeOneReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQAgreeSomeOneReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQAgreeSomeOneReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQManagerAgreeSomeOneReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQManagerAgreeSomeOneReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQManagerAgreeSomeOneReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserNickName) > 0 {
		i -= len(m.UserNickName)
		copy(dAtA[i:], m.UserNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UserNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.UserId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CManagerAgreeJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CManagerAgreeJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CManagerAgreeJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserNickName) > 0 {
		i -= len(m.UserNickName)
		copy(dAtA[i:], m.UserNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UserNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.UserId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SRefuseSomeOneReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SRefuseSomeOneReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SRefuseSomeOneReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RefuseReqJoinChatGroupMessage) > 0 {
		i -= len(m.RefuseReqJoinChatGroupMessage)
		copy(dAtA[i:], m.RefuseReqJoinChatGroupMessage)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.RefuseReqJoinChatGroupMessage)))
		i--
		dAtA[i] = 0x22
	}
	if m.ReqUid != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReqUid))
		i--
		dAtA[i] = 0x18
	}
	if m.UserId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQRefuseSomeOneReqJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQRefuseSomeOneReqJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQRefuseSomeOneReqJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RefuseReqJoinChatGroupMessage) > 0 {
		i -= len(m.RefuseReqJoinChatGroupMessage)
		copy(dAtA[i:], m.RefuseReqJoinChatGroupMessage)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.RefuseReqJoinChatGroupMessage)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ReqUid != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReqUid))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CManagerRefuseJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CManagerRefuseJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CManagerRefuseJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RefuseReqJoinChatGroupMessage) > 0 {
		i -= len(m.RefuseReqJoinChatGroupMessage)
		copy(dAtA[i:], m.RefuseReqJoinChatGroupMessage)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.RefuseReqJoinChatGroupMessage)))
		i--
		dAtA[i] = 0x12
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ChatGroupMemberRds) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChatGroupMemberRds) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChatGroupMemberRds) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserHeadPortraitUrl) > 0 {
		i -= len(m.UserHeadPortraitUrl)
		copy(dAtA[i:], m.UserHeadPortraitUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UserHeadPortraitUrl)))
		i--
		dAtA[i] = 0x22
	}
	if m.Flag != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.Flag))
		i--
		dAtA[i] = 0x18
	}
	if len(m.UserNickName) > 0 {
		i -= len(m.UserNickName)
		copy(dAtA[i:], m.UserNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UserNickName)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SChatGroupInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SChatGroupInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SChatGroupInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CChatGroupInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CChatGroupInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CChatGroupInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ChatGroupMemberRds) > 0 {
		for iNdEx := len(m.ChatGroupMemberRds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ChatGroupMemberRds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.ChatGroupOwnerId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupOwnerId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ChatGroupHeadPortrait) > 0 {
		i -= len(m.ChatGroupHeadPortrait)
		copy(dAtA[i:], m.ChatGroupHeadPortrait)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.ChatGroupHeadPortrait)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChatGroupName) > 0 {
		i -= len(m.ChatGroupName)
		copy(dAtA[i:], m.ChatGroupName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.ChatGroupName)))
		i--
		dAtA[i] = 0x12
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *InviteJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InviteJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InviteJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InviteeNickName) > 0 {
		i -= len(m.InviteeNickName)
		copy(dAtA[i:], m.InviteeNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.InviteeNickName)))
		i--
		dAtA[i] = 0x2a
	}
	if m.InviteeId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.InviteeId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.InviterNickName) > 0 {
		i -= len(m.InviterNickName)
		copy(dAtA[i:], m.InviterNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.InviterNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.InviterId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.InviterId))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SInviteJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SInviteJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SInviteJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FriendIds) > 0 {
		dAtA32 := make([]byte, len(m.FriendIds)*10)
		var j31 int
		for _, num1 := range m.FriendIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA32[j31] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j31++
			}
			dAtA32[j31] = uint8(num)
			j31++
		}
		i -= j31
		copy(dAtA[i:], dAtA32[:j31])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j31))
		i--
		dAtA[i] = 0x12
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQInviteJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQInviteJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQInviteJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InviteJoinChatGroup != nil {
		{
			size, err := m.InviteJoinChatGroup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CInviteYouJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CInviteYouJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CInviteYouJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InviteJoinChatGroup != nil {
		{
			size, err := m.InviteJoinChatGroup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvInviteJoinChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvInviteJoinChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvInviteJoinChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SCancelChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SCancelChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SCancelChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CancelChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CancelChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CancelChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserNickName) > 0 {
		i -= len(m.UserNickName)
		copy(dAtA[i:], m.UserNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UserNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.UserId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQCancelChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQCancelChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQCancelChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CancelChatGroup != nil {
		{
			size, err := m.CancelChatGroup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CSomeOneCancelChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CSomeOneCancelChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CSomeOneCancelChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CancelChatGroup != nil {
		{
			size, err := m.CancelChatGroup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvCancelChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvCancelChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvCancelChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SUnChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SUnChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SUnChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQUnChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQUnChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQUnChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CUnChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CUnChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CUnChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvUnChatGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvUnChatGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvUnChatGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ChatGroupKick) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChatGroupKick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChatGroupKick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserNickName) > 0 {
		i -= len(m.UserNickName)
		copy(dAtA[i:], m.UserNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UserNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.UserId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SChatGroupKick) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SChatGroupKick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SChatGroupKick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupKick != nil {
		{
			size, err := m.ChatGroupKick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MQChatGroupKick) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQChatGroupKick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQChatGroupKick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupKick != nil {
		{
			size, err := m.ChatGroupKick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CKickedByChatGroupManager) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CKickedByChatGroupManager) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CKickedByChatGroupManager) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupKick != nil {
		{
			size, err := m.ChatGroupKick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CManagerKickSomeOne) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CManagerKickSomeOne) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CManagerKickSomeOne) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupKick != nil {
		{
			size, err := m.ChatGroupKick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvChatGroupKick) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvChatGroupKick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvChatGroupKick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SChatGroupList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SChatGroupList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SChatGroupList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2CChatGroupList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CChatGroupList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CChatGroupList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ChatGroupId) > 0 {
		dAtA42 := make([]byte, len(m.ChatGroupId)*10)
		var j41 int
		for _, num1 := range m.ChatGroupId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA42[j41] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j41++
			}
			dAtA42[j41] = uint8(num)
			j41++
		}
		i -= j41
		copy(dAtA[i:], dAtA42[:j41])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j41))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GroupMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CardMessage != nil {
		{
			size, err := m.CardMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.FileMessage != nil {
		{
			size, err := m.FileMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.VideoMessage != nil {
		{
			size, err := m.VideoMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.VoiceMessage != nil {
		{
			size, err := m.VoiceMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.WithDraw {
		i--
		if m.WithDraw {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.SenderheadPortraitUrl) > 0 {
		i -= len(m.SenderheadPortraitUrl)
		copy(dAtA[i:], m.SenderheadPortraitUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderheadPortraitUrl)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.AccoutIdCliTimeStamp) > 0 {
		i -= len(m.AccoutIdCliTimeStamp)
		copy(dAtA[i:], m.AccoutIdCliTimeStamp)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.AccoutIdCliTimeStamp)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SenderName) > 0 {
		i -= len(m.SenderName)
		copy(dAtA[i:], m.SenderName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.SenderName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.MsgType) > 0 {
		i -= len(m.MsgType)
		copy(dAtA[i:], m.MsgType)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.MsgType)))
		i--
		dAtA[i] = 0x2a
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SenderId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SenderId))
		i--
		dAtA[i] = 0x10
	}
	if m.ReceiveGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiveGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SGroupChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SGroupChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SGroupChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CliTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CliTimeStamp))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatMsg != nil {
		{
			size, err := m.ChatMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MQGroupChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQGroupChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQGroupChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatMsg != nil {
		{
			size, err := m.ChatMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CGroupChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CGroupChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CGroupChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CliTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CliTimeStamp))
		i--
		dAtA[i] = 0x20
	}
	if len(m.AccoutIdCliTimeStamp) > 0 {
		i -= len(m.AccoutIdCliTimeStamp)
		copy(dAtA[i:], m.AccoutIdCliTimeStamp)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.AccoutIdCliTimeStamp)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x10
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvGroupChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvGroupChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvGroupChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatMsg != nil {
		{
			size, err := m.ChatMsg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SChatGroupLastMsgTimeStamp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SChatGroupLastMsgTimeStamp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SChatGroupLastMsgTimeStamp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x10
	}
	if m.SrvTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SGetOfflineGroupChatMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SGetOfflineGroupChatMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SGetOfflineGroupChatMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.MsgTimestamp))
		i--
		dAtA[i] = 0x18
	}
	if m.ChatGroupLastMessageTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupLastMessageTimestamp))
		i--
		dAtA[i] = 0x10
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CGetOfflineGroupChatMsg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CGetOfflineGroupChatMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CGetOfflineGroupChatMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.MsgTimestamp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Msgs) > 0 {
		for iNdEx := len(m.Msgs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Msgs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.ChatGroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ChatGroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SWithdrawGroupMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SWithdrawGroupMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SWithdrawGroupMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.GroupId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.GroupId))
		i--
		dAtA[i] = 0x10
	}
	if m.ServerTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ServerTimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CWithdrawGroupMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CWithdrawGroupMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CWithdrawGroupMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ServerTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ServerTimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SFindUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SFindUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SFindUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CFindUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CFindUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CFindUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		for iNdEx := len(m.Url) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Url[iNdEx])
			copy(dAtA[i:], m.Url[iNdEx])
			i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Url[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.BShow {
		i--
		if m.BShow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.UserBriefInfo != nil {
		{
			size, err := m.UserBriefInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SAddBlackList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SAddBlackList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SAddBlackList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CAddBlackList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CAddBlackList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CAddBlackList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SMoveOutFriendBlackList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SMoveOutFriendBlackList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SMoveOutFriendBlackList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CMoveOutFriendBlackList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CMoveOutFriendBlackList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CMoveOutFriendBlackList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SGetFriendBlackList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SGetFriendBlackList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SGetFriendBlackList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2CGetFriendBlackList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CGetFriendBlackList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CGetFriendBlackList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.BlackListIds) > 0 {
		dAtA52 := make([]byte, len(m.BlackListIds)*10)
		var j51 int
		for _, num1 := range m.BlackListIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA52[j51] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j51++
			}
			dAtA52[j51] = uint8(num)
			j51++
		}
		i -= j51
		copy(dAtA[i:], dAtA52[:j51])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j51))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SSetWeiboCover) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SSetWeiboCover) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SSetWeiboCover) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.WeiboCoverPic) > 0 {
		i -= len(m.WeiboCoverPic)
		copy(dAtA[i:], m.WeiboCoverPic)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.WeiboCoverPic)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CSetWeiboCover) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CSetWeiboCover) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CSetWeiboCover) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SGetWeiboCover) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SGetWeiboCover) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SGetWeiboCover) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CGetWeiboCover) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CGetWeiboCover) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CGetWeiboCover) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x1a
	}
	if m.IsLikeWeiboCover {
		i--
		if m.IsLikeWeiboCover {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.StrWeiboCoverPicUrl) > 0 {
		i -= len(m.StrWeiboCoverPicUrl)
		copy(dAtA[i:], m.StrWeiboCoverPicUrl)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.StrWeiboCoverPicUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SLikeFriendWeiboCover) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SLikeFriendWeiboCover) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SLikeFriendWeiboCover) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CLikeFriendWeiboCover) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CLikeFriendWeiboCover) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CLikeFriendWeiboCover) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Weibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Weibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Weibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BDelete {
		i--
		if m.BDelete {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.SrvTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.SrvTimestamp))
		i--
		dAtA[i] = 0x38
	}
	if len(m.UrlBin) > 0 {
		i -= len(m.UrlBin)
		copy(dAtA[i:], m.UrlBin)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.UrlBin)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Type != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PublisherNickName) > 0 {
		i -= len(m.PublisherNickName)
		copy(dAtA[i:], m.PublisherNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.PublisherNickName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.PublisherId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.PublisherId))
		i--
		dAtA[i] = 0x10
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WeiboUrl) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WeiboUrl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WeiboUrl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Urls) > 0 {
		for iNdEx := len(m.Urls) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Urls[iNdEx])
			copy(dAtA[i:], m.Urls[iNdEx])
			i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Urls[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2SPublishWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SPublishWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SPublishWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Url) > 0 {
		for iNdEx := len(m.Url) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Url[iNdEx])
			copy(dAtA[i:], m.Url[iNdEx])
			i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Url[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x12
	}
	if m.ContentType != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ContentType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQPublishWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQPublishWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQPublishWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Weibo != nil {
		{
			size, err := m.Weibo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CPublishWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CPublishWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CPublishWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Weibo != nil {
		{
			size, err := m.Weibo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvPublishWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvPublishWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvPublishWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LikeWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LikeWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LikerNickName) > 0 {
		i -= len(m.LikerNickName)
		copy(dAtA[i:], m.LikerNickName)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.LikerNickName)))
		i--
		dAtA[i] = 0x22
	}
	if m.LikerId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.LikerId))
		i--
		dAtA[i] = 0x18
	}
	if m.WeiboPublisherId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboPublisherId))
		i--
		dAtA[i] = 0x10
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SLikeWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SLikeWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SLikeWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x10
	}
	if m.WeiboPublisherId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboPublisherId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQLikeWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQLikeWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQLikeWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LikeWeibo != nil {
		{
			size, err := m.LikeWeibo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CLikeWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CLikeWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CLikeWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LikeWeibo != nil {
		{
			size, err := m.LikeWeibo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvLikeWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvLikeWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvLikeWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SCancelLikeWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SCancelLikeWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SCancelLikeWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x10
	}
	if m.WeiboPublisherId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboPublisherId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CCancelLikeWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CCancelLikeWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CCancelLikeWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReplyWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReplyWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplyWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CommentTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CommentTimeStamp))
		i--
		dAtA[i] = 0x40
	}
	if len(m.CommentContent) > 0 {
		i -= len(m.CommentContent)
		copy(dAtA[i:], m.CommentContent)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.CommentContent)))
		i--
		dAtA[i] = 0x3a
	}
	if m.CommentatorId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CommentatorId))
		i--
		dAtA[i] = 0x30
	}
	if m.BeCommentatorId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.BeCommentatorId))
		i--
		dAtA[i] = 0x28
	}
	if m.BeCommentedId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.BeCommentedId))
		i--
		dAtA[i] = 0x20
	}
	if m.CommentedId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CommentedId))
		i--
		dAtA[i] = 0x18
	}
	if m.WeiboPublisherId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboPublisherId))
		i--
		dAtA[i] = 0x10
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SReplyWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SReplyWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SReplyWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReplyWeibo != nil {
		{
			size, err := m.ReplyWeibo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MQReplyWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQReplyWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQReplyWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReplyWeibo != nil {
		{
			size, err := m.ReplyWeibo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CReplyWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CReplyWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CReplyWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReplyWeibo != nil {
		{
			size, err := m.ReplyWeibo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvReplyWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvReplyWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvReplyWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CommentId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CommentId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SDeleteWeiboReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SDeleteWeiboReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SDeleteWeiboReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CommentId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.CommentId))
		i--
		dAtA[i] = 0x18
	}
	if m.WeiboPublisherId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboPublisherId))
		i--
		dAtA[i] = 0x10
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CDeleteWeiboReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CDeleteWeiboReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CDeleteWeiboReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SDeleteWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SDeleteWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SDeleteWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MQDeleteWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MQDeleteWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MQDeleteWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x10
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CDeleteWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CDeleteWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CDeleteWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WeiboId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.WeiboId))
		i--
		dAtA[i] = 0x10
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CRecvDeleteWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CRecvDeleteWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CRecvDeleteWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BrowseWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BrowseWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BrowseWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ReplayWeibo) > 0 {
		for iNdEx := len(m.ReplayWeibo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ReplayWeibo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.LikerId) > 0 {
		dAtA61 := make([]byte, len(m.LikerId)*10)
		var j60 int
		for _, num1 := range m.LikerId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA61[j60] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j60++
			}
			dAtA61[j60] = uint8(num)
			j60++
		}
		i -= j60
		copy(dAtA[i:], dAtA61[:j60])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j60))
		i--
		dAtA[i] = 0x12
	}
	if m.Weibo != nil {
		{
			size, err := m.Weibo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgStruct(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SBrowseSomeoneWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SBrowseSomeoneWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SBrowseSomeoneWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x10
	}
	if m.LastTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.LastTimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CBrowseSomeoneWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CBrowseSomeoneWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CBrowseSomeoneWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Strategy != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.Strategy))
		i--
		dAtA[i] = 0x10
	}
	if len(m.BrowseWeibo) > 0 {
		for iNdEx := len(m.BrowseWeibo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BrowseWeibo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2SBrowseFriendWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SBrowseFriendWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SBrowseFriendWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.LastTimeStamp))
		i--
		dAtA[i] = 0x10
	}
	if m.FriendId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.FriendId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CBrowseFriendWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CBrowseFriendWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CBrowseFriendWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BrowseWeibo) > 0 {
		for iNdEx := len(m.BrowseWeibo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BrowseWeibo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2SBrowseAllWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SBrowseAllWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SBrowseAllWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastMsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.LastMsgTimestamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CBrowseAllWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CBrowseAllWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CBrowseAllWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.BrowseWeibo) > 0 {
		for iNdEx := len(m.BrowseWeibo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BrowseWeibo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2SDontLookFriendWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SDontLookFriendWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SDontLookFriendWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BNotLook {
		i--
		if m.BNotLook {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.FriendIds) > 0 {
		dAtA64 := make([]byte, len(m.FriendIds)*10)
		var j63 int
		for _, num1 := range m.FriendIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA64[j63] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j63++
			}
			dAtA64[j63] = uint8(num)
			j63++
		}
		i -= j63
		copy(dAtA[i:], dAtA64[:j63])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j63))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CDontLookFriendWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CDontLookFriendWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CDontLookFriendWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.FriendBriefInfos) > 0 {
		for iNdEx := len(m.FriendBriefInfos) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendBriefInfos[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2SForbiddenFriendLookWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SForbiddenFriendLookWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SForbiddenFriendLookWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BForbidden {
		i--
		if m.BForbidden {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.FriendIds) > 0 {
		dAtA66 := make([]byte, len(m.FriendIds)*10)
		var j65 int
		for _, num1 := range m.FriendIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA66[j65] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j65++
			}
			dAtA66[j65] = uint8(num)
			j65++
		}
		i -= j65
		copy(dAtA[i:], dAtA66[:j65])
		i = encodeVarintMsgStruct(dAtA, i, uint64(j65))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CForbiddenFriendLookWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CForbiddenFriendLookWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CForbiddenFriendLookWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.FriendBriefInfos) > 0 {
		for iNdEx := len(m.FriendBriefInfos) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendBriefInfos[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2SAllowStrangerLookWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SAllowStrangerLookWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SAllowStrangerLookWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Allow {
		i--
		if m.Allow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CAllowStrangerLookWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CAllowStrangerLookWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CAllowStrangerLookWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SIsAllowStrangerLookWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SIsAllowStrangerLookWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SIsAllowStrangerLookWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2CIsAllowStrangerLookWeibo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CIsAllowStrangerLookWeibo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CIsAllowStrangerLookWeibo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x12
	}
	if m.BAllow {
		i--
		if m.BAllow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SGetFriendLookWeiboStrategy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SGetFriendLookWeiboStrategy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SGetFriendLookWeiboStrategy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2CGetFriendLookWeiboStrategy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CGetFriendLookWeiboStrategy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CGetFriendLookWeiboStrategy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x12
	}
	if m.Strategy != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.Strategy))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SFriendLookWeiboStrategy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SFriendLookWeiboStrategy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SFriendLookWeiboStrategy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Strategy != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.Strategy))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CFriendLookWeiboStrategy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CFriendLookWeiboStrategy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CFriendLookWeiboStrategy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *C2SGetDontLookFriendWeiboList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SGetDontLookFriendWeiboList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SGetDontLookFriendWeiboList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2CGetDontLookFriendWeiboList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CGetDontLookFriendWeiboList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CGetDontLookFriendWeiboList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.FriendBriefInfo) > 0 {
		for iNdEx := len(m.FriendBriefInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendBriefInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2SGetForbiddenFriendLookWeiboList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SGetForbiddenFriendLookWeiboList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SGetForbiddenFriendLookWeiboList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *S2CGetForbiddenFriendLookWeiboList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CGetForbiddenFriendLookWeiboList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CGetForbiddenFriendLookWeiboList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ret) > 0 {
		i -= len(m.Ret)
		copy(dAtA[i:], m.Ret)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Ret)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.FriendBriefInfo) > 0 {
		for iNdEx := len(m.FriendBriefInfo) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FriendBriefInfo[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMsgStruct(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *C2SWithdrawMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SWithdrawMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SWithdrawMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReceiverId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ReceiverId))
		i--
		dAtA[i] = 0x10
	}
	if m.ServerTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ServerTimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2CWithdrawMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CWithdrawMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CWithdrawMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ServerTimeStamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.ServerTimeStamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *C2SThirdPlatformAccountLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2SThirdPlatformAccountLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2SThirdPlatformAccountLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TerminalType != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.TerminalType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *S2CThirdPlatformAccountLogin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2CThirdPlatformAccountLogin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2CThirdPlatformAccountLogin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AgentNickname) > 0 {
		i -= len(m.AgentNickname)
		copy(dAtA[i:], m.AgentNickname)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.AgentNickname)))
		i--
		dAtA[i] = 0x2a
	}
	if m.AgentId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AgentId))
		i--
		dAtA[i] = 0x20
	}
	if m.LastMsgTimestamp != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.LastMsgTimestamp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintMsgStruct(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x12
	}
	if m.AccountId != 0 {
		i = encodeVarintMsgStruct(dAtA, i, uint64(m.AccountId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintMsgStruct(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgStruct(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *WebSocketMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MsgId != 0 {
		n += 1 + sovMsgStruct(uint64(m.MsgId))
	}
	l = len(m.MsgIdStr)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.BinMsg)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CErrorCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ErrCode != 0 {
		n += 1 + sovMsgStruct(uint64(m.ErrCode))
	}
	if m.MsgTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.MsgTimeStamp))
	}
	l = len(m.ErrNotice)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2LGateAddr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *L2CGateAddr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ip)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SRegisterAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	l = len(m.Pwd)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.CliTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.CliTimeStamp))
	}
	if m.TerminalType != 0 {
		n += 1 + sovMsgStruct(uint64(m.TerminalType))
	}
	l = len(m.VerificationCode)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.RegionCode)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRegisterAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.LastMsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.LastMsgTimestamp))
	}
	if m.HuanXinAccount != nil {
		l = m.HuanXinAccount.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	if m.CliTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.CliTimeStamp))
	}
	l = len(m.Pwd)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.TerminalType != 0 {
		n += 1 + sovMsgStruct(uint64(m.TerminalType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SUsernameLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.Pwd)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.CliTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.CliTimeStamp))
	}
	if m.TerminalType != 0 {
		n += 1 + sovMsgStruct(uint64(m.TerminalType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserBriefInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.HeadPortrait)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FriendRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	if m.ReqDateTime != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReqDateTime))
	}
	l = len(m.SenderNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.SenderHeadPortrait)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FriendVerification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.BecomeFriendDateTime != 0 {
		n += 1 + sovMsgStruct(uint64(m.BecomeFriendDateTime))
	}
	l = len(m.FriendNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.FriendHeadPortrait)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChatGroupMember) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FriendInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.RemarkName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.PortraitUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.Creator != 0 {
		n += 1 + sovMsgStruct(uint64(m.Creator))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.Pic)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PersonChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroup != nil {
		l = m.ChatGroup.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.LastMsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.LastMsgTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HuanXinAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.PortraitUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.LastMsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.LastMsgTimestamp))
	}
	if len(m.FriendReqs) > 0 {
		for _, e := range m.FriendReqs {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.FriendVers) > 0 {
		for _, e := range m.FriendVers {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.ChatGroupMembers) > 0 {
		for _, e := range m.ChatGroupMembers {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.ReqJoinChatGroup) > 0 {
		for _, e := range m.ReqJoinChatGroup {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.FriendInfo) > 0 {
		for _, e := range m.FriendInfo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.ChatGroups) > 0 {
		for _, e := range m.ChatGroups {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.DeleteFriendId) > 0 {
		l = 0
		for _, e := range m.DeleteFriendId {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	if m.HuanXinAccount != nil {
		l = m.HuanXinAccount.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if len(m.AgentInfo) > 0 {
		for _, e := range m.AgentInfo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CUsernameLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.PortraitUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.LastMsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.LastMsgTimestamp))
	}
	if len(m.FriendReqs) > 0 {
		for _, e := range m.FriendReqs {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.FriendVers) > 0 {
		for _, e := range m.FriendVers {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.ChatGroupMembers) > 0 {
		for _, e := range m.ChatGroupMembers {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.ReqJoinChatGroup) > 0 {
		for _, e := range m.ReqJoinChatGroup {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.FriendInfo) > 0 {
		for _, e := range m.FriendInfo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.ChatGroups) > 0 {
		for _, e := range m.ChatGroups {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if len(m.DeleteFriendId) > 0 {
		l = 0
		for _, e := range m.DeleteFriendId {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	if m.HuanXinAccount != nil {
		l = m.HuanXinAccount.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if len(m.AgentInfo) > 0 {
		for _, e := range m.AgentInfo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AgentInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AgentId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AgentId))
	}
	l = len(m.AgentUsername)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.AgentportraitUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SLogout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CLogout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Str)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SHeartbeat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.TimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CHeartbeat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.TimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CKick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRepeatLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SRename) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Newname)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRename) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Newname)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeviceInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DeviceInfo)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.DeviceProducter)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SDeviceInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DeviceInfo != nil {
		l = m.DeviceInfo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CDeviceInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SSetUserName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CSetUserName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SSetHeadPortrait) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HeadPortraitUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CSetHeadPortrait) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SChangePassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.StrPassword)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CChangePassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SForgetPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PhoneNum != 0 {
		n += 1 + sovMsgStruct(uint64(m.PhoneNum))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.VerificationCode)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.RegionCode)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CForgetPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SSetFriendRemarkName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	l = len(m.FriendRemarkName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CSetFriendRemarkName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	l = len(m.FriendRemarkName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SGetVerificationCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PhoneNum != 0 {
		n += 1 + sovMsgStruct(uint64(m.PhoneNum))
	}
	l = len(m.Region)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.Action != 0 {
		n += 1 + sovMsgStruct(uint64(m.Action))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CGetVerificationCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoiceMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AudioSecond != 0 {
		n += 1 + sovMsgStruct(uint64(m.AudioSecond))
	}
	l = len(m.AudioUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.VideoSecond != 0 {
		n += 1 + sovMsgStruct(uint64(m.VideoSecond))
	}
	l = len(m.VideoUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.VideoThumbnail)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FileMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FileSize != 0 {
		n += 1 + sovMsgStruct(uint64(m.FileSize))
	}
	l = len(m.FileUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.FileThumbnail)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CardMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovMsgStruct(uint64(m.Id))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.Portrait)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChatMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	l = len(m.MsgType)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.SenderName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.AccountIDCliTimeStamp)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.SenderheadPortraitUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.WithDraw {
		n += 2
	}
	l = len(m.SenderRemarkName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.VoiceMessage != nil {
		l = m.VoiceMessage.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.VideoMessage != nil {
		l = m.VideoMessage.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.FileMessage != nil {
		l = m.FileMessage.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.CardMessage != nil {
		l = m.CardMessage.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.SenderAgentId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderAgentId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SPrivateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatMsg != nil {
		l = m.ChatMsg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.CliTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.CliTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQPrivateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatMsg != nil {
		l = m.ChatMsg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CPrivateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	l = len(m.SenderheadPortraitUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	if m.CliTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.CliTimeStamp))
	}
	l = len(m.AccountIDCliTimeStamp)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvPrivateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatMsg != nil {
		l = m.ChatMsg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2COtherTerminalPrivateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatMsg != nil {
		l = m.ChatMsg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CLoginSomewhereElse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SLastMsgTimeStamp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SGetOfflinePrivateChatMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsWebSide {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CGetOfflinePrivateChatMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Msgs) > 0 {
		for _, e := range m.Msgs {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SHuanXinPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CHuanXinPush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SPicWillBeSend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CPicWillBeSend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovMsgStruct(uint64(m.Uid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SAddFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	if m.MsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.MsgTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQAddFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AddFriend != nil {
		l = m.AddFriend.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	l = len(m.SenderNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CAddFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvAddFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	l = len(m.SenderNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.SenderHeadPortrait)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SAgreeBecomeFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	if m.MsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.MsgTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CAgreeBecomeFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	if m.MsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.MsgTimestamp))
	}
	l = len(m.SenderNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.AgreeBecomeFriendHeadPortrait)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvAgreeBecomeFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	l = len(m.ReceiverNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.ReceiverHeadPortrait)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQAgreeBecomeFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AgreeBeFriend != nil {
		l = m.AgreeBeFriend.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.MsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.MsgTimestamp))
	}
	l = len(m.FriendNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2COtherTerminalAgreeBecomeFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	l = len(m.SenderNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SReadFriendReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CReadFriendReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SDeleteFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQDeleteFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CDeleteFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvDeleteFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SConfirmDeleteFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CConfirmDeleteFriend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SCreateChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChatGroupName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.PicChatGroup)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if len(m.FirendIds) > 0 {
		l = 0
		for _, e := range m.FirendIds {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChatGroupName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.PicChatGroup)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if len(m.Members) > 0 {
		l = 0
		for _, e := range m.Members {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.ChatGroupAdminId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupAdminId))
	}
	l = len(m.Topic)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CCreateChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ccg != nil {
		l = m.Ccg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQCreateChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ccg != nil {
		l = m.Ccg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvCreateChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ccg != nil {
		l = m.Ccg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.UserId != 0 {
		n += 1 + sovMsgStruct(uint64(m.UserId))
	}
	l = len(m.ChatGroupReqMessage)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.UserNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Rjcg != nil {
		l = m.Rjcg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Rjcg != nil {
		l = m.Rjcg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Rjcg != nil {
		l = m.Rjcg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.ReqUid != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReqUid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CSomeOneReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Rjcg != nil {
		l = m.Rjcg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.ReqUid != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReqUid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SAgreeSomeOneReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.ReqUid != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReqUid))
	}
	if m.ReqId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReqId))
	}
	l = len(m.ReqNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQAgreeSomeOneReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQManagerAgreeSomeOneReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.UserId != 0 {
		n += 1 + sovMsgStruct(uint64(m.UserId))
	}
	l = len(m.UserNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CManagerAgreeJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.UserId != 0 {
		n += 1 + sovMsgStruct(uint64(m.UserId))
	}
	l = len(m.UserNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.UserId != 0 {
		n += 1 + sovMsgStruct(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SRefuseSomeOneReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.UserId != 0 {
		n += 1 + sovMsgStruct(uint64(m.UserId))
	}
	if m.ReqUid != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReqUid))
	}
	l = len(m.RefuseReqJoinChatGroupMessage)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQRefuseSomeOneReqJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.ReqUid != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReqUid))
	}
	l = len(m.RefuseReqJoinChatGroupMessage)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CManagerRefuseJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	l = len(m.RefuseReqJoinChatGroupMessage)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChatGroupMemberRds) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMsgStruct(uint64(m.UserId))
	}
	l = len(m.UserNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.Flag != 0 {
		n += 1 + sovMsgStruct(uint64(m.Flag))
	}
	l = len(m.UserHeadPortraitUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SChatGroupInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CChatGroupInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	l = len(m.ChatGroupName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.ChatGroupHeadPortrait)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.ChatGroupOwnerId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupOwnerId))
	}
	if len(m.ChatGroupMemberRds) > 0 {
		for _, e := range m.ChatGroupMemberRds {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InviteJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.InviterId != 0 {
		n += 1 + sovMsgStruct(uint64(m.InviterId))
	}
	l = len(m.InviterNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.InviteeId != 0 {
		n += 1 + sovMsgStruct(uint64(m.InviteeId))
	}
	l = len(m.InviteeNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SInviteJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if len(m.FriendIds) > 0 {
		l = 0
		for _, e := range m.FriendIds {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQInviteJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InviteJoinChatGroup != nil {
		l = m.InviteJoinChatGroup.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CInviteYouJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InviteJoinChatGroup != nil {
		l = m.InviteJoinChatGroup.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvInviteJoinChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SCancelChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CancelChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.UserId != 0 {
		n += 1 + sovMsgStruct(uint64(m.UserId))
	}
	l = len(m.UserNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQCancelChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CancelChatGroup != nil {
		l = m.CancelChatGroup.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CSomeOneCancelChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CancelChatGroup != nil {
		l = m.CancelChatGroup.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvCancelChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SUnChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQUnChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CUnChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvUnChatGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChatGroupKick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.UserId != 0 {
		n += 1 + sovMsgStruct(uint64(m.UserId))
	}
	l = len(m.UserNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SChatGroupKick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupKick != nil {
		l = m.ChatGroupKick.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQChatGroupKick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupKick != nil {
		l = m.ChatGroupKick.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CKickedByChatGroupManager) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupKick != nil {
		l = m.ChatGroupKick.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CManagerKickSomeOne) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupKick != nil {
		l = m.ChatGroupKick.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvChatGroupKick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SChatGroupList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CChatGroupList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ChatGroupId) > 0 {
		l = 0
		for _, e := range m.ChatGroupId {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReceiveGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiveGroupId))
	}
	if m.SenderId != 0 {
		n += 1 + sovMsgStruct(uint64(m.SenderId))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	l = len(m.MsgType)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.SenderName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.AccoutIdCliTimeStamp)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.SenderheadPortraitUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.WithDraw {
		n += 2
	}
	if m.VoiceMessage != nil {
		l = m.VoiceMessage.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.VideoMessage != nil {
		l = m.VideoMessage.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.FileMessage != nil {
		l = m.FileMessage.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.CardMessage != nil {
		l = m.CardMessage.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SGroupChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatMsg != nil {
		l = m.ChatMsg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.CliTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.CliTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQGroupChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatMsg != nil {
		l = m.ChatMsg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CGroupChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	l = len(m.AccoutIdCliTimeStamp)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.CliTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.CliTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvGroupChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatMsg != nil {
		l = m.ChatMsg.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SChatGroupLastMsgTimeStamp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SrvTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimeStamp))
	}
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SGetOfflineGroupChatMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if m.ChatGroupLastMessageTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupLastMessageTimestamp))
	}
	if m.MsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.MsgTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CGetOfflineGroupChatMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChatGroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ChatGroupId))
	}
	if len(m.Msgs) > 0 {
		for _, e := range m.Msgs {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.MsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.MsgTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SWithdrawGroupMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ServerTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.ServerTimeStamp))
	}
	if m.GroupId != 0 {
		n += 1 + sovMsgStruct(uint64(m.GroupId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CWithdrawGroupMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ServerTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.ServerTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SFindUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CFindUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserBriefInfo != nil {
		l = m.UserBriefInfo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.BShow {
		n += 2
	}
	if len(m.Url) > 0 {
		for _, s := range m.Url {
			l = len(s)
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SAddBlackList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CAddBlackList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SMoveOutFriendBlackList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CMoveOutFriendBlackList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SGetFriendBlackList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CGetFriendBlackList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BlackListIds) > 0 {
		l = 0
		for _, e := range m.BlackListIds {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SSetWeiboCover) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.WeiboCoverPic)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CSetWeiboCover) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SGetWeiboCover) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMsgStruct(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CGetWeiboCover) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.StrWeiboCoverPicUrl)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.IsLikeWeiboCover {
		n += 2
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SLikeFriendWeiboCover) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CLikeFriendWeiboCover) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Weibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.PublisherId != 0 {
		n += 1 + sovMsgStruct(uint64(m.PublisherId))
	}
	l = len(m.PublisherNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovMsgStruct(uint64(m.Type))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	l = len(m.UrlBin)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.SrvTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.SrvTimestamp))
	}
	if m.BDelete {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WeiboUrl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Urls) > 0 {
		for _, s := range m.Urls {
			l = len(s)
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SPublishWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ContentType != 0 {
		n += 1 + sovMsgStruct(uint64(m.ContentType))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if len(m.Url) > 0 {
		for _, s := range m.Url {
			l = len(s)
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQPublishWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Weibo != nil {
		l = m.Weibo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CPublishWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Weibo != nil {
		l = m.Weibo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvPublishWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.WeiboPublisherId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboPublisherId))
	}
	if m.LikerId != 0 {
		n += 1 + sovMsgStruct(uint64(m.LikerId))
	}
	l = len(m.LikerNickName)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SLikeWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WeiboPublisherId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboPublisherId))
	}
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQLikeWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LikeWeibo != nil {
		l = m.LikeWeibo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CLikeWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LikeWeibo != nil {
		l = m.LikeWeibo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvLikeWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SCancelLikeWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WeiboPublisherId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboPublisherId))
	}
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CCancelLikeWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReplyWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.WeiboPublisherId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboPublisherId))
	}
	if m.CommentedId != 0 {
		n += 1 + sovMsgStruct(uint64(m.CommentedId))
	}
	if m.BeCommentedId != 0 {
		n += 1 + sovMsgStruct(uint64(m.BeCommentedId))
	}
	if m.BeCommentatorId != 0 {
		n += 1 + sovMsgStruct(uint64(m.BeCommentatorId))
	}
	if m.CommentatorId != 0 {
		n += 1 + sovMsgStruct(uint64(m.CommentatorId))
	}
	l = len(m.CommentContent)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.CommentTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.CommentTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SReplyWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReplyWeibo != nil {
		l = m.ReplyWeibo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQReplyWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReplyWeibo != nil {
		l = m.ReplyWeibo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CReplyWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReplyWeibo != nil {
		l = m.ReplyWeibo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvReplyWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CommentId != 0 {
		n += 1 + sovMsgStruct(uint64(m.CommentId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SDeleteWeiboReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.WeiboPublisherId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboPublisherId))
	}
	if m.CommentId != 0 {
		n += 1 + sovMsgStruct(uint64(m.CommentId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CDeleteWeiboReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SDeleteWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MQDeleteWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CDeleteWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.WeiboId != 0 {
		n += 1 + sovMsgStruct(uint64(m.WeiboId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CRecvDeleteWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BrowseWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Weibo != nil {
		l = m.Weibo.Size()
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if len(m.LikerId) > 0 {
		l = 0
		for _, e := range m.LikerId {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	if len(m.ReplayWeibo) > 0 {
		for _, e := range m.ReplayWeibo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SBrowseSomeoneWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.LastTimeStamp))
	}
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CBrowseSomeoneWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BrowseWeibo) > 0 {
		for _, e := range m.BrowseWeibo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.Strategy != 0 {
		n += 1 + sovMsgStruct(uint64(m.Strategy))
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SBrowseFriendWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FriendId != 0 {
		n += 1 + sovMsgStruct(uint64(m.FriendId))
	}
	if m.LastTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.LastTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CBrowseFriendWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BrowseWeibo) > 0 {
		for _, e := range m.BrowseWeibo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SBrowseAllWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastMsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.LastMsgTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CBrowseAllWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BrowseWeibo) > 0 {
		for _, e := range m.BrowseWeibo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SDontLookFriendWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FriendIds) > 0 {
		l = 0
		for _, e := range m.FriendIds {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	if m.BNotLook {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CDontLookFriendWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FriendBriefInfos) > 0 {
		for _, e := range m.FriendBriefInfos {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SForbiddenFriendLookWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FriendIds) > 0 {
		l = 0
		for _, e := range m.FriendIds {
			l += sovMsgStruct(uint64(e))
		}
		n += 1 + sovMsgStruct(uint64(l)) + l
	}
	if m.BForbidden {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CForbiddenFriendLookWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FriendBriefInfos) > 0 {
		for _, e := range m.FriendBriefInfos {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SAllowStrangerLookWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Allow {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CAllowStrangerLookWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SIsAllowStrangerLookWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CIsAllowStrangerLookWeibo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BAllow {
		n += 2
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SGetFriendLookWeiboStrategy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CGetFriendLookWeiboStrategy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Strategy != 0 {
		n += 1 + sovMsgStruct(uint64(m.Strategy))
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SFriendLookWeiboStrategy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Strategy != 0 {
		n += 1 + sovMsgStruct(uint64(m.Strategy))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CFriendLookWeiboStrategy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SGetDontLookFriendWeiboList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CGetDontLookFriendWeiboList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FriendBriefInfo) > 0 {
		for _, e := range m.FriendBriefInfo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SGetForbiddenFriendLookWeiboList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CGetForbiddenFriendLookWeiboList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FriendBriefInfo) > 0 {
		for _, e := range m.FriendBriefInfo {
			l = e.Size()
			n += 1 + l + sovMsgStruct(uint64(l))
		}
	}
	l = len(m.Ret)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SWithdrawMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ServerTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.ServerTimeStamp))
	}
	if m.ReceiverId != 0 {
		n += 1 + sovMsgStruct(uint64(m.ReceiverId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CWithdrawMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ServerTimeStamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.ServerTimeStamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *C2SThirdPlatformAccountLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.TerminalType != 0 {
		n += 1 + sovMsgStruct(uint64(m.TerminalType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *S2CThirdPlatformAccountLogin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AccountId))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.LastMsgTimestamp != 0 {
		n += 1 + sovMsgStruct(uint64(m.LastMsgTimestamp))
	}
	if m.AgentId != 0 {
		n += 1 + sovMsgStruct(uint64(m.AgentId))
	}
	l = len(m.AgentNickname)
	if l > 0 {
		n += 1 + l + sovMsgStruct(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMsgStruct(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgStruct(x uint64) (n int) {
	return sovMsgStruct(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *WebSocketMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebSocketMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebSocketMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgIdStr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgIdStr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BinMsg", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BinMsg = append(m.BinMsg[:0], dAtA[iNdEx:postIndex]...)
			if m.BinMsg == nil {
				m.BinMsg = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CErrorCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CErrorCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CErrorCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrCode", wireType)
			}
			m.ErrCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrCode |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgTimeStamp", wireType)
			}
			m.MsgTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrNotice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrNotice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2LGateAddr) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2l_gate_addr: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2l_gate_addr: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *L2CGateAddr) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: L2c_gate_addr: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: L2c_gate_addr: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ip = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SRegisterAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SRegisterAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SRegisterAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pwd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pwd = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CliTimeStamp", wireType)
			}
			m.CliTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CliTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TerminalType", wireType)
			}
			m.TerminalType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TerminalType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerificationCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerificationCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegionCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRegisterAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRegisterAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRegisterAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastMsgTimestamp", wireType)
			}
			m.LastMsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastMsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HuanXinAccount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HuanXinAccount == nil {
				m.HuanXinAccount = &HuanXinAccount{}
			}
			if err := m.HuanXinAccount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CliTimeStamp", wireType)
			}
			m.CliTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CliTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pwd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pwd = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TerminalType", wireType)
			}
			m.TerminalType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TerminalType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SUsernameLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SUsernameLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SUsernameLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pwd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pwd = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CliTimeStamp", wireType)
			}
			m.CliTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CliTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TerminalType", wireType)
			}
			m.TerminalType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TerminalType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserBriefInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserBriefInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserBriefInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadPortrait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadPortrait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FriendRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FriendRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FriendRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqDateTime", wireType)
			}
			m.ReqDateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqDateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderHeadPortrait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderHeadPortrait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FriendVerification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FriendVerification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FriendVerification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BecomeFriendDateTime", wireType)
			}
			m.BecomeFriendDateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BecomeFriendDateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendHeadPortrait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendHeadPortrait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChatGroupMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChatGroupMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChatGroupMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FriendInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FriendInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FriendInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemarkName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemarkName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PortraitUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PortraitUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			m.Creator = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Creator |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PersonChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PersonChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PersonChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatGroup == nil {
				m.ChatGroup = &ChatGroup{}
			}
			if err := m.ChatGroup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastMsgTimestamp", wireType)
			}
			m.LastMsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastMsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HuanXinAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HuanXinAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HuanXinAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PortraitUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PortraitUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastMsgTimestamp", wireType)
			}
			m.LastMsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastMsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendReqs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendReqs = append(m.FriendReqs, &FriendRequest{})
			if err := m.FriendReqs[len(m.FriendReqs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendVers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendVers = append(m.FriendVers, &FriendVerification{})
			if err := m.FriendVers[len(m.FriendVers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupMembers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroupMembers = append(m.ChatGroupMembers, &ChatGroupMember{})
			if err := m.ChatGroupMembers[len(m.ChatGroupMembers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqJoinChatGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReqJoinChatGroup = append(m.ReqJoinChatGroup, &ReqJoinChatGroup{})
			if err := m.ReqJoinChatGroup[len(m.ReqJoinChatGroup)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendInfo = append(m.FriendInfo, &FriendInfo{})
			if err := m.FriendInfo[len(m.FriendInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroups = append(m.ChatGroups, &PersonChatGroup{})
			if err := m.ChatGroups[len(m.ChatGroups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.DeleteFriendId = append(m.DeleteFriendId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.DeleteFriendId) == 0 {
					m.DeleteFriendId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.DeleteFriendId = append(m.DeleteFriendId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteFriendId", wireType)
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HuanXinAccount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HuanXinAccount == nil {
				m.HuanXinAccount = &HuanXinAccount{}
			}
			if err := m.HuanXinAccount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentInfo = append(m.AgentInfo, &AgentInfo{})
			if err := m.AgentInfo[len(m.AgentInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CUsernameLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CUsernameLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CUsernameLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PortraitUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PortraitUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastMsgTimestamp", wireType)
			}
			m.LastMsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastMsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendReqs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendReqs = append(m.FriendReqs, &FriendRequest{})
			if err := m.FriendReqs[len(m.FriendReqs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendVers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendVers = append(m.FriendVers, &FriendVerification{})
			if err := m.FriendVers[len(m.FriendVers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupMembers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroupMembers = append(m.ChatGroupMembers, &ChatGroupMember{})
			if err := m.ChatGroupMembers[len(m.ChatGroupMembers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqJoinChatGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReqJoinChatGroup = append(m.ReqJoinChatGroup, &ReqJoinChatGroup{})
			if err := m.ReqJoinChatGroup[len(m.ReqJoinChatGroup)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendInfo = append(m.FriendInfo, &FriendInfo{})
			if err := m.FriendInfo[len(m.FriendInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroups = append(m.ChatGroups, &PersonChatGroup{})
			if err := m.ChatGroups[len(m.ChatGroups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.DeleteFriendId = append(m.DeleteFriendId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.DeleteFriendId) == 0 {
					m.DeleteFriendId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.DeleteFriendId = append(m.DeleteFriendId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteFriendId", wireType)
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HuanXinAccount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HuanXinAccount == nil {
				m.HuanXinAccount = &HuanXinAccount{}
			}
			if err := m.HuanXinAccount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentInfo = append(m.AgentInfo, &AgentInfo{})
			if err := m.AgentInfo[len(m.AgentInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AgentInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AgentInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AgentInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			m.AgentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AgentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentUsername", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentUsername = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentportraitUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentportraitUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SLogout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SLogout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SLogout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CLogout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CLogout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CLogout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Str", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Str = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SHeartbeat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SHeartbeat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SHeartbeat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeStamp", wireType)
			}
			m.TimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CHeartbeat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CHeartbeat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CHeartbeat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeStamp", wireType)
			}
			m.TimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CKick) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CKick: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CKick: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRepeatLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRepeatLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRepeatLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SRename) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SRename: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SRename: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Newname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Newname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRename) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRename: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRename: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Newname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Newname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeviceInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeviceInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeviceInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceInfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceInfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceProducter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceProducter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SDeviceInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SDeviceInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SDeviceInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeviceInfo == nil {
				m.DeviceInfo = &DeviceInfo{}
			}
			if err := m.DeviceInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CDeviceInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CDeviceInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CDeviceInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SSetUserName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SSetUserName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SSetUserName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CSetUserName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CSetUserName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CSetUserName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SSetHeadPortrait) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SSetHeadPortrait: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SSetHeadPortrait: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadPortraitUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadPortraitUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CSetHeadPortrait) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CSetHeadPortrait: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CSetHeadPortrait: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SChangePassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SChangePassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SChangePassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrPassword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StrPassword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CChangePassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CChangePassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CChangePassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SForgetPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SForgetPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SForgetPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNum", wireType)
			}
			m.PhoneNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PhoneNum |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerificationCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerificationCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegionCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CForgetPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CForgetPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CForgetPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SSetFriendRemarkName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SSetFriendRemarkName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SSetFriendRemarkName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendRemarkName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendRemarkName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CSetFriendRemarkName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CSetFriendRemarkName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CSetFriendRemarkName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendRemarkName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendRemarkName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SGetVerificationCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SGetVerificationCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SGetVerificationCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNum", wireType)
			}
			m.PhoneNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PhoneNum |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= VerificationCodeAction(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CGetVerificationCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CGetVerificationCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CGetVerificationCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoiceMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoiceMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoiceMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AudioSecond", wireType)
			}
			m.AudioSecond = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AudioSecond |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AudioUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AudioUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoSecond", wireType)
			}
			m.VideoSecond = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VideoSecond |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VideoUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoThumbnail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VideoThumbnail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSize", wireType)
			}
			m.FileSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileThumbnail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileThumbnail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CardMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CardMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CardMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Portrait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Portrait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChatMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChatMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChatMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountIDCliTimeStamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountIDCliTimeStamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderheadPortraitUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderheadPortraitUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithDraw", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithDraw = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderRemarkName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderRemarkName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoiceMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VoiceMessage == nil {
				m.VoiceMessage = &VoiceMessage{}
			}
			if err := m.VoiceMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoMessage == nil {
				m.VideoMessage = &VideoMessage{}
			}
			if err := m.VideoMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FileMessage == nil {
				m.FileMessage = &FileMessage{}
			}
			if err := m.FileMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CardMessage == nil {
				m.CardMessage = &CardMessage{}
			}
			if err := m.CardMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderAgentId", wireType)
			}
			m.SenderAgentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderAgentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SPrivateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SPrivateChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SPrivateChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatMsg == nil {
				m.ChatMsg = &ChatMessage{}
			}
			if err := m.ChatMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CliTimeStamp", wireType)
			}
			m.CliTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CliTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQPrivateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQPrivateChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQPrivateChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatMsg == nil {
				m.ChatMsg = &ChatMessage{}
			}
			if err := m.ChatMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CPrivateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CPrivateChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CPrivateChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderheadPortraitUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderheadPortraitUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CliTimeStamp", wireType)
			}
			m.CliTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CliTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountIDCliTimeStamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountIDCliTimeStamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvPrivateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvPrivateChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvPrivateChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatMsg == nil {
				m.ChatMsg = &ChatMessage{}
			}
			if err := m.ChatMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2COtherTerminalPrivateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2COtherTerminalPrivateChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2COtherTerminalPrivateChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatMsg == nil {
				m.ChatMsg = &ChatMessage{}
			}
			if err := m.ChatMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CLoginSomewhereElse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CLoginSomewhereElse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CLoginSomewhereElse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SLastMsgTimeStamp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SLastMsgTimeStamp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SLastMsgTimeStamp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SGetOfflinePrivateChatMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SGetOfflinePrivateChatMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SGetOfflinePrivateChatMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsWebSide", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsWebSide = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CGetOfflinePrivateChatMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CGetOfflinePrivateChatMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CGetOfflinePrivateChatMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msgs = append(m.Msgs, &ChatMessage{})
			if err := m.Msgs[len(m.Msgs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SHuanXinPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SHuanXinPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SHuanXinPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CHuanXinPush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CHuanXinPush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CHuanXinPush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SPicWillBeSend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SPicWillBeSend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SPicWillBeSend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CPicWillBeSend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CPicWillBeSend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CPicWillBeSend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SAddFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SAddFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SAddFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgTimestamp", wireType)
			}
			m.MsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQAddFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQAddFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQAddFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddFriend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AddFriend == nil {
				m.AddFriend = &C2SAddFriend{}
			}
			if err := m.AddFriend.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CAddFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CAddFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CAddFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvAddFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvAddFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvAddFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderHeadPortrait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderHeadPortrait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SAgreeBecomeFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SAgreeBecomeFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SAgreeBecomeFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgTimestamp", wireType)
			}
			m.MsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CAgreeBecomeFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CAgreeBecomeFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CAgreeBecomeFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgTimestamp", wireType)
			}
			m.MsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreeBecomeFriendHeadPortrait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgreeBecomeFriendHeadPortrait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvAgreeBecomeFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvAgreeBecomeFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvAgreeBecomeFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReceiverNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverHeadPortrait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReceiverHeadPortrait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQAgreeBecomeFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQAgreeBecomeFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQAgreeBecomeFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgreeBeFriend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AgreeBeFriend == nil {
				m.AgreeBeFriend = &C2SAgreeBecomeFriend{}
			}
			if err := m.AgreeBeFriend.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgTimestamp", wireType)
			}
			m.MsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2COtherTerminalAgreeBecomeFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2COtherTerminalAgreeBecomeFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2COtherTerminalAgreeBecomeFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SReadFriendReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SReadFriendReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SReadFriendReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CReadFriendReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CReadFriendReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CReadFriendReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SDeleteFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SDeleteFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SDeleteFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQDeleteFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQDeleteFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQDeleteFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CDeleteFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CDeleteFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CDeleteFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvDeleteFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvDeleteFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvDeleteFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SConfirmDeleteFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SConfirmDeleteFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SConfirmDeleteFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CConfirmDeleteFriend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CConfirmDeleteFriend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CConfirmDeleteFriend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SCreateChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SCreateChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SCreateChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PicChatGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PicChatGroup = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.FirendIds = append(m.FirendIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.FirendIds) == 0 {
					m.FirendIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.FirendIds = append(m.FirendIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field FirendIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PicChatGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PicChatGroup = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Members = append(m.Members, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Members) == 0 {
					m.Members = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Members = append(m.Members, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupAdminId", wireType)
			}
			m.ChatGroupAdminId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupAdminId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CCreateChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CCreateChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CCreateChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ccg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ccg == nil {
				m.Ccg = &CreateChatGroup{}
			}
			if err := m.Ccg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQCreateChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQCreateChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQCreateChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ccg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ccg == nil {
				m.Ccg = &CreateChatGroup{}
			}
			if err := m.Ccg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvCreateChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvCreateChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvCreateChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ccg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ccg == nil {
				m.Ccg = &CreateChatGroup{}
			}
			if err := m.Ccg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupReqMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroupReqMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rjcg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rjcg == nil {
				m.Rjcg = &ReqJoinChatGroup{}
			}
			if err := m.Rjcg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rjcg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rjcg == nil {
				m.Rjcg = &ReqJoinChatGroup{}
			}
			if err := m.Rjcg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rjcg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rjcg == nil {
				m.Rjcg = &ReqJoinChatGroup{}
			}
			if err := m.Rjcg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqUid", wireType)
			}
			m.ReqUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CSomeOneReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CSomeOneReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CSomeOneReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rjcg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rjcg == nil {
				m.Rjcg = &ReqJoinChatGroup{}
			}
			if err := m.Rjcg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqUid", wireType)
			}
			m.ReqUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SAgreeSomeOneReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SAgreeSomeOneReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SAgreeSomeOneReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqUid", wireType)
			}
			m.ReqUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqId", wireType)
			}
			m.ReqId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReqNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQAgreeSomeOneReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQAgreeSomeOneReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQAgreeSomeOneReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQManagerAgreeSomeOneReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQManagerAgreeSomeOneReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQManagerAgreeSomeOneReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CManagerAgreeJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CManagerAgreeJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CManagerAgreeJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CManagerAgreeSomeOneReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CManagerAgreeSomeOneReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CManagerAgreeSomeOneReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvManagerAgreeSomeOneReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvManagerAgreeSomeOneReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvManagerAgreeSomeOneReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SRefuseSomeOneReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SRefuseSomeOneReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SRefuseSomeOneReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqUid", wireType)
			}
			m.ReqUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefuseReqJoinChatGroupMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefuseReqJoinChatGroupMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQRefuseSomeOneReqJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQRefuseSomeOneReqJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQRefuseSomeOneReqJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqUid", wireType)
			}
			m.ReqUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefuseReqJoinChatGroupMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefuseReqJoinChatGroupMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CManagerRefuseJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CManagerRefuseJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CManagerRefuseJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefuseReqJoinChatGroupMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefuseReqJoinChatGroupMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChatGroupMemberRds) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChatGroupMemberRds: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChatGroupMemberRds: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flag", wireType)
			}
			m.Flag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flag |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserHeadPortraitUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserHeadPortraitUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SChatGroupInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SChatGroupInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SChatGroupInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CChatGroupInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CChatGroupInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CChatGroupInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupHeadPortrait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroupHeadPortrait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupOwnerId", wireType)
			}
			m.ChatGroupOwnerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupOwnerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupMemberRds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatGroupMemberRds = append(m.ChatGroupMemberRds, &ChatGroupMemberRds{})
			if err := m.ChatGroupMemberRds[len(m.ChatGroupMemberRds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InviteJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InviteJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InviteJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviterId", wireType)
			}
			m.InviterId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InviterId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviterNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InviterNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteeId", wireType)
			}
			m.InviteeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InviteeId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteeNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InviteeNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SInviteJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SInviteJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SInviteJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.FriendIds = append(m.FriendIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.FriendIds) == 0 {
					m.FriendIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.FriendIds = append(m.FriendIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQInviteJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQInviteJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQInviteJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteJoinChatGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InviteJoinChatGroup == nil {
				m.InviteJoinChatGroup = &InviteJoinChatGroup{}
			}
			if err := m.InviteJoinChatGroup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CInviteYouJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CInviteYouJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CInviteYouJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteJoinChatGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InviteJoinChatGroup == nil {
				m.InviteJoinChatGroup = &InviteJoinChatGroup{}
			}
			if err := m.InviteJoinChatGroup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvInviteJoinChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvInviteJoinChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvInviteJoinChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SCancelChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SCancelChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SCancelChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CancelChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CancelChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CancelChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQCancelChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQCancelChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQCancelChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelChatGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CancelChatGroup == nil {
				m.CancelChatGroup = &CancelChatGroup{}
			}
			if err := m.CancelChatGroup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CSomeOneCancelChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CSomeOneCancelChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CSomeOneCancelChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelChatGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CancelChatGroup == nil {
				m.CancelChatGroup = &CancelChatGroup{}
			}
			if err := m.CancelChatGroup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvCancelChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvCancelChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvCancelChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SUnChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SUnChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SUnChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQUnChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQUnChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQUnChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CUnChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CUnChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CUnChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvUnChatGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvUnChatGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvUnChatGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChatGroupKick) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChatGroupKick: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChatGroupKick: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SChatGroupKick) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SChatGroupKick: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SChatGroupKick: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupKick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatGroupKick == nil {
				m.ChatGroupKick = &ChatGroupKick{}
			}
			if err := m.ChatGroupKick.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQChatGroupKick) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQChatGroupKick: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQChatGroupKick: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupKick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatGroupKick == nil {
				m.ChatGroupKick = &ChatGroupKick{}
			}
			if err := m.ChatGroupKick.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CKickedByChatGroupManager) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CKickedByChatGroupManager: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CKickedByChatGroupManager: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupKick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatGroupKick == nil {
				m.ChatGroupKick = &ChatGroupKick{}
			}
			if err := m.ChatGroupKick.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CManagerKickSomeOne) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CManagerKickSomeOne: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CManagerKickSomeOne: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupKick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatGroupKick == nil {
				m.ChatGroupKick = &ChatGroupKick{}
			}
			if err := m.ChatGroupKick.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvChatGroupKick) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvChatGroupKick: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvChatGroupKick: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SChatGroupList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SChatGroupList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SChatGroupList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CChatGroupList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CChatGroupList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CChatGroupList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ChatGroupId = append(m.ChatGroupId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ChatGroupId) == 0 {
					m.ChatGroupId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ChatGroupId = append(m.ChatGroupId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiveGroupId", wireType)
			}
			m.ReceiveGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiveGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderId", wireType)
			}
			m.SenderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SenderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccoutIdCliTimeStamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccoutIdCliTimeStamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderheadPortraitUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderheadPortraitUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithDraw", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithDraw = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoiceMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VoiceMessage == nil {
				m.VoiceMessage = &VoiceMessage{}
			}
			if err := m.VoiceMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoMessage == nil {
				m.VideoMessage = &VideoMessage{}
			}
			if err := m.VideoMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FileMessage == nil {
				m.FileMessage = &FileMessage{}
			}
			if err := m.FileMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CardMessage == nil {
				m.CardMessage = &CardMessage{}
			}
			if err := m.CardMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SGroupChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SGroupChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SGroupChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatMsg == nil {
				m.ChatMsg = &GroupMessage{}
			}
			if err := m.ChatMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CliTimeStamp", wireType)
			}
			m.CliTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CliTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQGroupChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQGroupChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQGroupChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatMsg == nil {
				m.ChatMsg = &GroupMessage{}
			}
			if err := m.ChatMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CGroupChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CGroupChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CGroupChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccoutIdCliTimeStamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccoutIdCliTimeStamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CliTimeStamp", wireType)
			}
			m.CliTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CliTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvGroupChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvGroupChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvGroupChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChatMsg == nil {
				m.ChatMsg = &GroupMessage{}
			}
			if err := m.ChatMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SChatGroupLastMsgTimeStamp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SChatGroupLastMsgTimeStamp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SChatGroupLastMsgTimeStamp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimeStamp", wireType)
			}
			m.SrvTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SGetOfflineGroupChatMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SGetOfflineGroupChatMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SGetOfflineGroupChatMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupLastMessageTimestamp", wireType)
			}
			m.ChatGroupLastMessageTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupLastMessageTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgTimestamp", wireType)
			}
			m.MsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CGetOfflineGroupChatMsg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CGetOfflineGroupChatMsg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CGetOfflineGroupChatMsg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatGroupId", wireType)
			}
			m.ChatGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msgs = append(m.Msgs, &GroupMessage{})
			if err := m.Msgs[len(m.Msgs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgTimestamp", wireType)
			}
			m.MsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SWithdrawGroupMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SWithdrawGroupMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SWithdrawGroupMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerTimeStamp", wireType)
			}
			m.ServerTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServerTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
			}
			m.GroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CWithdrawGroupMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CWithdrawGroupMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CWithdrawGroupMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerTimeStamp", wireType)
			}
			m.ServerTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServerTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SFindUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SFindUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SFindUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CFindUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CFindUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CFindUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserBriefInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserBriefInfo == nil {
				m.UserBriefInfo = &UserBriefInfo{}
			}
			if err := m.UserBriefInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BShow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BShow = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = append(m.Url, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SAddBlackList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SAddBlackList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SAddBlackList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CAddBlackList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CAddBlackList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CAddBlackList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SMoveOutFriendBlackList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SMoveOutFriendBlackList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SMoveOutFriendBlackList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CMoveOutFriendBlackList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CMoveOutFriendBlackList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CMoveOutFriendBlackList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SGetFriendBlackList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SGetFriendBlackList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SGetFriendBlackList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CGetFriendBlackList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CGetFriendBlackList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CGetFriendBlackList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BlackListIds = append(m.BlackListIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.BlackListIds) == 0 {
					m.BlackListIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BlackListIds = append(m.BlackListIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BlackListIds", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SSetWeiboCover) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SSetWeiboCover: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SSetWeiboCover: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboCoverPic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WeiboCoverPic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CSetWeiboCover) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CSetWeiboCover: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CSetWeiboCover: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SGetWeiboCover) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SGetWeiboCover: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SGetWeiboCover: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CGetWeiboCover) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CGetWeiboCover: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CGetWeiboCover: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrWeiboCoverPicUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StrWeiboCoverPicUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsLikeWeiboCover", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsLikeWeiboCover = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SLikeFriendWeiboCover) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SLikeFriendWeiboCover: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SLikeFriendWeiboCover: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CLikeFriendWeiboCover) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CLikeFriendWeiboCover: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CLikeFriendWeiboCover: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Weibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Weibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Weibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublisherId", wireType)
			}
			m.PublisherId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PublisherId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublisherNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublisherNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrlBin", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UrlBin = append(m.UrlBin[:0], dAtA[iNdEx:postIndex]...)
			if m.UrlBin == nil {
				m.UrlBin = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrvTimestamp", wireType)
			}
			m.SrvTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrvTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BDelete", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BDelete = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WeiboUrl) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeiboUrl: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeiboUrl: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Urls", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Urls = append(m.Urls, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SPublishWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SPublishWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SPublishWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentType", wireType)
			}
			m.ContentType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ContentType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = append(m.Url, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQPublishWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQPublishWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQPublishWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Weibo == nil {
				m.Weibo = &Weibo{}
			}
			if err := m.Weibo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CPublishWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CPublishWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CPublishWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Weibo == nil {
				m.Weibo = &Weibo{}
			}
			if err := m.Weibo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvPublishWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvPublishWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvPublishWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboPublisherId", wireType)
			}
			m.WeiboPublisherId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboPublisherId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikerId", wireType)
			}
			m.LikerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikerNickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LikerNickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SLikeWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SLikeWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SLikeWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboPublisherId", wireType)
			}
			m.WeiboPublisherId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboPublisherId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQLikeWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQLikeWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQLikeWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeWeibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LikeWeibo == nil {
				m.LikeWeibo = &LikeWeibo{}
			}
			if err := m.LikeWeibo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CLikeWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CLikeWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CLikeWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeWeibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LikeWeibo == nil {
				m.LikeWeibo = &LikeWeibo{}
			}
			if err := m.LikeWeibo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvLikeWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvLikeWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvLikeWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SCancelLikeWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SCancelLikeWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SCancelLikeWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboPublisherId", wireType)
			}
			m.WeiboPublisherId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboPublisherId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CCancelLikeWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CCancelLikeWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CCancelLikeWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReplyWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReplyWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReplyWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboPublisherId", wireType)
			}
			m.WeiboPublisherId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboPublisherId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentedId", wireType)
			}
			m.CommentedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentedId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeCommentedId", wireType)
			}
			m.BeCommentedId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BeCommentedId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeCommentatorId", wireType)
			}
			m.BeCommentatorId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BeCommentatorId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentatorId", wireType)
			}
			m.CommentatorId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentatorId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentContent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommentContent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentTimeStamp", wireType)
			}
			m.CommentTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SReplyWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SReplyWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SReplyWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyWeibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyWeibo == nil {
				m.ReplyWeibo = &ReplyWeibo{}
			}
			if err := m.ReplyWeibo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQReplyWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQReplyWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQReplyWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyWeibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyWeibo == nil {
				m.ReplyWeibo = &ReplyWeibo{}
			}
			if err := m.ReplyWeibo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CReplyWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CReplyWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CReplyWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyWeibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyWeibo == nil {
				m.ReplyWeibo = &ReplyWeibo{}
			}
			if err := m.ReplyWeibo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvReplyWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvReplyWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvReplyWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentId", wireType)
			}
			m.CommentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SDeleteWeiboReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SDeleteWeiboReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SDeleteWeiboReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboPublisherId", wireType)
			}
			m.WeiboPublisherId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboPublisherId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentId", wireType)
			}
			m.CommentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CDeleteWeiboReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CDeleteWeiboReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CDeleteWeiboReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SDeleteWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SDeleteWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SDeleteWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MQDeleteWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MQDeleteWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MQDeleteWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CDeleteWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CDeleteWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CDeleteWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboId", wireType)
			}
			m.WeiboId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeiboId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CRecvDeleteWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CRecvDeleteWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CRecvDeleteWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BrowseWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BrowseWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BrowseWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Weibo == nil {
				m.Weibo = &Weibo{}
			}
			if err := m.Weibo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.LikerId = append(m.LikerId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.LikerId) == 0 {
					m.LikerId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.LikerId = append(m.LikerId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field LikerId", wireType)
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplayWeibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReplayWeibo = append(m.ReplayWeibo, &ReplyWeibo{})
			if err := m.ReplayWeibo[len(m.ReplayWeibo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SBrowseSomeoneWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SBrowseSomeoneWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SBrowseSomeoneWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTimeStamp", wireType)
			}
			m.LastTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CBrowseSomeoneWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CBrowseSomeoneWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CBrowseSomeoneWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BrowseWeibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BrowseWeibo = append(m.BrowseWeibo, &BrowseWeibo{})
			if err := m.BrowseWeibo[len(m.BrowseWeibo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Strategy", wireType)
			}
			m.Strategy = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Strategy |= FriendLookWeiboStrategy(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SBrowseFriendWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SBrowseFriendWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SBrowseFriendWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendId", wireType)
			}
			m.FriendId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTimeStamp", wireType)
			}
			m.LastTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CBrowseFriendWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CBrowseFriendWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CBrowseFriendWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BrowseWeibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BrowseWeibo = append(m.BrowseWeibo, &BrowseWeibo{})
			if err := m.BrowseWeibo[len(m.BrowseWeibo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SBrowseAllWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SBrowseAllWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SBrowseAllWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastMsgTimestamp", wireType)
			}
			m.LastMsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastMsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CBrowseAllWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CBrowseAllWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CBrowseAllWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BrowseWeibo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BrowseWeibo = append(m.BrowseWeibo, &BrowseWeibo{})
			if err := m.BrowseWeibo[len(m.BrowseWeibo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SDontLookFriendWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SDontLookFriendWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SDontLookFriendWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.FriendIds = append(m.FriendIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.FriendIds) == 0 {
					m.FriendIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.FriendIds = append(m.FriendIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendIds", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BNotLook", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BNotLook = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CDontLookFriendWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CDontLookFriendWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CDontLookFriendWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendBriefInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendBriefInfos = append(m.FriendBriefInfos, &UserBriefInfo{})
			if err := m.FriendBriefInfos[len(m.FriendBriefInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SForbiddenFriendLookWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SForbiddenFriendLookWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SForbiddenFriendLookWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.FriendIds = append(m.FriendIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMsgStruct
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMsgStruct
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.FriendIds) == 0 {
					m.FriendIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMsgStruct
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.FriendIds = append(m.FriendIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendIds", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BForbidden", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BForbidden = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CForbiddenFriendLookWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CForbiddenFriendLookWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CForbiddenFriendLookWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendBriefInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendBriefInfos = append(m.FriendBriefInfos, &UserBriefInfo{})
			if err := m.FriendBriefInfos[len(m.FriendBriefInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SAllowStrangerLookWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SAllowStrangerLookWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SAllowStrangerLookWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Allow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Allow = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CAllowStrangerLookWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CAllowStrangerLookWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CAllowStrangerLookWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SIsAllowStrangerLookWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SIsAllowStrangerLookWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SIsAllowStrangerLookWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CIsAllowStrangerLookWeibo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CIsAllowStrangerLookWeibo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CIsAllowStrangerLookWeibo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BAllow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BAllow = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SGetFriendLookWeiboStrategy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SGetFriendLookWeiboStrategy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SGetFriendLookWeiboStrategy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CGetFriendLookWeiboStrategy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CGetFriendLookWeiboStrategy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CGetFriendLookWeiboStrategy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Strategy", wireType)
			}
			m.Strategy = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Strategy |= FriendLookWeiboStrategy(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SFriendLookWeiboStrategy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SFriendLookWeiboStrategy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SFriendLookWeiboStrategy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Strategy", wireType)
			}
			m.Strategy = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Strategy |= FriendLookWeiboStrategy(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CFriendLookWeiboStrategy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CFriendLookWeiboStrategy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CFriendLookWeiboStrategy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SGetDontLookFriendWeiboList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SGetDontLookFriendWeiboList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SGetDontLookFriendWeiboList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CGetDontLookFriendWeiboList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CGetDontLookFriendWeiboList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CGetDontLookFriendWeiboList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendBriefInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendBriefInfo = append(m.FriendBriefInfo, &UserBriefInfo{})
			if err := m.FriendBriefInfo[len(m.FriendBriefInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SGetForbiddenFriendLookWeiboList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SGetForbiddenFriendLookWeiboList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SGetForbiddenFriendLookWeiboList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CGetForbiddenFriendLookWeiboList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CGetForbiddenFriendLookWeiboList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CGetForbiddenFriendLookWeiboList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendBriefInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FriendBriefInfo = append(m.FriendBriefInfo, &UserBriefInfo{})
			if err := m.FriendBriefInfo[len(m.FriendBriefInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SWithdrawMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SWithdrawMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SWithdrawMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerTimeStamp", wireType)
			}
			m.ServerTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServerTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverId", wireType)
			}
			m.ReceiverId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CWithdrawMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CWithdrawMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CWithdrawMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerTimeStamp", wireType)
			}
			m.ServerTimeStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ServerTimeStamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *C2SThirdPlatformAccountLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2SThirdPlatformAccountLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2SThirdPlatformAccountLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TerminalType", wireType)
			}
			m.TerminalType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TerminalType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2CThirdPlatformAccountLogin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2CThirdPlatformAccountLogin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2CThirdPlatformAccountLogin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			m.AccountId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastMsgTimestamp", wireType)
			}
			m.LastMsgTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastMsgTimestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			m.AgentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AgentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentNickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgStruct
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentNickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgStruct(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMsgStruct
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgStruct(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgStruct
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgStruct
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgStruct
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthMsgStruct
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowMsgStruct
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipMsgStruct(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthMsgStruct
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthMsgStruct = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgStruct   = fmt.Errorf("proto: integer overflow")
)
